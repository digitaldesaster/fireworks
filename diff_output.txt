diff --git a/ReadMe.md b/ReadMe.md
index 556a39b..1898ff5 100644
--- a/ReadMe.md
+++ b/ReadMe.md
@@ -52,7 +52,15 @@ npx tailwindcss init
 npm i -D @iconify/tailwind @iconify/json
 ```
 
-### 6. Start the Flask Server, Browser-Sync, and the TailwindCSS Watcher
+### 6. Create Folder /core/documents
+
+```bash
+mkdir core/documents
+sudo chown -R www-data:www-data /var/www/tests_alex/fireworks/core/documents
+sudo chmod -R 775 /var/www/tests_alex/fireworks/core/documents
+```
+
+### 7. Start the Flask Server, Browser-Sync, and the TailwindCSS Watcher
 
 Press `cmd + shift + p` and run "Start All" to start the Flask server, Browser-Sync, and the TailwindCSS watcher.
 
@@ -62,13 +70,13 @@ Or start them separately:
 - Start Browser-Sync
 - Watch CSS with TailwindCSS
 
-### 7. Remove the .git Folder
+### 8. Remove the .git Folder
 
 ```bash
 sudo rm -rf .git
 ```
 
-### 8. Prepare the Git Repository
+### 9. Prepare the Git Repository
 
 ```bash
 git init
@@ -83,13 +91,13 @@ git commit -m "Initial commit"
 git branch -M main
 ```
 
-### 9. Initialize a New Git Repository
+### 10. Initialize a New Git Repository
 
 ```bash
 gh repo create my_new_project --public --source=. --remote=origin
 ```
 
-### 10. Push the Changes to the Remote Repository
+### 11. Push the Changes to the Remote Repository
 
 ```bash
 git push -u origin main
diff --git a/ai/ai_insert_models.py b/ai/ai_insert_models.py
index 1080fea..647821f 100644
--- a/ai/ai_insert_models.py
+++ b/ai/ai_insert_models.py
@@ -13,12 +13,12 @@ from core.db_connect import *
 models = [
   {'provider':'openai','model':'gpt-4o','name':'gpt-4o'},
   {'provider':'openai','model':'gpt-4o-mini','name':'gpt-4o-mini'},
-  {'provider':'openai','model':'gpt-4-turbo-preview','name':'gpt-4-turbo'},
-  {'provider':'together','model':'meta-llama/Llama-2-70b-chat-hf','name':'meta-llama-2-70b'},
-  {'provider':'anthropic','model':'claude-3-haiku-20240307','name':'claude-3-haiku'},
-  {'provider':'anthropic','model':'claude-3-opus-20240229','name':'claude-3-opus'},
-   {'provider':'anthropic','model':'claude-3-5-sonnet-20240620','name':'claude-3.5-sonnet'},
-   {'provider':'deepseek','model':'deepseek-chat','name':'deepseek-chat'},
+  # {'provider':'openai','model':'gpt-4-turbo-preview','name':'gpt-4-turbo'},
+  # {'provider':'together','model':'meta-llama/Llama-2-70b-chat-hf','name':'meta-llama-2-70b'},
+  # {'provider':'anthropic','model':'claude-3-haiku-20240307','name':'claude-3-haiku'},
+  # {'provider':'anthropic','model':'claude-3-opus-20240229','name':'claude-3-opus'},
+  #  {'provider':'anthropic','model':'claude-3-5-sonnet-20240620','name':'claude-3.5-sonnet'},
+  #  {'provider':'deepseek','model':'deepseek-chat','name':'deepseek-chat'},
    {'provider':'perplexity','model':'llama-3.1-sonar-large-128k-online','name':'perplexity-llama-3.1-online'},
   ]
 
diff --git a/ai/ai_test.py b/ai/ai_test.py
index abcb32f..11e9c59 100644
--- a/ai/ai_test.py
+++ b/ai/ai_test.py
@@ -22,6 +22,6 @@ model = {'provider': 'deepseek', 'model': 'deepseek-chat', 'name': 'deepseek-cha
 # Prompt.objects().delete()
 # File.objects().delete()
 
-user = User.objects(email='alexander.fillips@gmail.com').first()
+user = User.objects(email='alexander.fillips@micronova.de').first()
 user.role = 'admin'
 user.save()
\ No newline at end of file
diff --git a/app.py b/app.py
index 39a6d8b..ace8453 100644
--- a/app.py
+++ b/app.py
@@ -7,6 +7,7 @@ from core.db_user import User
 from flask_wtf.csrf import CSRFProtect
 import json
 from werkzeug.utils import secure_filename
+from bson.objectid import ObjectId
 
 # Import functions from helper.py and db_helper.py
 from core.helper import getList, handleDocument, deleteDocument, upload_file
@@ -94,8 +95,28 @@ def index():
 @app.route('/d/<name>/<id>/<return_format>', methods=['POST', 'GET'])
 @login_required
 def doc(name, id='', return_format='html'):
+	# Add special handling for history documents
+	if name == 'history' and id:
+		# Get the history document
+		from core.db_default import getDefaults
+		default = getDefaults('history')
+		if default:
+			try:
+				doc = default.collection.objects(_id=ObjectId(id)).first()
+				if not doc or doc.user_id != str(current_user.id):
+					flash('Access denied. You can only view your own history.', 'error')
+					return redirect(url_for('list', collection='history'))
+			except Exception as e:
+				print(f"[DEBUG] Error accessing history document: {str(e)}")
+				flash('Error accessing history document', 'error')
+				return redirect(url_for('list', collection='history'))
+
 	if return_format == 'json':
-		return handleDocument(name, id, request, return_json=True)
+		result = handleDocument(name, id, request, return_json=True)
+		# Ensure we're returning valid JSON
+		if isinstance(result, str):
+			return result
+		return jsonify(result)
 	else:
 		return handleDocument(name, id, request)
 
@@ -113,11 +134,17 @@ def delete_document():
 @login_required
 def list(collection):
 	mode = request.args.get('mode')
-	if collection in ['user', 'users']:
+	
+	# Handle special collections
+	if collection == 'history':
+		# History is always filtered by current user
+		return getList('history', request, return_json=(mode == 'json'))
+	elif collection in ['user', 'users']:
 		if not current_user.is_admin:
 			flash('Access denied. Only administrators can view the user list.', 'error')
 			return redirect(url_for('index'))
 		return getList('user', request, return_json=(mode == 'json'))
+		
 	return getList(collection, request, return_json=(mode == 'json'))
 
 # Route to download a file
diff --git a/codegen/all_code.md b/codegen/all_code.md
index 6325f9f..1729f57 100644
--- a/codegen/all_code.md
+++ b/codegen/all_code.md
@@ -10,11 +10,12 @@ from core.db_user import User
 from flask_wtf.csrf import CSRFProtect
 import json
 from werkzeug.utils import secure_filename
+from bson.objectid import ObjectId
 
 # Import functions from helper.py and db_helper.py
 from core.helper import getList, handleDocument, deleteDocument, upload_file
 from core.db_helper import getFile
-from core.db_document import File
+from core.db_document import File, Prompt
 
 app = Flask(__name__)
 app.secret_key = os.getenv('FLASK_SECRET_KEY')
@@ -67,7 +68,10 @@ csrf.init_app(app)
 
 @login_manager.user_loader
 def load_user(user_id):
-	return User.objects(email=user_id).first()
+	try:
+		return User.objects(id=user_id).first()
+	except:
+		return None
 
 @app.route('/register', methods=['GET', 'POST'])
 def register():
@@ -94,10 +98,30 @@ def index():
 @app.route('/d/<name>/<id>/<return_format>', methods=['POST', 'GET'])
 @login_required
 def doc(name, id='', return_format='html'):
+	# Add special handling for history documents
+	if name == 'history' and id:
+		# Get the history document
+		from core.db_default import getDefaults
+		default = getDefaults('history')
+		if default:
+			try:
+				doc = default.collection.objects(_id=ObjectId(id)).first()
+				if not doc or doc.user_id != str(current_user.id):
+					flash('Access denied. You can only view your own history.', 'error')
+					return redirect(url_for('list', collection='history'))
+			except Exception as e:
+				print(f"[DEBUG] Error accessing history document: {str(e)}")
+				flash('Error accessing history document', 'error')
+				return redirect(url_for('list', collection='history'))
+
 	if return_format == 'json':
-		return handleDocument(name, id,request, return_json=True)
+		result = handleDocument(name, id, request, return_json=True)
+		# Ensure we're returning valid JSON
+		if isinstance(result, str):
+			return result
+		return jsonify(result)
 	else:
-		return handleDocument(name, id,request)
+		return handleDocument(name, id, request)
 
 # Route to delete a document
 @app.route('/document/delete')
@@ -113,11 +137,17 @@ def delete_document():
 @login_required
 def list(collection):
 	mode = request.args.get('mode')
-	if collection in ['user', 'users']:
+	
+	# Handle special collections
+	if collection == 'history':
+		# History is always filtered by current user
+		return getList('history', request, return_json=(mode == 'json'))
+	elif collection in ['user', 'users']:
 		if not current_user.is_admin:
 			flash('Access denied. Only administrators can view the user list.', 'error')
 			return redirect(url_for('index'))
 		return getList('user', request, return_json=(mode == 'json'))
+		
 	return getList(collection, request, return_json=(mode == 'json'))
 
 # Route to download a file
@@ -192,34 +222,99 @@ module.exports = {
 };
 ```
 
-## index.html
+## login.html
 
 ```
 <!doctype html>
-<html lang="en" data-theme="light" class="h-full overflow-y-scroll">
-  {% include('main/header.html') %}
-  <body class="min-h-full flex flex-col bg-gray-50">
-    {% include('main/nav.html') %}
-    <main class="flex-1 lg:pl-64">
-      <div class="h-full flex items-center justify-center p-4">
-        <div class="card max-w-2xl mx-auto">
-          <div class="card-body text-center">
-            <h5 class="card-title mb-2.5">
-              Welcome back, {{ current_user.firstname }} {{ current_user.name
-              }}!
-            </h5>
-            <p class="mb-4">
-              We're glad to see you again. Here's your personal dashboard
-              overview.
-            </p>
-            <div class="card-actions">
-              <button class="btn btn-primary">Learn More</button>
+<html lang="en" data-theme="light" class="overflow-y-scroll">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <title>Login - Flask App</title>
+    <link
+      rel="stylesheet"
+      href="{{ url_for('static', filename='css/output.css') }}"
+    />
+  </head>
+  <body class="bg-base-200 min-h-screen flex items-center justify-center">
+    <div class="w-full max-w-md p-6">
+      <div class="rounded-box border-base-content/10 bg-base-100 p-8 shadow-lg">
+        <div class="text-center mb-8">
+          <h1 class="text-2xl font-bold text-base-content/90">Welcome Back</h1>
+          <p class="text-base-content/60 mt-2">Please sign in to continue</p>
+        </div>
+
+        <form method="POST" action="{{ url_for('login') }}" autocomplete="on">
+          <input type="hidden" name="csrf_token" value="{{ csrf_token() }}" />
+          <div class="space-y-6">
+            <div class="form-control">
+              <label class="label" for="email">
+                <span class="label-text">Email</span>
+              </label>
+              <input
+                type="email"
+                id="email"
+                name="email"
+                class="input input-bordered w-full"
+                placeholder="your@email.com"
+                value="{{ email if email }}"
+                required
+                autocomplete="email"
+              />
+            </div>
+
+            <div class="form-control">
+              <label class="label" for="password">
+                <span class="label-text">Password</span>
+              </label>
+              <input
+                type="password"
+                id="password"
+                name="password"
+                class="input input-bordered w-full"
+                placeholder="••••••••"
+                required
+                autocomplete="current-password"
+              />
+              <label class="label">
+                <a href="#" class="label-text-alt link link-hover"
+                  >Forgot password?</a
+                >
+              </label>
+            </div>
+
+            <div class="form-control">
+              <label class="label cursor-pointer justify-start gap-3">
+                <input
+                  type="checkbox"
+                  class="checkbox checkbox-primary"
+                  name="remember"
+                />
+                <span class="label-text">Remember me</span>
+              </label>
+            </div>
+
+            {% if status == 'error' %}
+            <div class="alert alert-error">
+              <span
+                >{{ message if message else 'Invalid email or password' }}</span
+              >
+            </div>
+            {% endif %}
+
+            <button type="submit" class="btn btn-primary w-full">
+              Sign in
+            </button>
+
+            <div class="text-center">
+              <a href="/register" class="link link-hover text-sm"
+                >Don't have an account? Register</a
+              >
             </div>
           </div>
-        </div>
+        </form>
       </div>
-    </main>
-
+    </div>
     <script src="{{ url_for('static', filename='js/lib/flyonui.js') }}"></script>
   </body>
 </html>
@@ -335,2064 +430,2295 @@ module.exports = {
 </html>
 ```
 
-## login.html
+## index.html
 
 ```
 <!doctype html>
-<html lang="en" data-theme="light" class="overflow-y-scroll">
-  <head>
-    <meta charset="UTF-8" />
-    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
-    <title>Login - Flask App</title>
-    <link
-      rel="stylesheet"
-      href="{{ url_for('static', filename='css/output.css') }}"
-    />
-  </head>
-  <body class="bg-base-200 min-h-screen flex items-center justify-center">
-    <div class="w-full max-w-md p-6">
-      <div class="rounded-box border-base-content/10 bg-base-100 p-8 shadow-lg">
-        <div class="text-center mb-8">
-          <h1 class="text-2xl font-bold text-base-content/90">Welcome Back</h1>
-          <p class="text-base-content/60 mt-2">Please sign in to continue</p>
-        </div>
-
-        <form method="POST" action="{{ url_for('login') }}" autocomplete="on">
-          <input type="hidden" name="csrf_token" value="{{ csrf_token() }}" />
-          <div class="space-y-6">
-            <div class="form-control">
-              <label class="label" for="email">
-                <span class="label-text">Email</span>
-              </label>
-              <input
-                type="email"
-                id="email"
-                name="email"
-                class="input input-bordered w-full"
-                placeholder="your@email.com"
-                value="{{ email if email }}"
-                required
-                autocomplete="email"
-              />
-            </div>
-
-            <div class="form-control">
-              <label class="label" for="password">
-                <span class="label-text">Password</span>
-              </label>
-              <input
-                type="password"
-                id="password"
-                name="password"
-                class="input input-bordered w-full"
-                placeholder="••••••••"
-                required
-                autocomplete="current-password"
-              />
-              <label class="label">
-                <a href="#" class="label-text-alt link link-hover"
-                  >Forgot password?</a
-                >
-              </label>
-            </div>
-
-            <div class="form-control">
-              <label class="label cursor-pointer justify-start gap-3">
-                <input
-                  type="checkbox"
-                  class="checkbox checkbox-primary"
-                  name="remember"
-                />
-                <span class="label-text">Remember me</span>
-              </label>
-            </div>
-
-            {% if status == 'error' %}
-            <div class="alert alert-error">
-              <span
-                >{{ message if message else 'Invalid email or password' }}</span
-              >
-            </div>
-            {% endif %}
-
-            <button type="submit" class="btn btn-primary w-full">
-              Sign in
-            </button>
-
-            <div class="text-center">
-              <a href="/register" class="link link-hover text-sm"
-                >Don't have an account? Register</a
-              >
+<html lang="en" data-theme="light" class="h-full overflow-y-scroll">
+  {% include('main/header.html') %}
+  <body class="min-h-full flex flex-col bg-gray-50">
+    {% include('main/nav.html') %}
+    <main class="flex-1 lg:pl-64">
+      <div class="h-full flex items-center justify-center p-4">
+        <div class="card max-w-2xl mx-auto">
+          <div class="card-body text-center">
+            <h5 class="card-title mb-2.5">
+              Welcome back, {{ current_user.firstname }} {{ current_user.name
+              }}!
+            </h5>
+            <p class="mb-4">
+              We're glad to see you again. Here's your personal dashboard
+              overview.
+            </p>
+            <div class="card-actions">
+              <button class="btn btn-primary">Learn More</button>
             </div>
           </div>
-        </form>
+        </div>
       </div>
-    </div>
+    </main>
+
     <script src="{{ url_for('static', filename='js/lib/flyonui.js') }}"></script>
   </body>
 </html>
 ```
 
-## chat/chat_messages_rendered.html
+## base/document/form.html
 
 ```
-<div
-  id="chat_messages"
-  class="ml-2 mr-2 mt-3 mb-2 md:ml-16 md:mr-16 md:mt-6 overflow-auto flex flex-col"
->
-  {% for message in config.messages %} {% if message.role =='user' %}
-  <div class="flex space-x-4 mb-6">
-    <div
-      class="flex justify-center items-center w-10 h-10 bg-gray-500 text-white rounded-full"
-    >
-      A
-    </div>
-    <div class="message content bg-gray-100">{{message.content}}</div>
-  </div>
-  {% endif %} {% if message.role =='assistant' %}
-  <div class="flex space-x-4 mb-6">
-    <div
-      class="flex justify-center items-center w-10 h-10 bg-gray-600 text-white rounded-full"
-    >
-      <svg
-        xmlns="http://www.w3.org/2000/svg"
-        fill="none"
-        viewBox="0 0 24 24"
-        stroke-width="1.5"
-        stroke="currentColor"
-        class="w-6 h-6"
-      >
-        <path
-          stroke-linecap="round"
-          stroke-linejoin="round"
-          d="M9.813 15.904 9 18.75l-.813-2.846a4.5 4.5 0 0 0-3.09-3.09L2.25 12l2.846-.813a4.5 4.5 0 0 0 3.09-3.09L9 5.25l.813 2.846a4.5 4.5 0 0 0 3.09 3.09L15.75 12l-2.846.813a4.5 4.5 0 0 0-3.09 3.09ZM18.259 8.715 18 9.75l-.259-1.035a3.375 3.375 0 0 0-2.455-2.456L14.25 6l1.036-.259a3.375 3.375 0 0 0 2.455-2.456L18 2.25l.259 1.035a3.375 3.375 0 0 0 2.456 2.456L21.75 6l-1.035.259a3.375 3.375 0 0 0-2.456 2.456ZM16.894 20.567 16.5 21.75l-.394-1.183a2.25 2.25 0 0 0-1.423-1.423L13.5 18.75l1.183-.394a2.25 2.25 0 0 0 1.423-1.423l.394-1.183.394 1.183a2.25 2.25 0 0 0 1.423 1.423l1.183.394-1.183.394a2.25 2.25 0 0 0-1.423 1.423Z"
-        />
-      </svg>
-    </div>
-    <div class="message content">{{message.content}}</div>
-  </div>
-  {% endif %} {% endfor %}
-</div>
-```
+<!doctype html>
+<html lang="en" class="overflow-y-scroll">
+  {% include('/main/header.html') %}
+  <body class="bg-gray-50 min-h-screen">
+    {% include('/main/nav.html') %}
 
-## chat/chat_prompts.html
+    <section class="p-6 flex items-center lg:ml-64">
+      <div class="max-w-screen-xl mx-auto px-4 lg:px-12 w-full">
+        <!-- Start coding here -->
+        <div class="relative bg-white shadow-md dark:bg-gray-800 sm:rounded-lg">
+          <div class="flex items-center justify-center pt-4 px-4">
+            <form
+              method="POST"
+              enctype="multipart/form-data"
+              id="documentForm"
+              class="w-full max-w-lg"
+            >
+              <input
+                type="hidden"
+                name="csrf_token"
+                value="{{ csrf_token() }}"
+              />
+              <input type="hidden" name="id" value="{{document.id}}" />
 
-```
-{% if config.messages | length == 0 %}
-<div
-  id="prompts"
-  class="ml-2 mr-2 mb-2 md:ml-16 md:mr-16 flex flex-col gap-4 mt-8"
->
-  {% if config.history %}
-  <h3
-    class="text-center text-xl font-semibold text-gray-700 dark:text-gray-300"
-  >
-    Last Chats
-  </h3>
-  <div class="flex flex-row flex-wrap justify-center gap-4">
-    {% for item in config.history %}
-    <a href="/chat/history/{{ item.id }}" class="no-underline">
-      <div
-        id="history_{{ loop.index }}"
-        class="relative h-12 w-64 flex items-center justify-center bg-indigo-500 hover:bg-indigo-700 text-white rounded-xl cursor-pointer px-4"
-      >
-        <span class="truncate">{{ item.first_message }}</span>
-      </div>
-    </a>
-    {% endfor %}
-  </div>
-  <hr class="h-px my-2 bg-gray-200 border-0 dark:bg-gray-700" />
-  {% endif %} {% if config.latest_prompts %}
-  <h3
-    class="text-center text-xl font-semibold text-gray-700 dark:text-gray-300"
-  >
-    Latest Prompts
-  </h3>
-  <div class="flex flex-row flex-wrap justify-center gap-4">
-    {% for prompt in config.latest_prompts %}
-    <a href="/chat/prompt/{{ prompt.id }}" class="no-underline">
-      <div
-        id="prompt_{{ loop.index }}"
-        class="relative h-12 w-64 flex items-center justify-center bg-indigo-500 hover:bg-indigo-700 text-white rounded-xl cursor-pointer px-4"
-      >
-        <span class="truncate">{{ prompt.name }}</span>
+              <h1 class="text-2xl font-bold">{{page.title}}</h1>
+              <hr class="my-4" />
+              <div class="flex flex-wrap -mx-3 mb-6">
+                {% include('/base/document/form_elements.html') %}
+              </div>
+
+              <!-- Save and Delete Buttons -->
+              <div class="flex flex-wrap -mx-3 mb-6">
+                <div
+                  class="w-full px-3 mb-6 md:mb-0 flex justify-between space-x-3"
+                >
+                  <button
+                    type="submit"
+                    class="btn btn-primary w-1/2"
+                    id="saveButton"
+                  >
+                    Save
+                  </button>
+                  <button
+                    type="button"
+                    class="btn btn-error w-1/2"
+                    id="deleteButton"
+                  >
+                    Delete
+                  </button>
+                </div>
+              </div>
+            </form>
+
+            <div
+              id="deleteModal"
+              tabindex="-1"
+              class="hidden overflow-y-auto overflow-x-hidden bg-gray-600 bg-opacity-65 backdrop-blur-sm fixed top-0 right-0 left-0 z-50 flex justify-center items-center w-full h-full"
+            >
+              <div
+                id="modalContent"
+                class="relative p-4 w-full max-w-md max-h-full"
+              >
+                <div class="relative bg-white rounded-lg shadow">
+                  <button
+                    type="button"
+                    class="absolute top-3 right-2.5 text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center"
+                    id="closeModal"
+                  >
+                    <svg
+                      class="w-3 h-3"
+                      aria-hidden="true"
+                      xmlns="http://www.w3.org/2000/svg"
+                      fill="none"
+                      viewBox="0 0 14 14"
+                    >
+                      <path
+                        stroke="currentColor"
+                        stroke-linecap="round"
+                        stroke-linejoin="round"
+                        stroke-width="2"
+                        d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"
+                      />
+                    </svg>
+                    <span class="sr-only">Close modal</span>
+                  </button>
+                  <div class="p-4 md:p-5 text-center">
+                    <svg
+                      class="mx-auto mb-4 text-gray-400 w-12 h-12"
+                      aria-hidden="true"
+                      xmlns="http://www.w3.org/2000/svg"
+                      fill="none"
+                      viewBox="0 0 20 20"
+                    >
+                      <path
+                        stroke="currentColor"
+                        stroke-linecap="round"
+                        stroke-linejoin="round"
+                        stroke-width="2"
+                        d="M10 11V6m0 8h.01M19 10a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z"
+                      />
+                    </svg>
+                    <h3 class="mb-5 text-lg font-normal text-gray-500">
+                      Are you sure?
+                    </h3>
+                    <button
+                      id="confirmDelete"
+                      type="button"
+                      class="text-white bg-red-600 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 font-medium rounded-lg text-sm inline-flex items-center px-5 py-2.5 text-center"
+                    >
+                      Yes, I'm sure
+                    </button>
+                    <button
+                      id="cancelDelete"
+                      type="button"
+                      class="py-2.5 px-5 ms-3 text-sm font-medium text-gray-900 focus:outline-none bg-white rounded-lg border border-gray-200 hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-4 focus:ring-gray-100"
+                    >
+                      No, cancel
+                    </button>
+                  </div>
+                </div>
+              </div>
+            </div>
+          </div>
+        </div>
       </div>
-    </a>
-    {% endfor %}
-  </div>
-  {% endif %} {% if not config.history and not config.latest_prompts %}
-  <div class="flex flex-row flex-wrap justify-center gap-4">
-    <div
-      class="prompt relative h-12 w-64 flex items-center justify-center bg-indigo-500 hover:bg-indigo-700 text-white rounded-xl cursor-pointer px-4"
-    >
-      <span class="truncate">Wer war Ada Lovelace?</span>
-    </div>
-    <div
-      class="group relative prompt h-12 w-64 flex items-center justify-center bg-indigo-500 hover:bg-indigo-700 text-white rounded-xl cursor-pointer px-4"
-    >
-      <span class="truncate">Schreibe eine index.html</span>
-    </div>
-  </div>
-  {% endif %}
-</div>
-{% endif %}
-```
+    </section>
+    <script>
+      window.addEventListener("load", function () {
+        // Basic
+        flatpickr("#flatpickr-date", {
+          monthSelectorType: "static",
+          locale: "de",
+          dateFormat: "d.m.Y",
+        });
+      });
+    </script>
+    <script>
+      document.addEventListener('DOMContentLoaded', function() {
 
-## chat/bot_message_template.html
+        {% include 'base/document/js/delete_document.js' %}
+        {% include 'base/document/js/search_field.js' %}
 
-```
-<div class="flex space-x-4 mb-6">
-  <div
-    class="flex justify-center items-center w-10 h-10 bg-gray-600 text-white rounded-full flex-shrink-0"
-  >
-    <svg
-      xmlns="http://www.w3.org/2000/svg"
-      fill="none"
-      viewBox="0 0 24 24"
-      stroke-width="1.5"
-      stroke="currentColor"
-      class="w-6 h-6"
-    >
-      <path
-        stroke-linecap="round"
-        stroke-linejoin="round"
-        d="M9.813 15.904 9 18.75l-.813-2.846a4.5 4.5 0 0 0-3.09-3.09L2.25 12l2.846-.813a4.5 4.5 0 0 0 3.09-3.09L9 5.25l.813 2.846a4.5 4.5 0 0 0 3.09 3.09L15.75 12l-2.846.813a4.5 4.5 0 0 0-3.09 3.09ZM18.259 8.715 18 9.75l-.259-1.035a3.375 3.375 0 0 0-2.455-2.456L14.25 6l1.036-.259a3.375 3.375 0 0 0 2.455-2.456L18 2.25l.259 1.035a3.375 3.375 0 0 0 2.456 2.456L21.75 6l-1.035.259a3.375 3.375 0 0 0-2.456 2.456ZM16.894 20.567 16.5 21.75l-.394-1.183a2.25 2.25 0 0 0-1.423-1.423L13.5 18.75l1.183-.394a2.25 2.25 0 0 0 1.423-1.423l.394-1.183.394 1.183a2.25 2.25 0 0 0 1.423 1.423l1.183.394-1.183.394a2.25 2.25 0 0 0-1.423 1.423Z"
-      />
-    </svg>
-  </div>
-  <div
-    class="message content bg-base-300 rounded-lg p-4 flex-1 min-w-0 break-words"
-  ></div>
-</div>
+      });
+    </script>
+    <script src="{{ url_for('static', filename='js/lib/flyonui.js') }}"></script>
+    <script src="{{ url_for('static', filename='js/lib/flatpickr.min.js') }}"></script>
+  </body>
+</html>
 ```
 
-## chat/chat_ui.html
+## base/document/form_elements.html
 
 ```
+{% for element in elements %}
 <div
-  id="chat_ui"
-  class="fixed bottom-0 left-0 lg:left-64 lg:w-[calc(100%-16rem)] w-full h-40 bg-gray-50"
+  class="{{ 'w-full' if element.full_width else 'w-full md:w-1/2' }} px-3 mb-6 md:mb-0"
 >
-  <div
-    class="flex flex-col absolute bottom-0 left-0 right-0 h-32 ml-2 mr-2 mb-2 md:ml-10 md:mr-10 md:mb-4 rounded-xl bg-white"
+  <label
+    for="{{ element.id }}"
+    class="label label-text"
   >
-    <div class="p-3 pr-16 overflow-hidden">
-      <textarea
-        id="chat_input"
-        placeholder="Type your message and press Command or Strg + Enter"
-        rows="3"
-        class="border-none ring-0 w-full rounded-lg focus:outline-none focus:ring-0 resize-none"
-      ></textarea>
-    </div>
-    <div class="ml-6 mb-4 flex items-center gap-2">
-      <div
-        class="dropdown relative inline-flex [--placement:top]"
-        data-dropdown
-      >
-        <button
-          id="modelSelectorButton"
-          class="badge badge-outline badge-primary dropdown-toggle"
-          data-dropdown-toggle
-        >
-          <span id="selected_model"></span>
-        </button>
-        <div
-          class="dropdown-menu min-w-44 dropdown-open:opacity-100 hidden"
-          role="menu"
-          aria-orientation="vertical"
-          aria-labelledby="modelSelectorButton"
-        >
-          {% for model in config.models %}
-          <button
-            id="{{ model.model }}"
-            data-name="{{ model.name }}"
-            class="model dropdown-item w-full text-left px-4 py-2 hover:bg-gray-100"
-          >
-            {{ model.name }}
-          </button>
-          {% endfor %}
-        </div>
-      </div>
-
-      <label for="file-upload" class="cursor-pointer">
-        <div
-          class="badge badge-outline badge-secondary flex items-center gap-1"
-        >
-          <svg
-            xmlns="http://www.w3.org/2000/svg"
-            fill="none"
-            viewBox="0 0 24 24"
-            stroke-width="1.5"
-            stroke="currentColor"
-            class="w-4 h-4"
-          >
-            <path
-              stroke-linecap="round"
-              stroke-linejoin="round"
-              d="M18.375 12.739l-7.693 7.693a4.5 4.5 0 01-6.364-6.364l10.94-10.94A3 3 0 1119.5 7.372L8.552 18.32m.009-.01l-.01.01m5.699-9.941l-7.81 7.81a1.5 1.5 0 002.112 2.13"
-            />
-          </svg>
-          <span id="file-name-display">Upload</span>
-        </div>
-      </label>
-      <input type="file" id="file-upload" class="hidden" />
-    </div>
-
-    <div class="absolute bottom-0 right-0 p-3 flex flex-col gap-2">
-      <button
-        id="reset_button"
-        class="bg-slate-800 hover:bg-slate-600 text-white font-extralight p-2.5 rounded"
-      >
-        <svg
-          xmlns="http://www.w3.org/2000/svg"
-          fill="none"
-          viewBox="0 0 24 24"
-          stroke-width="1.5"
-          stroke="currentColor"
-          class="w-6 h-6"
-        >
-          <path
-            stroke-linecap="round"
-            stroke-linejoin="round"
-            d="M12 4.5v15m7.5-7.5h-15"
-          />
-        </svg>
-      </button>
+    {{ element.label }}
+  </label>
 
-      <button
-        id="chat_button"
-        class="bg-slate-800 hover:bg-slate-600 text-white font-extralight p-2.5 rounded"
-      >
-        <svg
-          xmlns="http://www.w3.org/2000/svg"
-          fill="none"
-          viewBox="0 0 24 24"
-          stroke-width="1.5"
-          stroke="currentColor"
-          class="w-6 h-6"
-        >
-          <path
-            stroke-linecap="round"
-            stroke-linejoin="round"
-            d="M6 12 3.269 3.125A59.769 59.769 0 0 1 21.485 12 59.768 59.768 0 0 1 3.27 20.875L5.999 12Zm0 0h7.5"
-          />
-        </svg>
-      </button>
-      <button
-        id="stop_button"
-        class="hidden bg-red-500 hover:bg-red-400 text-white font-extralight p-2.5 rounded"
+  {% if element.type == 'ButtonField' %}
+  <a href="{{element.link}}/{{document.id}}"
+    ><button
+      type="button"
+      class="btn btn-primary"
+    >
+      {{element.label}}
+    </button></a
+  >
+  {% endif %} {% if element.type == 'FileField' %}
+  <input
+    class="input max-w-sm"
+    id="{{element.id}}"
+    type="file"
+    name="files_{{element.id}}"
+    multiple
+  />
+  {% for file in element.value %} {% if file.element_id == element.id %}
+  <div id="{{file.document_id}}" class="flex items-center justify-between mt-2">
+    <span class="mt-1 text-sm text-gray-600">
+      <a
+        href="{{url_for('download_file',file_id=file.id)}}"
+        class="text-blue-600 hover:text-blue-500"
+        target="_blank"
       >
-        <svg
-          xmlns="http://www.w3.org/2000/svg"
-          fill="none"
-          viewBox="0 0 24 24"
-          stroke-width="1.5"
-          stroke="currentColor"
-          class="w-6 h-6"
-        >
-          <path
-            stroke-linecap="round"
-            stroke-linejoin="round"
-            d="M5.25 7.5A2.25 2.25 0 0 1 7.5 5.25h9a2.25 2.25 0 0 1 2.25 2.25v9a2.25 2.25 0 0 1-2.25 2.25h-9a2.25 2.25 0 0 1-2.25-2.25v-9Z"
-          />
-        </svg>
-      </button>
-    </div>
+        {{ file.name }}
+      </a>
+    </span>
+    <button
+      id="{{file.id}}"
+      document_id="{{file.document_id}}"
+      class="delete_file bg-red-100 text-red-800 text-xs font-medium me-2 px-2.5 py-0.5 rounded"
+    >
+      Delete
+    </button>
   </div>
-</div>
-```
-
-## chat/chat_messages.html
-
-```
-<div
-  id="chat_messages"
-  class="mt-4 mb-4 overflow-auto flex flex-col min-h-[200px]"
-></div>
-```
-
-## chat/user_message_template.html
+  {% endif %} {% endfor %} {% endif %} {% if element.type=='DocumentField' %}
+  <!-- Search Field -->
+  <input
+    type="hidden"
+    value="{{element.value_id if element.value_id else document.get(element.name + '_id', '')}}"
+    name="{{ element.name }}_hidden"
+    id="{{ element.name }}_hidden"
+  />
+  <input
+    id="{{element.id}}"
+    name="{{element.name}}"
+    value="{{element.value if element.value else document.get(element.name, '')}}"
+    module="{{element.module}}"
+    document_field="{{element.document_field}}"
+    type="text"
+    placeholder="Search..."
+    class="searchField bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5"
+  />
 
-```
-<div class="flex space-x-4 mb-6">
+  <!-- Dropdown Menu -->
   <div
-    class="flex justify-center items-center w-10 h-10 bg-gray-500 text-white rounded-full flex-shrink-0"
+    id="dropdownMenu"
+    class="z-10 hidden bg-white rounded-lg shadow w-full mt-1 max-h-48 overflow-y-auto"
   >
-    A
+    <ul id="userList" class="py-2 text-gray-700"></ul>
   </div>
-  <div
-    class="message content bg-base-200 rounded-lg p-4 flex-1 min-w-0 break-words"
-  ></div>
-</div>
-```
-
-## chat/code_block_template.html
-
-```
-<div class="flex flex-col w-full">
-    <div class="h-8 bg-gray-800 w-full flex rounded-t justify-between items-center px-4">
-      <!-- Language Info Placeholder -->
-      <span class="text-sm text-white language-info"></span>
+  {% endif %} {% if element.type == 'IntField' or element.type =='FloatField' %}
 
-      <div class="flex flex-row items-center gap-2">
-        <span class="copied hidden text-sm font-extralight text-green-400">copied!</span>
-        <!-- Copy Button -->
-      <button class="h-4 w-4 copy-btn flex items-center justify-center text-white hover:text-green-400">
-        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
-          <path stroke-linecap="round" stroke-linejoin="round" d="M15.666 3.888A2.25 2.25 0 0 0 13.5 2.25h-3c-1.03 0-1.9.693-2.166 1.638m7.332 0c.055.194.084.4.084.612v0a.75.75 0 0 1-.75.75H9a.75.75 0 0 1-.75-.75v0c0-.212.03-.418.084-.612m7.332 0c.646.049 1.288.11 1.927.184 1.1.128 1.907 1.077 1.907 2.185V19.5a2.25 2.25 0 0 1-2.25 2.25H6.75A2.25 2.25 0 0 1 4.5 19.5V6.257c0-1.108.806-2.057 1.907-2.185a48.208 48.208 0 0 1 1.927-.184" />
-        </svg>
-      </button>
-      </div>
-      
-    </div>
-    <div class="w-full">
-      <pre class="bg-gray-700 text-sm text-white rounded-b p-2 overflow-x-auto whitespace-pre-wrap">
-      </pre>
-    </div>
+  <div class="max-w-sm mx-auto">
+    <input
+      type="text"
+      id="{{element.id}}"
+      name="{{element.name}}"
+      value="{{element.value if element.value is not none else ''}}"
+      class="input"
+    />
   </div>
-```
-
-## chat/chat.html
 
-```
-<!doctype html>
-<html lang="en" class="h-full">
-  {% include('/main/header.html') %}
-  <head>
-    <meta charset="UTF-8" />
-    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
-    <meta name="csrf-token" content="{{ csrf_token() }}" />
-    <title>Chat</title>
-  </head>
-  <body class="min-h-full flex flex-col bg-gray-50">
-    {% include('/main/nav.html') %}
+  {% endif %} {% if element.type == 'Date' %}
 
-    <section class="flex-1 flex items-start overflow-y-auto lg:ml-64">
-      <div class="px-4 md:px-10 w-full">
-        <div class="relative min-h-[calc(100vh-8rem)] pb-32">
-          <main id="main" class="flex flex-col h-full">
-            {% if config.messages|length == 0 %}
-            <!-- Show prompts and history first in a fresh chat -->
-            <div id="selected_prompts_container" class="flex-1">
-              {% include '/chat/chat_prompts.html' %}
-            </div>
-            <div id="chat_messages_container" class="pb-40">
-              {% include '/chat/chat_messages.html' %}
-            </div>
-            {% else %}
-            <!-- Show messages first in an existing chat -->
-            <div id="chat_messages_container" class="pb-40">
-              {% include '/chat/chat_messages.html' %}
-            </div>
-            <div id="selected_prompts_container">
-              {% include '/chat/chat_prompts.html' %}
-            </div>
-            {% endif %}
+  <input
+    type="text"
+    class="input max-w-sm"
+    placeholder="DD.MM.YYYY"
+    id="flatpickr-date"
+    name="{{element.name}}"
+    value="{{element.value if element.value is not none else ''}}"
+  />
 
-            <div id="chat_history_container" class="hidden"></div>
-            <div id="prompts_container" class="hidden"></div>
-            <div id="create_prompt_container" class="hidden"></div>
-            <div id="chat_ui_container">{% include '/chat/chat_ui.html' %}</div>
-          </main>
+  {% endif %} {% if element.type == 'CheckBox' %}
+  <label class="inline-flex items-center mb-5 cursor-pointer">
+    <input
+      type="hidden"
+      name="{{ element.name }}_hidden"
+      value="Off"
+    />
+    <input
+      type="checkbox"
+      name="{{ element.name }}"
+      class="switch switch-primary"
+      value="On"
+      {% if element.value == "On" %}checked{% endif %}
+    />
+  </label>
+  {% endif %} {% if element.type =='SimpleListField' %}
+  <select
+    class="select max-w-sm appearance-none"
+    aria-label="select"
+    id="{{element.id}}"
+    name="{{element.name}}"
+  >
+    {% for item in element.SimpleListField %} {% if item.value == element.value %}
+    <option value="{{item.value}}" selected="selected">{{item.name}}</option>
+    {% else %}
+    <option value="{{item.value}}">{{item.name}}</option>
+    {% endif %} {% endfor %}
+  </select>
+  {% endif %} {% if element.type=='AdvancedListField' %}
+  <select class="select max-w-sm appearance-none" aria-label="select" id="{{element.id}}" name="{{element.name}}">
+    {% for item in element.AdvancedListField %} {% if item.value == element.value %}
+    <option value="{{item.value}}" selected="selected">{{item.name}}</option>
+    {% else %}
+    <option value="{{item.value}}">{{item.name}}</option>
+    {% endif %} {% endfor %}
+  </select>
+  {% endif %} {% if element.type == 'SingleLine' %}
+  <input
+    id="{{ element.id }}"
+    name="{{ element.name }}"
+    type="text"
+    value="{{ element.value }}"
+    placeholder="{{ element.label }}"
+    class="input"
+    {% if element.required %}required{% endif %}
+  />
+  {% elif element.type == 'MultiLine' %}
+  <textarea
+    id="{{ element.id }}"
+    name="{{ element.name }}"
+    rows="4"
+    placeholder="{{ element.label }}"
+    class="textarea"
+    {% if element.required %}required{% endif %}
+  >{{ element.value if element.value is not none else '' }}</textarea>
+  {% endif %}
+    <!-- {% if element.required %}
+    <p class="text-red-500 text-xs italic">Please fill out this field.</p>
+    {% endif %} -->
+</div>
+{% endfor %}
+```
 
-          <!-- Bot Message Template -->
-          <template id="bot-message-template">
-            {% include '/chat/bot_message_template.html' %}
-          </template>
+## base/document/js/delete_document.js
 
-          <!-- User Message Template -->
-          <template id="user-message-template">
-            {% include '/chat/user_message_template.html' %}
-          </template>
+```
+// Function to handle form submission for delete action
+function submitDeleteForm() {
+  var url =
+    "{{url_for('delete_document')}}" +
+    "?id=" +
+    "{{document.id}}&type={{page.document_name}}";
 
-          <!-- File Banner Template -->
-          <template id="file-banner-template">
-            <div class="mb-6">
-              <div class="bg-blue-50 border-l-4 border-blue-400 p-4">
-                <div class="flex">
-                  <div class="flex-shrink-0">
-                    <svg
-                      class="h-5 w-5 text-blue-400"
-                      viewBox="0 0 20 20"
-                      fill="currentColor"
-                    >
-                      <path
-                        fill-rule="evenodd"
-                        d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z"
-                        clip-rule="evenodd"
-                      />
-                    </svg>
-                  </div>
-                  <div class="ml-3 flex items-center gap-3">
-                    <p class="text-sm text-blue-700">
-                      Using context from file: <span class="filename"></span>
-                    </p>
-                    <a
-                      href="#"
-                      class="download-link text-blue-700 hover:text-blue-900"
-                    >
-                      <svg
-                        class="w-4 h-4"
-                        xmlns="http://www.w3.org/2000/svg"
-                        fill="none"
-                        viewBox="0 0 24 24"
-                        stroke-width="1.5"
-                        stroke="currentColor"
-                      >
-                        <path
-                          stroke-linecap="round"
-                          stroke-linejoin="round"
-                          d="M3 16.5v2.25A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75V16.5M16.5 12L12 16.5m0 0L7.5 12m4.5 4.5V3"
-                        />
-                      </svg>
-                    </a>
-                  </div>
-                </div>
-              </div>
-            </div>
-          </template>
+  fetch(url)
+    .then((response) => response.json())
+    .then((result) => {
+      console.log(result);
+      if (result.status === "ok") {
+        console.log("Document Deleted");
+        window.location.href = "{{ page.collection_url }}";
+      } else {
+        console.log("Document not deleted");
+      }
+    })
+    .catch((error) => {
+      console.error("Error:", error);
+    });
+}
 
-          <template id="code_template">
-            {% include '/chat/code_block_template.html' %}
-          </template>
-        </div>
-      </div>
-    </section>
+const modal = document.getElementById("deleteModal");
+const deleteButton = document.getElementById("deleteButton");
+const closeButton = document.getElementById("closeModal");
+const confirmButton = document.getElementById("confirmDelete");
+const cancelButton = document.getElementById("cancelDelete");
+const modalContent = document.getElementById('modalContent');
 
-    <script>
-      // Global variables
-      const messages = {{ config.messages | tojson | safe }};
-      const systemMessage = {{ config.system_message|tojson }};
-      const welcomeMessage = {{ config.welcome_message|tojson }};
-      const models = {{ config.models | tojson | safe}};
-      const use_prompt_template = {{ config.use_prompt_template|tojson }};
-      const username = {{ config.username|tojson }};
-      const chat_started = {{ config.chat_started|tojson }};
+function showModal() {
+  modal.classList.remove("hidden");
+}
 
-      // Model selection
-      var selected_model = models[0]['model'];
-      var selected_model_name = models[0]['name'];
-      var selectedModelElement = document.getElementById('selected_model');
+function hideModal() {
+  modal.classList.add("hidden");
+}
 
-      // Check localStorage for saved model
-      if (localStorage.getItem('selected_model') !== null) {
-        selected_model = localStorage.getItem('selected_model');
-        const model = models.find(m => m.model === selected_model);
-        if (model) {
-          selected_model_name = model.name;
-        }
-      }
+deleteButton.addEventListener("click", showModal);
+closeButton.addEventListener("click", hideModal);
+cancelButton.addEventListener("click", hideModal);
 
-      selectedModelElement.innerText = selected_model_name;
+confirmButton.addEventListener("click", function (ev) {
+  ev.preventDefault();
+  submitDeleteForm();
+});
 
-      document.addEventListener('click', function (e) {
-        if (e.target.closest('#prompts .prompt')) {
-          var chatInput = document.getElementById('chat_input');
-          if (chatInput) {
-            chatInput.value = e.target.textContent;
-          }
+modal.addEventListener('click', function(event) {
+  if (!modalContent.contains(event.target)) {
+    hideModal();
+  }
+});
 
-          var chatButton = document.getElementById('chat_button');
-          if (chatButton) {
-            chatButton.click();
-          }
 
-          var promptsDiv = document.getElementById('prompts');
-          if (promptsDiv) {
-            promptsDiv.remove();
-          }
-        }
+document.querySelectorAll('.delete_file').forEach(button => {
+    button.addEventListener('click', function (event) {
+        event.preventDefault();
+        const documentId = this.getAttribute('document_id');
+        const fileId = this.id;
 
-        if (event.target.classList.contains('model')) {
-          selected_model = event.target.id;
-          selected_model_name = event.target.dataset.name;
-          localStorage.setItem('selected_model', selected_model);
-          selectedModelElement.innerText = selected_model_name;
-          const modelSelectorButton = document.getElementById('modelSelectorButton');
-          if (modelSelectorButton) {
-            modelSelectorButton.click();
-          }
-        }
-      });
-    </script>
+        const url = "{{ url_for('delete_document') }}" + "?id="+fileId + "&type=files";
+        console.log(url)
 
-    <script src="{{ url_for('static', filename='/chat/chat_core.js') }}"></script>
-    <script src="{{ url_for('static', filename='js/lib/flyonui.js') }}"></script>
-  </body>
-</html>
+        fetch(url)
+        .then(response => response.json())
+        .then(data => {
+            if (data.status=='ok') {
+                const fileElement = document.getElementById(documentId);
+                if (fileElement) {
+                    fileElement.remove();
+                    console.log("File removed!")
+                }
+            } else {
+                console.error('Failed to delete document:', data);
+            }
+        })
+        .catch(error => console.error('Error:', error));
+    });
+});
 ```
 
-## testing/create_users.py
+## base/document/js/search_field.js
 
 ```
-import sys
-import os
-
-# Add the project root directory to Python path
-sys.path.append(os.path.dirname(os.path.dirname(os.path.dirname(__file__))))
+document.querySelectorAll(".searchField").forEach((searchField) => {
+  searchField.addEventListener("input", function () {
+    const query = this.value;
+    const module = this.getAttribute("module"); // Get the module attribute value
+    const document_field = this.getAttribute("document_field");
+    const dropdown = this.nextElementSibling;
+    const userList = dropdown.querySelector("#userList");
+    const document_field_hidden = document.getElementById(
+      this.name + "_hidden",
+    );
 
-from core.db_user import create_user
+    // Clear hidden field if search field is empty
+    if (!query || query.length === 0) {
+      document_field_hidden.value = "";
+      document_field.value = "";
+      dropdown.classList.add("hidden");
+      return;
+    }
 
-for i in range(1, 20):
-    username = f"User{i}"
-    name = f"Name{i}"
-    email = f"user{i}.name@gmail.com"
-    password = '12345'
+    if (query.length > 3) {
+      // Construct the URL using the module value
+      const url =
+        `{{ url_for("list", collection="__MODULE__", mode="json") }}`.replace(
+          "__MODULE__",
+          module,
+        );
 
-    # Create user with generated data
-    create_user(username, name, email, password, role='user')
-```
+      // Fetch users from the server based on the search query
+      fetch(`${url}&search=${encodeURIComponent(query)}&limit=100`)
+        .then((response) => response.json())
+        .then((data) => {
+          if (data.status === "ok" && data.message === "success") {
+            dropdown.classList.remove("hidden");
+            console.log(data); // Log the result
+            userList.innerHTML = ""; // Clear the existing list
 
-## main/header.html
+            // Check if data.data is an array before iterating
+            if (Array.isArray(data.data)) {
+              // Append users to the list
+              data.data.forEach((user) => {
+                const userItem = document.createElement("li");
+                userItem.innerHTML = `
+                                    <a href="#" class="flex items-center px-4 py-2 hover:bg-gray-100">
+                                        ${user[document_field]}
+                                    </a>
+                                `;
+                userItem.addEventListener("click", function (event) {
+                  event.preventDefault();
+                  searchField.value = user[document_field];
+                  document_field_hidden.value = user.id;
+                  dropdown.classList.add("hidden");
+                });
+                userList.appendChild(userItem);
+              });
 
-```
-<head>
-  <meta charset="UTF-8" />
-  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
-  <title>Fireworks</title>
-  <link
-    rel="stylesheet"
-    href="{{ url_for('static', filename='css/output.css') }}"
-  />
-  <link
-    rel="stylesheet"
-    href="{{ url_for('static', filename='css/flatpickr.min.css') }}"
-  />
-</head>
+              // Log the length of the userList to verify
+              console.log(
+                `Number of users appended: ${userList.children.length}`,
+              );
+            } else {
+              console.error("Error: data.data is not an array");
+            }
+          } else {
+            console.error("Error: Unexpected response format");
+          }
+        })
+        .catch((error) => {
+          console.error("Error fetching user data:", error); // Log error message
+        });
+    } else {
+      dropdown.classList.add("hidden");
+    }
+  });
+});
 ```
 
-## main/nav.html
+## base/collection/pagination.html
 
 ```
-<!-- Sticky Navigation -->
-<nav
-  class="navbar bg-base-100 flex items-center justify-between p-4 sticky top-0 z-[60] shadow-sm"
->
-  <div class="navbar-start">
-    <a
-      href="{{ url_for('index') }}"
-      class="link text-base-content/90 text-xl font-semibold no-underline flex items-center gap-2"
-    >
-      Fireworks
-    </a>
-  </div>
-  <div class="navbar-end flex items-center gap-2">
-    <!-- User Avatar Dropdown for Desktop -->
-    <div
-      class="dropdown relative inline-flex max-lg:hidden [--auto-close:inside] [--offset:8] [--placement:bottom-end]"
-    >
-      <button
-        type="button"
-        class="dropdown-toggle avatar placeholder"
-        aria-haspopup="menu"
-        aria-expanded="false"
-        aria-label="User menu"
+{% if total != null %}
+<div class="flex flex-wrap items-center justify-between gap-2">
+  <div class="flex flex-wrap items-center gap-2 sm:gap-4">
+    <nav class="flex items-center gap-x-1" aria-label="Pagination">
+      {% if prev != null and prev != None %}
+      <a
+        href="{{collection_url}}?start=0&limit={{limit}}&search={{search}}&id={{id}}&filter={{filter}}"
+        class="btn btn-outline btn-primary"
+        aria-label="First"
       >
-        <div class="bg-primary text-primary-content rounded-full w-10">
-          <span class="text-lg"
-            >{{ current_user.firstname[0] }}{{ current_user.name[0] }}</span
-          >
-        </div>
-      </button>
-      <ul
-        class="dropdown-menu dropdown-open:opacity-100 hidden min-w-48"
-        role="menu"
+        <span
+          class="icon-[tabler--chevrons-left] size-5 rtl:rotate-180 sm:hidden"
+        ></span>
+        <span class="hidden sm:inline">First</span>
+      </a>
+      <a
+        href="{{collection_url}}?start={{prev}}&limit={{limit}}&search={{search}}&id={{id}}&filter={{filter}}"
+        class="btn btn-outline btn-primary"
+        aria-label="Previous"
       >
-        <div class="dropdown-header">
-          <h6 class="text-base-content/90 text-base">
-            {{ current_user.firstname }} {{ current_user.name }}
-          </h6>
-        </div>
-        <a
-          href="{{ url_for('view_document', collection='user', id=current_user.id) }}"
-          class="dropdown-item"
-        >
-          <span class="icon-[tabler--user] size-5"></span>
-          Edit Profile
-        </a>
-        <form action="{{ url_for('logout') }}" method="post">
-          <input type="hidden" name="csrf_token" value="{{ csrf_token() }}" />
-          <button type="submit" class="dropdown-item w-full text-left">
-            <span class="icon-[tabler--logout-2] size-5"></span>
-            Sign Out
-          </button>
-        </form>
-      </ul>
+        <span
+          class="icon-[tabler--chevron-left] size-5 rtl:rotate-180 sm:hidden"
+        ></span>
+        <span class="hidden sm:inline">Previous</span>
+      </a>
+      {% endif %}
+
+      <div class="flex items-center gap-x-1">
+        <!-- Page numbers would go here -->
+      </div>
+
+      {% if next %}
+      <a
+        href="{{collection_url}}?start={{next}}&limit={{limit}}&search={{search}}&id={{id}}&filter={{filter}}"
+        class="btn btn-outline btn-primary"
+        aria-label="Next"
+      >
+        <span class="hidden sm:inline">Next</span>
+        <span
+          class="icon-[tabler--chevron-right] size-5 rtl:rotate-180 sm:hidden"
+        ></span>
+      </a>
+      {% endif %} {% if last != null and last != None %}
+      <a
+        href="{{collection_url}}?start={{last}}&limit={{limit}}&search={{search}}&id={{id}}&filter={{filter}}"
+        class="btn btn-outline btn-primary"
+        aria-label="Last"
+      >
+        <span class="hidden sm:inline">Last</span>
+        <span
+          class="icon-[tabler--chevrons-right] size-5 rtl:rotate-180 sm:hidden"
+        ></span>
+      </a>
+      {% endif %}
+    </nav>
+
+    <div class="text-sm text-gray-500">
+      {% if total != None and total > 0 %} Showing
+      <span class="font-medium">{{start}}</span>
+      to
+      <span class="font-medium">{{end}}</span>
+      of
+      <span class="font-medium">{{total}}</span>
+      results {% else %} No results found {% endif %}
     </div>
-    <!-- Mobile Menu Button -->
+  </div>
+
+  <!-- Limit dropdown -->
+  <div class="dropdown relative inline-flex rtl:[--placement:bottom-end]">
     <button
+      id="dropdown-default"
       type="button"
-      class="btn btn-text max-lg:btn-square lg:hidden"
-      aria-haspopup="dialog"
+      class="dropdown-toggle btn btn-primary btn-outline"
+      aria-haspopup="menu"
       aria-expanded="false"
-      aria-controls="mobile-menu-overlay"
-      data-overlay="#mobile-menu-overlay"
+      aria-label="Limit"
     >
-      <span class="icon-[tabler--menu-2] size-5"></span>
+      Limit
+      <span
+        class="icon-[tabler--chevron-down] dropdown-open:rotate-180 size-4"
+      ></span>
     </button>
-  </div>
-</nav>
-
-<aside
-  id="mobile-menu-overlay"
-  class="overlay drawer drawer-start w-64 max-w-64 lg:fixed lg:top-[57px] lg:bottom-0 lg:left-0 lg:z-40 lg:flex lg:translate-x-0 overlay-open:translate-x-0 -translate-x-full transition-transform duration-300"
-  tabindex="-1"
->
-  <div class="drawer-body w-64 bg-white h-full flex flex-col overflow-hidden">
-    <!-- Fixed Header Section -->
-    <div class="px-2 pt-4 pb-2 border-b border-base-200 flex-none">
-      <ul class="menu w-full space-y-0.5 p-0">
-        <li class="w-full">
-          <a
-            href="{{ url_for('index') }}"
-            class="flex items-center gap-2 px-4 py-2 w-full"
-          >
-            <span class="icon-[tabler--dashboard] size-5 shrink-0"></span>
-            <span class="truncate">Dashboard</span>
-          </a>
-        </li>
-        <li class="w-full">
-          <a
-            href="{{ url_for('dms_chat.chat') }}"
-            class="flex items-center gap-2 px-4 py-2 w-full"
-          >
-            <span class="icon-[tabler--message] size-5 shrink-0"></span>
-            <span class="truncate">Chat</span>
-          </a>
-        </li>
-      </ul>
-    </div>
-
-    <!-- Scrollable Content Section -->
-    <div
-      class="flex-1 overflow-y-auto scrollbar-thin scrollbar-thumb-base-300 scrollbar-track-transparent px-2 py-2"
+    <ul
+      aria-labelledby="dropdown-default"
+      aria-orientation="vertical"
+      class="dropdown-menu dropdown-open:opacity-100 hidden min-w-60"
+      role="menu"
     >
-      <ul
-        class="menu w-full space-y-0.5 [&_.nested-collapse-wrapper]:space-y-0.5 [&_ul]:space-y-0.5 p-0 pb-6"
-      >
-        {% if current_user.is_admin %}
-        <li class="w-full space-y-0.5">
-          <button
-            type="button"
-            class="collapse-toggle w-full flex items-center gap-2 px-4 py-2 collapse-open:bg-base-content/10"
-            id="admin-collapse"
-            aria-expanded="false"
-            aria-controls="admin-collapse-content"
-            data-collapse="#admin-collapse-content"
-          >
-            <span class="icon-[tabler--shield-lock] size-5 shrink-0"></span>
-            <span class="truncate flex-1">Admin</span>
-            <span
-              class="icon-[tabler--chevron-down] collapse-open:rotate-180 size-4 shrink-0 transition-transform duration-300"
-            ></span>
-          </button>
-          <div
-            id="admin-collapse-content"
-            class="collapse hidden w-full overflow-hidden transition-[height] duration-300"
-            aria-labelledby="admin-collapse"
-          >
-            <div>
-              <ul class="menu space-y-0.5 w-full">
-                <li class="w-full">
-                  <a
-                    href="{{ url_for('list', collection='user') }}"
-                    class="text-xs w-full px-4 py-2 hover:bg-base-200 flex items-center gap-2 rounded-lg"
-                  >
-                    <span class="icon-[tabler--users] size-3.5 shrink-0"></span>
-                    <span class="truncate">Manage Users</span>
-                  </a>
-                </li>
-              </ul>
-            </div>
-          </div>
-        </li>
-        {% endif %}
-        <li class="w-full space-y-0.5">
-          <button
-            type="button"
-            class="collapse-toggle w-full flex items-center gap-2 px-4 py-2 collapse-open:bg-base-content/10"
-            id="prompts-collapse"
-            aria-expanded="false"
-            aria-controls="prompts-collapse-content"
-            data-collapse="#prompts-collapse-content"
-          >
-            <span class="icon-[tabler--app-window] size-5 shrink-0"></span>
-            <span class="truncate flex-1">Prompts</span>
-            <span
-              class="icon-[tabler--chevron-down] collapse-open:rotate-180 size-4 shrink-0 transition-transform duration-300"
-            ></span>
-          </button>
-          <div
-            id="prompts-collapse-content"
-            class="collapse hidden w-full overflow-hidden transition-[height] duration-300"
-            aria-labelledby="prompts-collapse"
-          >
-            <div>
-              <ul class="menu space-y-0.5 w-full" id="prompts-list">
-                <li class="w-full">
-                  <a
-                    href="{{ url_for('list', collection='prompts') }}"
-                    class="text-xs view-all w-full px-4 py-2 hover:bg-base-200 flex items-center rounded-lg"
-                  >
-                    <span class="truncate">View All Prompts</span>
-                  </a>
-                </li>
-                <li class="w-full">
-                  <a
-                    href="{{ url_for('doc', name='prompt') }}"
-                    class="text-xs w-full px-4 py-2 hover:bg-base-200 flex items-center gap-2 text-primary rounded-lg group"
-                  >
-                    <span class="icon-[tabler--plus] size-3.5 shrink-0"></span>
-                    <span class="truncate">New Prompt</span>
-                  </a>
-                </li>
-                <li class="w-full border-t border-base-200 my-1"></li>
-                {% for prompt in prompts %}
-                <li class="w-full">
-                  <div
-                    class="flex items-center gap-2 w-full px-4 py-2 hover:bg-base-200 group rounded-lg"
-                  >
-                    <a
-                      href="{{ url_for('chat.prompt', id=prompt.id) }}"
-                      class="flex-1 min-w-0"
-                      title="{{ prompt.name }}"
+      <li>
+        <a
+          class="dropdown-item"
+          href="{{collection_url}}?start=0&limit=5&search={{search}}&filter={{filter}}"
+        >
+          5 Items
+        </a>
+      </li>
+      <li>
+        <a
+          class="dropdown-item"
+          href="{{collection_url}}?start=0&limit=10&search={{search}}&filter={{filter}}"
+        >
+          10 Items
+        </a>
+      </li>
+      <li>
+        <a
+          class="dropdown-item"
+          href="{{collection_url}}?start=0&limit=20&search={{search}}&filter={{filter}}"
+        >
+          20 Items
+        </a>
+      </li>
+      <li>
+        <a
+          class="dropdown-item"
+          href="{{collection_url}}?start=0&limit=50&search={{search}}&filter={{filter}}"
+        >
+          50 Items
+        </a>
+      </li>
+    </ul>
+  </div>
+</div>
+{% endif %}
+```
+
+## base/collection/collection.html
+
+```
+<!doctype html>
+<html lang="en" class="overflow-y-scroll">
+  {% include('/main/header.html') %}
+  <body class="bg-gray-50 min-h-screen">
+    {% include('/main/nav.html') %}
+
+    <section class="p-4 sm:p-6 flex items-center lg:ml-64">
+      <div class="max-w-screen-xl mx-auto px-2 sm:px-4 lg:px-12 w-full">
+        <div
+          class="relative bg-white shadow-md dark:bg-gray-800 sm:rounded-lg p-3 sm:p-4"
+        >
+          <div class="flex flex-col gap-4">
+            <div
+              class="flex flex-row justify-between items-center gap-2 sm:gap-4"
+            >
+              <div class="flex-1">
+                <form
+                  method="GET"
+                  action="{{ url_for('list', collection=collection_name, start=start, limit=limit, filter=filter) }}"
+                >
+                  <div class="relative">
+                    <div
+                      class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none"
                     >
-                      <span class="truncate text-xs block"
-                        >{{ prompt.name }}</span
+                      <svg
+                        class="w-4 h-4 text-gray-500"
+                        fill="currentColor"
+                        viewBox="0 0 20 20"
                       >
-                    </a>
-                    <span
-                      class="text-[10px] text-gray-500 whitespace-nowrap shrink-0"
-                      >{{ format_time_ago(prompt.modified_date) }}</span
-                    >
-                    <a
-                      href="{{ url_for('prompt.edit', id=prompt.id) }}"
-                      class="shrink-0 opacity-0 group-hover:opacity-100 transition-opacity"
-                      aria-label="Edit prompt"
-                      title="Edit prompt"
-                    >
-                      <span
-                        class="icon-[tabler--edit] size-3.5 text-primary"
-                      ></span>
-                    </a>
+                        <path
+                          fill-rule="evenodd"
+                          d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z"
+                          clip-rule="evenodd"
+                        ></path>
+                      </svg>
+                    </div>
+                    <input
+                      type="text"
+                      name="search"
+                      class="w-full max-w-md pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"
+                      placeholder="Search"
+                      value="{{ search }}"
+                    />
                   </div>
-                </li>
-                {% endfor %}
-              </ul>
+                </form>
+              </div>
+
+              <div class="flex-none">
+                {% if show_new_button %}
+                <a
+                  href="{{ url_for('doc',name = collection_name) }}"
+                  class="btn btn-primary whitespace-nowrap"
+                >
+                  New
+                </a>
+                {% endif %}
+              </div>
             </div>
+
+            {% include('/base/collection/table.html') %}
           </div>
-        </li>
-        <li class="w-full space-y-0.5">
+        </div>
+      </div>
+    </section>
+
+    <!-- Delete Modal -->
+    <div
+      id="deleteModal"
+      tabindex="-1"
+      class="hidden overflow-y-auto overflow-x-hidden bg-gray-600 bg-opacity-65 backdrop-blur-sm fixed top-0 right-0 left-0 z-50 flex justify-center items-center w-full h-full"
+    >
+      <div id="modalContent" class="relative p-4 w-full max-w-md max-h-full">
+        <div class="relative bg-white rounded-lg shadow">
           <button
             type="button"
-            class="collapse-toggle w-full flex items-center gap-2 px-4 py-2 collapse-open:bg-base-content/10"
-            id="history-collapse"
-            aria-expanded="false"
-            aria-controls="history-collapse-content"
-            data-collapse="#history-collapse-content"
+            class="absolute top-3 right-2.5 text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center"
+            id="closeModal"
           >
-            <span class="icon-[tabler--clock] size-5 shrink-0"></span>
-            <span class="truncate flex-1">History</span>
-            <span
-              class="icon-[tabler--chevron-down] collapse-open:rotate-180 size-4 shrink-0 transition-transform duration-300"
-            ></span>
+            <svg
+              class="w-3 h-3"
+              aria-hidden="true"
+              xmlns="http://www.w3.org/2000/svg"
+              fill="none"
+              viewBox="0 0 14 14"
+            >
+              <path
+                stroke="currentColor"
+                stroke-linecap="round"
+                stroke-linejoin="round"
+                stroke-width="2"
+                d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"
+              />
+            </svg>
+            <span class="sr-only">Close modal</span>
           </button>
-          <div
-            id="history-collapse-content"
-            class="collapse hidden w-full overflow-hidden transition-[height] duration-300"
-            aria-labelledby="history-collapse"
-          >
-            <div>
-              <ul class="menu space-y-0.5 w-full" id="history-list">
-                <li class="w-full">
-                  <a
-                    href="{{ url_for('list', collection='history') }}"
-                    class="text-xs view-all w-full px-4 py-2 hover:bg-base-200 flex items-center rounded-lg"
-                  >
-                    <span class="truncate">View All History</span>
-                  </a>
-                </li>
-                <li class="w-full">
-                  <button
-                    type="button"
-                    class="text-xs w-full px-4 py-2 hover:bg-base-200 flex items-center gap-2 text-error rounded-lg group"
-                    onclick="handleDeleteHistory()"
-                  >
-                    <span class="icon-[tabler--trash] size-3.5 shrink-0"></span>
-                    <span class="truncate">Delete Documents</span>
-                  </button>
-                </li>
-                <li class="w-full border-t border-base-200 my-1"></li>
-                {% for item in history %}
-                <li class="w-full">
-                  <a
-                    href="{{ url_for('chat.history', id=item.id) }}"
-                    class="flex items-center gap-2 w-full px-4 py-2 hover:bg-base-200 rounded-lg"
-                    title="{{ item.first_message or 'Untitled Chat' }}"
-                  >
-                    <span class="truncate flex-1 text-xs"
-                      >{{ item.first_message or "Untitled Chat" }}</span
-                    >
-                    <span
-                      class="text-[10px] text-gray-500 whitespace-nowrap shrink-0"
-                      >{{ format_time_ago(item.modified_date) }}</span
-                    >
-                  </a>
-                </li>
-                {% endfor %}
-              </ul>
-            </div>
+          <div class="p-4 md:p-5 text-center">
+            <svg
+              class="mx-auto mb-4 text-gray-400 w-12 h-12"
+              aria-hidden="true"
+              xmlns="http://www.w3.org/2000/svg"
+              fill="none"
+              viewBox="0 0 20 20"
+            >
+              <path
+                stroke="currentColor"
+                stroke-linecap="round"
+                stroke-linejoin="round"
+                stroke-width="2"
+                d="M10 11V6m0 8h.01M19 10a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z"
+              />
+            </svg>
+            <h3 class="mb-5 text-lg font-normal text-gray-500">
+              Are you sure?
+            </h3>
+            <button
+              id="confirmDelete"
+              type="button"
+              class="text-white bg-red-600 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 font-medium rounded-lg text-sm inline-flex items-center px-5 py-2.5 text-center"
+            >
+              Yes, I'm sure
+            </button>
+            <button
+              id="cancelDelete"
+              type="button"
+              class="py-2.5 px-5 ms-3 text-sm font-medium text-gray-900 focus:outline-none bg-white rounded-lg border border-gray-200 hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-4 focus:ring-gray-100"
+            >
+              No, cancel
+            </button>
           </div>
-        </li>
-      </ul>
-    </div>
-
-    <!-- Fixed Footer Section -->
-    <div class="flex-none border-t border-base-200 px-2 pt-4 pb-2 lg:hidden">
-      <form action="{{ url_for('logout') }}" method="post" class="w-full">
-        <input type="hidden" name="csrf_token" value="{{ csrf_token() }}" />
-        <button
-          type="submit"
-          class="btn btn-ghost w-full justify-start gap-2 text-error"
-        >
-          <span class="icon-[tabler--logout-2] size-5 shrink-0"></span>
-          <span class="truncate">Sign Out</span>
-        </button>
-      </form>
+        </div>
+      </div>
     </div>
-  </div>
-</aside>
 
-<script>
-  // Add error notification function
-  function showErrorNotification(message) {
-    console.error(message);
-  }
-
-  // Function to format date
-  function formatDate(dateString) {
-    let date;
-    if (typeof dateString === "string") {
-      // Try to parse the formatted date string from mongoToJson (DD.MM.YYYY HH:MM)
-      const parts = dateString.split(" ");
-      if (parts.length === 2) {
-        const [datePart, timePart] = parts;
-        const [day, month, year] = datePart.split(".");
-        const [hours, minutes] = timePart.split(":");
-        date = new Date(year, month - 1, day, hours, minutes);
-      } else {
-        date = new Date(dateString);
-      }
-    } else if (dateString?.$date) {
-      // Handle MongoDB ISODate format
-      date = new Date(dateString.$date);
-    } else {
-      return "";
-    }
+    <script src="{{ url_for('static', filename='js/lib/flyonui.js') }}"></script>
+    <script>
+      document.querySelectorAll(".delete-btn").forEach((button) => {
+        button.addEventListener("click", function () {
+          const id = this.dataset.id;
+          const type = this.dataset.type;
+          const modal = document.getElementById("deleteModal");
+          const modalContent = document.getElementById("modalContent");
+          const confirmDelete = document.getElementById("confirmDelete");
+          const cancelDelete = document.getElementById("cancelDelete");
+          const closeButton = document.getElementById("closeModal");
 
-    const now = new Date();
-    const diffMs = now - date;
-    const diffMins = Math.floor(diffMs / 60000);
-    const diffHours = Math.floor(diffMins / 60);
-    const diffDays = Math.floor(diffHours / 24);
+          // Show modal
+          modal.classList.remove("hidden");
 
-    if (diffMins < 1) {
-      return "just now";
-    } else if (diffMins < 60) {
-      return `${diffMins}m ago`;
-    } else if (diffHours < 24) {
-      return `${diffHours}h ago`;
-    } else if (diffDays === 1) {
-      return "yesterday";
-    } else if (diffDays < 7) {
-      return `${diffDays}d ago`;
-    } else {
-      return date.toLocaleDateString();
-    }
-  }
+          // Handle delete confirmation
+          const handleDelete = () => {
+            const url = "{{ url_for('delete_document') }}";
 
-  // Function to fetch and update nav items with improved error handling
-  async function updateNavItems() {
-    try {
-      const response = await fetch("{{ url_for('dms_chat.get_nav_items') }}");
-      if (!response.ok) {
-        throw new Error(`Failed to fetch nav items: ${response.status}`);
-      }
+            fetch(url + "?id=" + id + "&type=" + type, {
+              method: "GET",
+              headers: {
+                "X-CSRFToken": "{{ csrf_token() }}",
+              },
+            })
+              .then((response) => response.json())
+              .then((result) => {
+                if (result.status === "ok") {
+                  // Remove the row from the table
+                  const row = button.closest("tr");
+                  row.remove();
 
-      const data = await response.json();
-      console.log("Total history items received:", data.history.length);
+                  // Show success notification
+                  const notification = document.createElement("div");
+                  notification.className =
+                    "fixed bottom-4 right-4 bg-green-500 text-white px-6 py-3 rounded shadow-lg z-50";
+                  notification.textContent = "Document deleted successfully";
+                  document.body.appendChild(notification);
+                  setTimeout(() => notification.remove(), 3000);
+                } else {
+                  // Show error notification
+                  const notification = document.createElement("div");
+                  notification.className =
+                    "fixed bottom-4 right-4 bg-red-500 text-white px-6 py-3 rounded shadow-lg z-50";
+                  notification.textContent =
+                    "Error deleting document: " + result.message;
+                  document.body.appendChild(notification);
+                  setTimeout(() => notification.remove(), 3000);
+                }
+              })
+              .catch((error) => {
+                console.error("Error:", error);
+                // Show error notification
+                const notification = document.createElement("div");
+                notification.className =
+                  "fixed bottom-4 right-4 bg-red-500 text-white px-6 py-3 rounded shadow-lg z-50";
+                notification.textContent = "Error deleting document";
+                document.body.appendChild(notification);
+                setTimeout(() => notification.remove(), 3000);
+              })
+              .finally(() => {
+                modal.classList.add("hidden");
+                cleanup();
+              });
+          };
 
-      // Validate data structure
-      if (
-        !data ||
-        !Array.isArray(data.prompts) ||
-        !Array.isArray(data.history)
-      ) {
-        throw new Error("Invalid navigation data structure");
-      }
+          // Handle modal close
+          const handleClose = () => {
+            modal.classList.add("hidden");
+            cleanup();
+          };
 
-      // Update prompts list
-      const promptsList = document.getElementById("prompts-list");
-      if (promptsList) {
-        // Keep the view all and new prompt links
-        const staticLinks = promptsList.querySelectorAll("li:nth-child(-n+3)");
-        promptsList.innerHTML = "";
-        staticLinks.forEach((link) =>
-          promptsList.appendChild(link.cloneNode(true)),
-        );
+          // Cleanup event listeners
+          const cleanup = () => {
+            confirmDelete.removeEventListener("click", handleDelete);
+            cancelDelete.removeEventListener("click", handleClose);
+            closeButton.removeEventListener("click", handleClose);
+            modal.removeEventListener("click", handleOutsideClick);
+          };
 
-        // Add prompts with error handling
-        data.prompts.forEach((prompt) => {
-          try {
-            if (!prompt?._id?.$oid || !prompt?.name) {
-              console.warn("Invalid prompt data:", prompt);
-              return;
+          // Handle click outside modal
+          const handleOutsideClick = (event) => {
+            if (!modalContent.contains(event.target)) {
+              handleClose();
             }
+          };
 
-            console.log("Prompt modified date:", prompt.modified_date);
-            const formattedDate = formatDate(prompt.modified_date);
-            console.log("Formatted date:", formattedDate);
-
-            const li = document.createElement("li");
-            li.className = "w-full";
-            li.innerHTML = `
-              <div class="flex items-center gap-2 w-full px-4 py-2 hover:bg-base-200 group rounded-lg">
-                <a href="/chat/prompt/${prompt._id.$oid}" class="flex-1 min-w-0" title="${prompt.name}">
-                  <span class="truncate text-xs block">${prompt.name}</span>
-                </a>
-                <span class="text-[10px] text-gray-500 whitespace-nowrap shrink-0">${formattedDate}</span>
-                <a href="/d/prompt/${prompt._id.$oid}" class="shrink-0 opacity-0 group-hover:opacity-100 transition-opacity" aria-label="Edit prompt" title="Edit prompt">
-                  <span class="icon-[tabler--edit] size-3.5 text-primary"></span>
-                </a>
-              </div>
-            `;
-            promptsList.appendChild(li);
-          } catch (itemError) {
-            console.warn("Error adding prompt item:", itemError);
-          }
+          // Add event listeners
+          confirmDelete.addEventListener("click", handleDelete);
+          cancelDelete.addEventListener("click", handleClose);
+          closeButton.addEventListener("click", handleClose);
+          modal.addEventListener("click", handleOutsideClick);
         });
-      }
-
-      // Update history list
-      const historyList = document.getElementById("history-list");
-      if (historyList) {
-        // Keep the view all link and delete button
-        const staticLinks = historyList.querySelectorAll("li:nth-child(-n+3)");
-        historyList.innerHTML = "";
-        staticLinks.forEach((link) =>
-          historyList.appendChild(link.cloneNode(true)),
-        );
+      });
+    </script>
+  </body>
+</html>
+```
 
-        let addedCount = 0;
-        // Add history items with error handling
-        data.history.forEach((item) => {
-          try {
-            if (!item?._id?.$oid) {
-              return;
-            }
+## base/collection/table.html
 
-            const li = document.createElement("li");
-            li.className = "w-full";
-            li.innerHTML = `
-              <a href="/chat/history/${item._id.$oid}" 
-                 class="flex items-center gap-2 w-full px-4 py-2 hover:bg-base-200 rounded-lg"
-                 title="${item.first_message || "Untitled Chat"}">
-                <span class="truncate flex-1 text-xs">${item.first_message || "Untitled Chat"}</span>
-                <span class="text-[10px] text-gray-500 whitespace-nowrap shrink-0">${formatDate(item.modified_date)}</span>
+```
+<div class="flex flex-col gap-4">
+  {% include('/base/collection/pagination.html') %}
+  <div
+    class="overflow-x-auto rounded-lg border border-slate-200 dark:border-slate-700"
+  >
+    <table class="table border-collapse w-full">
+      <thead>
+        <tr>
+          {% for header in table_header %}
+          <th
+            class="font-bold {{header.class}} px-4 py-3 border-b border-r border-slate-200 dark:border-slate-700 last:border-r-0"
+          >
+            {{header.label}}
+          </th>
+          {% endfor %}
+          <th
+            class="w-16 px-4 py-3 text-right border-b border-r border-slate-200 dark:border-slate-700 last:border-r-0 sticky right-0 bg-white z-10"
+          >
+            Actions
+          </th>
+        </tr>
+      </thead>
+      <tbody>
+        {% for document in table_content %}
+        <tr
+          class="{% if not loop.last %}border-b border-slate-200 dark:border-slate-700{% endif %}"
+        >
+          {% for field in document %}
+          <td
+            class="font-normal leading-normal px-4 py-2 border-r border-slate-200 dark:border-slate-700 last:border-r-0"
+          >
+            {% if field.type == 'ButtonField' %}
+            <div class="flex justify-start items-center">
+              <a href="{{field.link}}/{{field.id}}" class="w-full">
+                <button
+                  type="button"
+                  class="btn btn-primary btn-outline btn-sm {{field.class}} truncate"
+                >
+                  {{field.label}}
+                </button>
               </a>
-            `;
-            historyList.appendChild(li);
-            addedCount++;
-          } catch (itemError) {
-            console.warn("Error adding history item:", itemError);
-          }
-        });
-        console.log("Actually added history items:", addedCount);
-      }
-    } catch (error) {
-      console.error("Error updating navigation:", error);
-      showErrorNotification(
-        "Failed to update navigation. Please refresh the page.",
-      );
-    }
-  }
+            </div>
+            {% else %} {{field.value}} {% endif %}
+          </td>
+          {% endfor %}
+          <td class="w-16 px-4 py-2 text-right sticky right-0 bg-white">
+            <div class="flex gap-2 justify-end">
+              <a
+                href="{{document_url}}/{{document[0].id}}"
+                class="btn btn-primary btn-sm btn-outline"
+              >
+                <span class="icon-[tabler--edit] size-4"></span>
+              </a>
+              <button
+                type="button"
+                class="btn btn-error btn-sm btn-outline delete-btn"
+                data-id="{{document[0].id}}"
+                data-type="{{collection_name}}"
+              >
+                <span class="icon-[tabler--trash] size-4"></span>
+              </button>
+            </div>
+          </td>
+        </tr>
+        {% endfor %}
+      </tbody>
+    </table>
+  </div>
+  {% include('/base/collection/pagination.html') %}
+</div>
+```
 
-  // Function to handle history deletion
-  async function handleDeleteHistory() {
-    if (
-      !confirm(
-        "Are you sure you want to delete all history documents? This action cannot be undone.",
-      )
-    ) {
-      return;
-    }
+## testing/create_users.py
 
-    try {
-      const response = await fetch(
-        "{{ url_for('dms_chat.delete_all_history') }}",
-        {
-          method: "POST",
-          headers: {
-            "X-CSRFToken": "{{ csrf_token() }}",
-          },
-        },
-      );
+```
+import sys
+import os
 
-      if (!response.ok) {
-        throw new Error("Failed to delete history");
-      }
+# Add the project root directory to Python path
+sys.path.append(os.path.dirname(os.path.dirname(os.path.dirname(__file__))))
 
-      const result = await response.json();
+from core.db_user import create_user
 
-      // Check if we're on a history page or list history page
-      const currentPath = window.location.pathname;
-      if (
-        currentPath.includes("/chat/history/") ||
-        currentPath.includes("/list/history")
-      ) {
-        // Redirect to index page
-        window.location.href = "/";
-        return;
-      }
+for i in range(1, 20):
+    username = f"User{i}"
+    name = f"Name{i}"
+    email = f"user{i}.name@gmail.com"
+    password = '12345'
 
-      // Update the navigation items
-      await updateNavItems();
-    } catch (error) {
-      console.error("Error deleting history:", error);
-      showErrorNotification("Failed to delete history. Please try again.");
-    }
-  }
+    # Create user with generated data
+    create_user(username, name, email, password, role='user')
+```
 
-  // Initialize nav items when the page loads
-  document.addEventListener("DOMContentLoaded", updateNavItems);
+## chat/chat_messages_rendered.html
 
-  // Update nav items periodically with a debounce
-  let updateTimeout = null;
-  function debouncedUpdate() {
-    if (updateTimeout) {
-      clearTimeout(updateTimeout);
-    }
-    updateTimeout = setTimeout(updateNavItems, 500);
-  }
+```
+<div
+  id="chat_messages"
+  class="ml-2 mr-2 mt-3 mb-2 md:ml-16 md:mr-16 md:mt-6 overflow-auto flex flex-col space-y-2"
+>
+  {% for message in config.messages %} {% if message.role =='user' %}
+  <div class="flex space-x-4 mb-4">
+    <div
+      class="flex justify-center items-center w-10 h-10 bg-gray-500 text-white rounded-full"
+    >
+      {{ config.firstname[0] if config.firstname else '' }}{{ config.name[0] if
+      config.name else '' }}
+    </div>
+    <div
+      class="message content bg-neutral-content rounded-lg p-4 flex-1 min-w-0 break-words"
+      id="message-{{ loop.index }}"
+    ></div>
+  </div>
+  {% endif %} {% if message.role =='assistant' %}
+  <div class="flex space-x-4 mb-4">
+    <div
+      class="flex justify-center items-center w-10 h-10 bg-gray-600 text-white rounded-full"
+    >
+      <svg
+        xmlns="http://www.w3.org/2000/svg"
+        fill="none"
+        viewBox="0 0 24 24"
+        stroke-width="1.5"
+        stroke="currentColor"
+        class="w-6 h-6"
+      >
+        <path
+          stroke-linecap="round"
+          stroke-linejoin="round"
+          d="M9.813 15.904 9 18.75l-.813-2.846a4.5 4.5 0 0 0-3.09-3.09L2.25 12l2.846-.813a4.5 4.5 0 0 0 3.09-3.09L9 5.25l.813 2.846a4.5 4.5 0 0 0 3.09 3.09L15.75 12l-2.846.813a4.5 4.5 0 0 0-3.09 3.09ZM18.259 8.715 18 9.75l-.259-1.035a3.375 3.375 0 0 0-2.455-2.456L14.25 6l1.036-.259a3.375 3.375 0 0 0 2.455-2.456L18 2.25l.259 1.035a3.375 3.375 0 0 0 2.456 2.456L21.75 6l-1.035.259a3.375 3.375 0 0 0-2.456 2.456ZM16.894 20.567 16.5 21.75l-.394-1.183a2.25 2.25 0 0 0-1.423-1.423L13.5 18.75l1.183-.394a2.25 2.25 0 0 0 1.423-1.423l.394-1.183.394 1.183a2.25 2.25 0 0 0 1.423 1.423l1.183.394-1.183.394a2.25 2.25 0 0 0-1.423 1.423Z"
+        />
+      </svg>
+    </div>
+    <div
+      class="message content bg-secondary-content rounded-lg p-4 flex-1 min-w-0 break-words"
+      id="message-{{ loop.index }}"
+    ></div>
+  </div>
+  {% endif %} {% endfor %}
+</div>
 
-  // Update every 30 seconds, but use debouncing to prevent overlapping calls
-  setInterval(debouncedUpdate, 30000);
+<script>
+  // Process all messages after the page loads
+  document.addEventListener('DOMContentLoaded', function() {
+    {% for message in config.messages %}
+      const messageContent = {{message.content|tojson}};
+      const container = document.getElementById('message-{{ loop.index }}');
+      if (container) {
+        appendData(messageContent, container);
+      }
+    {% endfor %}
+  });
 </script>
 ```
 
-## base/collection/pagination.html
+## chat/user_message_template.html
 
 ```
-{% if total != null %}
-<div class="flex flex-wrap items-center justify-between gap-2">
-  <div class="flex flex-wrap items-center gap-2 sm:gap-4">
-    <nav class="flex items-center gap-x-1" aria-label="Pagination">
-      {% if prev != null and prev != None %}
-      <a
-        href="{{collection_url}}?start=0&limit={{limit}}&search={{search}}&id={{id}}&filter={{filter}}"
-        class="btn btn-outline btn-primary"
-        aria-label="First"
-      >
-        <span
-          class="icon-[tabler--chevrons-left] size-5 rtl:rotate-180 sm:hidden"
-        ></span>
-        <span class="hidden sm:inline">First</span>
-      </a>
-      <a
-        href="{{collection_url}}?start={{prev}}&limit={{limit}}&search={{search}}&id={{id}}&filter={{filter}}"
-        class="btn btn-outline btn-primary"
-        aria-label="Previous"
-      >
-        <span
-          class="icon-[tabler--chevron-left] size-5 rtl:rotate-180 sm:hidden"
-        ></span>
-        <span class="hidden sm:inline">Previous</span>
-      </a>
-      {% endif %}
+<div class="flex space-x-4 mb-6">
+  <div
+    class="flex justify-center items-center w-10 h-10 bg-gray-500 text-white rounded-full flex-shrink-0"
+  >
+    {{ config.firstname[0] if config.firstname else '' }}{{ config.name[0] if
+    config.name else '' }}
+  </div>
+  <div
+    class="message content bg-neutral-content rounded-lg p-4 flex-1 min-w-0 break-words"
+  ></div>
+</div>
+```
 
-      <div class="flex items-center gap-x-1">
-        <!-- Page numbers would go here -->
+## chat/code_block_template.html
+
+```
+<div class="flex flex-col w-full">
+    <div class="h-8 bg-gray-800 w-full flex rounded-t justify-between items-center px-4">
+      <!-- Language Info Placeholder -->
+      <span class="text-sm text-white language-info"></span>
+
+      <div class="flex flex-row items-center gap-2">
+        <span class="copied hidden text-sm font-extralight text-green-400">copied!</span>
+        <!-- Copy Button -->
+      <button class="h-4 w-4 copy-btn flex items-center justify-center text-white hover:text-green-400">
+        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
+          <path stroke-linecap="round" stroke-linejoin="round" d="M15.666 3.888A2.25 2.25 0 0 0 13.5 2.25h-3c-1.03 0-1.9.693-2.166 1.638m7.332 0c.055.194.084.4.084.612v0a.75.75 0 0 1-.75.75H9a.75.75 0 0 1-.75-.75v0c0-.212.03-.418.084-.612m7.332 0c.646.049 1.288.11 1.927.184 1.1.128 1.907 1.077 1.907 2.185V19.5a2.25 2.25 0 0 1-2.25 2.25H6.75A2.25 2.25 0 0 1 4.5 19.5V6.257c0-1.108.806-2.057 1.907-2.185a48.208 48.208 0 0 1 1.927-.184" />
+        </svg>
+      </button>
       </div>
+      
+    </div>
+    <div class="w-full">
+      <pre class="bg-gray-700 text-sm text-white rounded-b p-2 overflow-x-auto whitespace-pre-wrap">
+      </pre>
+    </div>
+  </div>
+```
 
-      {% if next %}
-      <a
-        href="{{collection_url}}?start={{next}}&limit={{limit}}&search={{search}}&id={{id}}&filter={{filter}}"
-        class="btn btn-outline btn-primary"
-        aria-label="Next"
+## chat/chat_prompts.html
+
+```
+{% if config.messages | length == 0 %}
+<div
+  id="prompts"
+  class="ml-2 mr-2 mb-2 md:ml-16 md:mr-16 flex flex-col gap-4 mt-8"
+>
+  {% if config.history %}
+  <h3
+    class="text-center text-xl font-semibold text-gray-700 dark:text-gray-300"
+  >
+    Last Chats
+  </h3>
+  <div class="flex flex-row flex-wrap justify-center gap-4">
+    {% for item in config.history %}
+    <a href="/chat/history/{{ item.id }}" class="no-underline">
+      <div
+        id="history_{{ loop.index }}"
+        class="relative h-12 w-64 flex items-center justify-center bg-indigo-500 hover:bg-indigo-700 text-white rounded-xl cursor-pointer px-4"
       >
-        <span class="hidden sm:inline">Next</span>
-        <span
-          class="icon-[tabler--chevron-right] size-5 rtl:rotate-180 sm:hidden"
-        ></span>
-      </a>
-      {% endif %} {% if last != null and last != None %}
-      <a
-        href="{{collection_url}}?start={{last}}&limit={{limit}}&search={{search}}&id={{id}}&filter={{filter}}"
-        class="btn btn-outline btn-primary"
-        aria-label="Last"
+        <span class="truncate">{{ item.first_message }}</span>
+      </div>
+    </a>
+    {% endfor %}
+  </div>
+  <hr class="h-px my-2 bg-gray-200 border-0 dark:bg-gray-700" />
+  {% endif %} {% if config.latest_prompts %}
+  <h3
+    class="text-center text-xl font-semibold text-gray-700 dark:text-gray-300"
+  >
+    Latest Prompts
+  </h3>
+  <div class="flex flex-row flex-wrap justify-center gap-4">
+    {% for prompt in config.latest_prompts %}
+    <a href="/chat/prompt/{{ prompt.id }}" class="no-underline">
+      <div
+        id="prompt_{{ loop.index }}"
+        class="relative h-12 w-64 flex items-center justify-center bg-indigo-500 hover:bg-indigo-700 text-white rounded-xl cursor-pointer px-4"
       >
-        <span class="hidden sm:inline">Last</span>
-        <span
-          class="icon-[tabler--chevrons-right] size-5 rtl:rotate-180 sm:hidden"
-        ></span>
-      </a>
-      {% endif %}
-    </nav>
-
-    <div class="text-sm text-gray-500">
-      {% if total != None and total > 0 %} Showing
-      <span class="font-medium">{{start}}</span>
-      to
-      <span class="font-medium">{{end}}</span>
-      of
-      <span class="font-medium">{{total}}</span>
-      results {% else %} No results found {% endif %}
+        <span class="truncate">{{ prompt.name }}</span>
+      </div>
+    </a>
+    {% endfor %}
+  </div>
+  {% endif %} {% if not config.history and not config.latest_prompts %}
+  <div class="flex flex-row flex-wrap justify-center gap-4">
+    <div
+      class="prompt relative h-12 w-64 flex items-center justify-center bg-indigo-500 hover:bg-indigo-700 text-white rounded-xl cursor-pointer px-4"
+    >
+      <span class="truncate">Wer war Ada Lovelace?</span>
+    </div>
+    <div
+      class="group relative prompt h-12 w-64 flex items-center justify-center bg-indigo-500 hover:bg-indigo-700 text-white rounded-xl cursor-pointer px-4"
+    >
+      <span class="truncate">Schreibe eine index.html</span>
     </div>
   </div>
+  {% endif %}
+</div>
+{% endif %}
+```
 
-  <!-- Limit dropdown -->
-  <div class="dropdown relative inline-flex rtl:[--placement:bottom-end]">
-    <button
-      id="dropdown-default"
-      type="button"
-      class="dropdown-toggle btn btn-primary btn-outline"
-      aria-haspopup="menu"
-      aria-expanded="false"
-      aria-label="Limit"
-    >
-      Limit
-      <span
-        class="icon-[tabler--chevron-down] dropdown-open:rotate-180 size-4"
-      ></span>
-    </button>
-    <ul
-      aria-labelledby="dropdown-default"
-      aria-orientation="vertical"
-      class="dropdown-menu dropdown-open:opacity-100 hidden min-w-60"
-      role="menu"
+## chat/bot_message_template.html
+
+```
+<div class="flex space-x-4 mb-6">
+  <div
+    class="flex justify-center items-center w-10 h-10 bg-gray-600 text-white rounded-full flex-shrink-0"
+  >
+    <svg
+      xmlns="http://www.w3.org/2000/svg"
+      fill="none"
+      viewBox="0 0 24 24"
+      stroke-width="1.5"
+      stroke="currentColor"
+      class="w-6 h-6"
     >
-      <li>
-        <a
-          class="dropdown-item"
-          href="{{collection_url}}?start=0&limit=5&search={{search}}&filter={{filter}}"
-        >
-          5 Items
-        </a>
-      </li>
-      <li>
-        <a
-          class="dropdown-item"
-          href="{{collection_url}}?start=0&limit=10&search={{search}}&filter={{filter}}"
-        >
-          10 Items
-        </a>
-      </li>
-      <li>
-        <a
-          class="dropdown-item"
-          href="{{collection_url}}?start=0&limit=20&search={{search}}&filter={{filter}}"
+      <path
+        stroke-linecap="round"
+        stroke-linejoin="round"
+        d="M9.813 15.904 9 18.75l-.813-2.846a4.5 4.5 0 0 0-3.09-3.09L2.25 12l2.846-.813a4.5 4.5 0 0 0 3.09-3.09L9 5.25l.813 2.846a4.5 4.5 0 0 0 3.09 3.09L15.75 12l-2.846.813a4.5 4.5 0 0 0-3.09 3.09ZM18.259 8.715 18 9.75l-.259-1.035a3.375 3.375 0 0 0-2.455-2.456L14.25 6l1.036-.259a3.375 3.375 0 0 0 2.455-2.456L18 2.25l.259 1.035a3.375 3.375 0 0 0 2.456 2.456L21.75 6l-1.035.259a3.375 3.375 0 0 0-2.456 2.456ZM16.894 20.567 16.5 21.75l-.394-1.183a2.25 2.25 0 0 0-1.423-1.423L13.5 18.75l1.183-.394a2.25 2.25 0 0 0 1.423-1.423l.394-1.183.394 1.183a2.25 2.25 0 0 0 1.423 1.423l1.183.394-1.183.394a2.25 2.25 0 0 0-1.423 1.423Z"
+      />
+    </svg>
+  </div>
+  <div class="flex-1 min-w-0">
+    <div
+      class="message content bg-secondary-content rounded-lg p-4 break-words"
+    ></div>
+    <div class="flex justify-start mt-2">
+      <button
+        class="copy-btn flex items-center gap-1 text-sm text-gray-500 hover:text-gray-700 active:scale-95 transition-all duration-100 rounded px-2 py-1 hover:bg-gray-100"
+      >
+        <svg
+          class="w-4 h-4 copy-icon"
+          xmlns="http://www.w3.org/2000/svg"
+          fill="none"
+          viewBox="0 0 24 24"
+          stroke-width="1.5"
+          stroke="currentColor"
         >
-          20 Items
-        </a>
-      </li>
-      <li>
-        <a
-          class="dropdown-item"
-          href="{{collection_url}}?start=0&limit=50&search={{search}}&filter={{filter}}"
+          <path
+            stroke-linecap="round"
+            stroke-linejoin="round"
+            d="M15.666 3.888A2.25 2.25 0 0013.5 2.25h-3c-1.03 0-1.9.693-2.166 1.638m7.332 0c.055.194.084.4.084.612v0a.75.75 0 01-.75.75H9a.75.75 0 01-.75-.75v0c0-.212.03-.418.084-.612m7.332 0c.646.049 1.288.11 1.927.184 1.1.128 1.907 1.077 1.907 2.185V19.5a2.25 2.25 0 01-2.25 2.25H6.75A2.25 2.25 0 014.5 19.5V6.257c0-1.108.806-2.057 1.907-2.185a48.208 48.208 0 011.927-.184"
+          />
+        </svg>
+        <svg
+          class="w-4 h-4 check-icon hidden"
+          xmlns="http://www.w3.org/2000/svg"
+          fill="none"
+          viewBox="0 0 24 24"
+          stroke-width="1.5"
+          stroke="currentColor"
         >
-          50 Items
-        </a>
-      </li>
-    </ul>
+          <path
+            stroke-linecap="round"
+            stroke-linejoin="round"
+            d="M4.5 12.75l6 6 9-13.5"
+          />
+        </svg>
+        <span class="copy-text">Copy</span>
+        <span class="check-text hidden">Copied!</span>
+      </button>
+    </div>
   </div>
 </div>
-{% endif %}
 ```
 
-## base/collection/collection.html
+## chat/chat_messages.html
 
 ```
-<!doctype html>
-<html lang="en" class="overflow-y-scroll">
-  {% include('/main/header.html') %}
-  <body class="bg-gray-50 min-h-screen">
-    {% include('/main/nav.html') %}
+<div
+  id="chat_messages"
+  class="mt-4 mb-4 overflow-auto flex flex-col min-h-[200px]"
+></div>
+```
 
-    <section class="p-4 sm:p-6 flex items-center lg:ml-64">
-      <div class="max-w-screen-xl mx-auto px-2 sm:px-4 lg:px-12 w-full">
+## chat/chat_ui.html
+
+```
+<div
+  id="chat_ui"
+  class="fixed bottom-0 left-0 lg:left-64 lg:w-[calc(100%-16rem)] w-full h-40 bg-base-100"
+>
+  <div
+    class="flex flex-col absolute bottom-0 left-0 right-0 h-32 ml-2 mr-2 mb-2 md:ml-10 md:mr-10 md:mb-4 rounded-xl bg-white shadow-[0_-2px_15px_-3px_rgba(0,0,0,0.1)] border border-gray-100"
+  >
+    <div class="p-3 pr-16 overflow-hidden">
+      <textarea
+        id="chat_input"
+        placeholder="Type your message and press Command or Strg + Enter"
+        rows="3"
+        class="border-none ring-0 w-full rounded-lg focus:outline-none focus:ring-0 resize-none"
+      ></textarea>
+    </div>
+    <div class="ml-6 mb-4 flex items-center gap-2">
+      <div
+        class="dropdown relative inline-flex [--placement:top]"
+        data-dropdown
+      >
+        <button
+          id="modelSelectorButton"
+          class="badge badge-outline badge-primary dropdown-toggle"
+          data-dropdown-toggle
+        >
+          <span id="selected_model"></span>
+        </button>
         <div
-          class="relative bg-white shadow-md dark:bg-gray-800 sm:rounded-lg p-3 sm:p-4"
+          class="dropdown-menu min-w-44 dropdown-open:opacity-100 hidden"
+          role="menu"
+          aria-orientation="vertical"
+          aria-labelledby="modelSelectorButton"
         >
-          <div class="flex flex-col gap-4">
-            <div
-              class="flex flex-row justify-between items-center gap-2 sm:gap-4"
-            >
-              <div class="flex-1">
-                <form
-                  method="GET"
-                  action="{{ url_for('list', collection=collection_name, start=start, limit=limit, filter=filter) }}"
-                >
-                  <div class="relative">
-                    <div
-                      class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none"
-                    >
-                      <svg
-                        class="w-4 h-4 text-gray-500"
-                        fill="currentColor"
-                        viewBox="0 0 20 20"
-                      >
-                        <path
-                          fill-rule="evenodd"
-                          d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z"
-                          clip-rule="evenodd"
-                        ></path>
-                      </svg>
-                    </div>
-                    <input
-                      type="text"
-                      name="search"
-                      class="w-full max-w-md pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"
-                      placeholder="Search"
-                      value="{{ search }}"
-                    />
-                  </div>
-                </form>
-              </div>
-
-              <div class="flex-none">
-                <a
-                  href="{{ url_for('doc',name = collection_name) }}"
-                  class="btn btn-primary whitespace-nowrap"
-                >
-                  New
-                </a>
-              </div>
-            </div>
-
-            {% include('/base/collection/table.html') %}
-          </div>
-        </div>
-      </div>
-    </section>
-
-    <!-- Delete Modal -->
-    <div
-      id="deleteModal"
-      tabindex="-1"
-      class="hidden overflow-y-auto overflow-x-hidden bg-gray-600 bg-opacity-65 backdrop-blur-sm fixed top-0 right-0 left-0 z-50 flex justify-center items-center w-full h-full"
-    >
-      <div id="modalContent" class="relative p-4 w-full max-w-md max-h-full">
-        <div class="relative bg-white rounded-lg shadow">
+          {% for model in config.models %}
           <button
-            type="button"
-            class="absolute top-3 right-2.5 text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center"
-            id="closeModal"
+            id="{{ model.model }}"
+            data-name="{{ model.name }}"
+            class="model dropdown-item w-full text-left px-4 py-2 hover:bg-gray-100"
           >
-            <svg
-              class="w-3 h-3"
-              aria-hidden="true"
-              xmlns="http://www.w3.org/2000/svg"
-              fill="none"
-              viewBox="0 0 14 14"
-            >
-              <path
-                stroke="currentColor"
-                stroke-linecap="round"
-                stroke-linejoin="round"
-                stroke-width="2"
-                d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"
-              />
-            </svg>
-            <span class="sr-only">Close modal</span>
+            {{ model.name }}
           </button>
-          <div class="p-4 md:p-5 text-center">
-            <svg
-              class="mx-auto mb-4 text-gray-400 w-12 h-12"
-              aria-hidden="true"
-              xmlns="http://www.w3.org/2000/svg"
-              fill="none"
-              viewBox="0 0 20 20"
-            >
-              <path
-                stroke="currentColor"
-                stroke-linecap="round"
-                stroke-linejoin="round"
-                stroke-width="2"
-                d="M10 11V6m0 8h.01M19 10a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z"
-              />
-            </svg>
-            <h3 class="mb-5 text-lg font-normal text-gray-500">
-              Are you sure?
-            </h3>
-            <button
-              id="confirmDelete"
-              type="button"
-              class="text-white bg-red-600 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 font-medium rounded-lg text-sm inline-flex items-center px-5 py-2.5 text-center"
-            >
-              Yes, I'm sure
-            </button>
-            <button
-              id="cancelDelete"
-              type="button"
-              class="py-2.5 px-5 ms-3 text-sm font-medium text-gray-900 focus:outline-none bg-white rounded-lg border border-gray-200 hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-4 focus:ring-gray-100"
-            >
-              No, cancel
-            </button>
-          </div>
+          {% endfor %}
         </div>
       </div>
+
+      <label for="file-upload" class="cursor-pointer">
+        <div
+          class="badge badge-outline badge-secondary flex items-center gap-1"
+        >
+          <svg
+            xmlns="http://www.w3.org/2000/svg"
+            fill="none"
+            viewBox="0 0 24 24"
+            stroke-width="1.5"
+            stroke="currentColor"
+            class="w-4 h-4"
+          >
+            <path
+              stroke-linecap="round"
+              stroke-linejoin="round"
+              d="M18.375 12.739l-7.693 7.693a4.5 4.5 0 01-6.364-6.364l10.94-10.94A3 3 0 1119.5 7.372L8.552 18.32m.009-.01l-.01.01m5.699-9.941l-7.81 7.81a1.5 1.5 0 002.112 2.13"
+            />
+          </svg>
+          <span id="file-name-display">Upload</span>
+        </div>
+      </label>
+      <input type="file" id="file-upload" class="hidden" />
     </div>
 
-    <script src="{{ url_for('static', filename='js/lib/flyonui.js') }}"></script>
-    <script>
-      document.querySelectorAll(".delete-btn").forEach((button) => {
-        button.addEventListener("click", function () {
-          const id = this.dataset.id;
-          const type = this.dataset.type;
-          const modal = document.getElementById("deleteModal");
-          const modalContent = document.getElementById("modalContent");
-          const confirmDelete = document.getElementById("confirmDelete");
-          const cancelDelete = document.getElementById("cancelDelete");
-          const closeButton = document.getElementById("closeModal");
+    <div class="absolute bottom-0 right-0 p-3 flex flex-col gap-2">
+      <button
+        id="reset_button"
+        class="bg-slate-800 hover:bg-slate-600 text-white font-extralight p-2.5 rounded"
+      >
+        <svg
+          xmlns="http://www.w3.org/2000/svg"
+          fill="none"
+          viewBox="0 0 24 24"
+          stroke-width="1.5"
+          stroke="currentColor"
+          class="w-6 h-6"
+        >
+          <path
+            stroke-linecap="round"
+            stroke-linejoin="round"
+            d="M12 4.5v15m7.5-7.5h-15"
+          />
+        </svg>
+      </button>
 
-          // Show modal
-          modal.classList.remove("hidden");
+      <button
+        id="chat_button"
+        class="bg-slate-800 hover:bg-slate-600 text-white font-extralight p-2.5 rounded"
+      >
+        <svg
+          xmlns="http://www.w3.org/2000/svg"
+          fill="none"
+          viewBox="0 0 24 24"
+          stroke-width="1.5"
+          stroke="currentColor"
+          class="w-6 h-6"
+        >
+          <path
+            stroke-linecap="round"
+            stroke-linejoin="round"
+            d="M6 12 3.269 3.125A59.769 59.769 0 0 1 21.485 12 59.768 59.768 0 0 1 3.27 20.875L5.999 12Zm0 0h7.5"
+          />
+        </svg>
+      </button>
+      <button
+        id="stop_button"
+        class="hidden bg-red-500 hover:bg-red-400 text-white font-extralight p-2.5 rounded"
+      >
+        <svg
+          xmlns="http://www.w3.org/2000/svg"
+          fill="none"
+          viewBox="0 0 24 24"
+          stroke-width="1.5"
+          stroke="currentColor"
+          class="w-6 h-6"
+        >
+          <path
+            stroke-linecap="round"
+            stroke-linejoin="round"
+            d="M5.25 7.5A2.25 2.25 0 0 1 7.5 5.25h9a2.25 2.25 0 0 1 2.25 2.25v9a2.25 2.25 0 0 1-2.25 2.25h-9a2.25 2.25 0 0 1-2.25-2.25v-9Z"
+          />
+        </svg>
+      </button>
+    </div>
+  </div>
+</div>
+```
 
-          // Handle delete confirmation
-          const handleDelete = () => {
-            const url = "{{ url_for('delete_document') }}";
+## chat/chat.html
 
-            fetch(url + "?id=" + id + "&type=" + type, {
-              method: "GET",
-              headers: {
-                "X-CSRFToken": "{{ csrf_token() }}",
-              },
-            })
-              .then((response) => response.json())
-              .then((result) => {
-                if (result.status === "ok") {
-                  // Remove the row from the table
-                  const row = button.closest("tr");
-                  row.remove();
+```
+<!doctype html>
+<html lang="en" class="h-full">
+  {% include('/main/header.html') %}
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="csrf-token" content="{{ csrf_token() }}" />
+    <title>Chat</title>
+  </head>
+  <body class="min-h-full flex flex-col bg-base-100">
+    {% include('/main/nav.html') %}
 
-                  // Show success notification
-                  const notification = document.createElement("div");
-                  notification.className =
-                    "fixed bottom-4 right-4 bg-green-500 text-white px-6 py-3 rounded shadow-lg z-50";
-                  notification.textContent = "Document deleted successfully";
-                  document.body.appendChild(notification);
-                  setTimeout(() => notification.remove(), 3000);
-                } else {
-                  // Show error notification
-                  const notification = document.createElement("div");
-                  notification.className =
-                    "fixed bottom-4 right-4 bg-red-500 text-white px-6 py-3 rounded shadow-lg z-50";
-                  notification.textContent =
-                    "Error deleting document: " + result.message;
-                  document.body.appendChild(notification);
-                  setTimeout(() => notification.remove(), 3000);
-                }
-              })
-              .catch((error) => {
-                console.error("Error:", error);
-                // Show error notification
-                const notification = document.createElement("div");
-                notification.className =
-                  "fixed bottom-4 right-4 bg-red-500 text-white px-6 py-3 rounded shadow-lg z-50";
-                notification.textContent = "Error deleting document";
-                document.body.appendChild(notification);
-                setTimeout(() => notification.remove(), 3000);
-              })
-              .finally(() => {
-                modal.classList.add("hidden");
-                cleanup();
-              });
-          };
+    <section class="flex-1 flex items-start overflow-y-auto lg:ml-64">
+      <div class="px-4 md:px-10 w-full">
+        <div class="relative min-h-[calc(100vh-8rem)] pb-32">
+          <main id="main" class="flex flex-col h-full">
+            {% if config.messages|length == 0 %}
+            <!-- Show prompts and history first in a fresh chat -->
+            <div id="selected_prompts_container" class="flex-1">
+              {% include '/chat/chat_prompts.html' %}
+            </div>
+            <div id="chat_messages_container" class="pb-40">
+              {% include '/chat/chat_messages.html' %}
+            </div>
+            {% else %}
+            <!-- Show messages first in an existing chat -->
+            <div id="chat_messages_container" class="pb-40">
+              {% include '/chat/chat_messages.html' %}
+            </div>
+            <div id="selected_prompts_container">
+              {% include '/chat/chat_prompts.html' %}
+            </div>
+            {% endif %}
 
-          // Handle modal close
-          const handleClose = () => {
-            modal.classList.add("hidden");
-            cleanup();
-          };
+            <div id="chat_history_container" class="hidden"></div>
+            <div id="prompts_container" class="hidden"></div>
+            <div id="create_prompt_container" class="hidden"></div>
+            <div id="chat_ui_container">{% include '/chat/chat_ui.html' %}</div>
+          </main>
 
-          // Cleanup event listeners
-          const cleanup = () => {
-            confirmDelete.removeEventListener("click", handleDelete);
-            cancelDelete.removeEventListener("click", handleClose);
-            closeButton.removeEventListener("click", handleClose);
-            modal.removeEventListener("click", handleOutsideClick);
-          };
+          <!-- Bot Message Template -->
+          <template id="bot-message-template">
+            {% include '/chat/bot_message_template.html' %}
+          </template>
 
-          // Handle click outside modal
-          const handleOutsideClick = (event) => {
-            if (!modalContent.contains(event.target)) {
-              handleClose();
-            }
-          };
+          <!-- User Message Template -->
+          <template id="user-message-template">
+            {% include '/chat/user_message_template.html' %}
+          </template>
 
-          // Add event listeners
-          confirmDelete.addEventListener("click", handleDelete);
-          cancelDelete.addEventListener("click", handleClose);
-          closeButton.addEventListener("click", handleClose);
-          modal.addEventListener("click", handleOutsideClick);
-        });
+          <!-- File Banner Template -->
+          <template id="file-banner-template">
+            <div class="mb-6">
+              <div class="bg-blue-50 border-l-4 border-blue-400 p-4">
+                <div class="flex">
+                  <div class="flex-shrink-0">
+                    <svg
+                      class="h-5 w-5 text-blue-400"
+                      viewBox="0 0 20 20"
+                      fill="currentColor"
+                    >
+                      <path
+                        fill-rule="evenodd"
+                        d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z"
+                        clip-rule="evenodd"
+                      />
+                    </svg>
+                  </div>
+                  <div class="ml-3 flex items-center gap-3">
+                    <p class="text-sm text-blue-700">
+                      Using context from file: <span class="filename"></span>
+                    </p>
+                    <a
+                      href="#"
+                      class="download-link text-blue-700 hover:text-blue-900"
+                    >
+                      <svg
+                        class="w-4 h-4"
+                        xmlns="http://www.w3.org/2000/svg"
+                        fill="none"
+                        viewBox="0 0 24 24"
+                        stroke-width="1.5"
+                        stroke="currentColor"
+                      >
+                        <path
+                          stroke-linecap="round"
+                          stroke-linejoin="round"
+                          d="M3 16.5v2.25A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75V16.5M16.5 12L12 16.5m0 0L7.5 12m4.5 4.5V3"
+                        />
+                      </svg>
+                    </a>
+                  </div>
+                </div>
+              </div>
+            </div>
+          </template>
+
+          <template id="code_template">
+            {% include '/chat/code_block_template.html' %}
+          </template>
+        </div>
+      </div>
+    </section>
+
+    <script>
+      // Global variables
+      const messages = {{ config.messages | tojson | safe }};
+      const systemMessage = {{ config.system_message|tojson }};
+      const welcomeMessage = {{ config.welcome_message|tojson }};
+      const models = {{ config.models | tojson | safe}};
+      const use_prompt_template = {{ config.use_prompt_template|tojson }};
+      const username = {{ config.username|tojson }};
+      const chat_started = {{ config.chat_started|tojson }};
+
+      // Model selection
+      var selected_model = models[0]['model'];
+      var selected_model_name = models[0]['name'];
+      var selectedModelElement = document.getElementById('selected_model');
+
+      // Check localStorage for saved model
+      if (localStorage.getItem('selected_model') !== null) {
+        selected_model = localStorage.getItem('selected_model');
+        const model = models.find(m => m.model === selected_model);
+        if (model) {
+          selected_model_name = model.name;
+        }
+      }
+
+      selectedModelElement.innerText = selected_model_name;
+
+      document.addEventListener('click', function (e) {
+        if (e.target.closest('#prompts .prompt')) {
+          var chatInput = document.getElementById('chat_input');
+          if (chatInput) {
+            chatInput.value = e.target.textContent;
+          }
+
+          var chatButton = document.getElementById('chat_button');
+          if (chatButton) {
+            chatButton.click();
+          }
+
+          var promptsDiv = document.getElementById('prompts');
+          if (promptsDiv) {
+            promptsDiv.remove();
+          }
+        }
+
+        if (event.target.classList.contains('model')) {
+          selected_model = event.target.id;
+          selected_model_name = event.target.dataset.name;
+          localStorage.setItem('selected_model', selected_model);
+          selectedModelElement.innerText = selected_model_name;
+          const modelSelectorButton = document.getElementById('modelSelectorButton');
+          if (modelSelectorButton) {
+            modelSelectorButton.click();
+          }
+        }
       });
     </script>
+
+    <script src="{{ url_for('static', filename='/chat/chat_core.js') }}"></script>
+    <script src="{{ url_for('static', filename='js/lib/flyonui.js') }}"></script>
   </body>
 </html>
 ```
 
-## base/collection/table.html
+## main/header.html
 
 ```
-<div class="flex flex-col gap-4">
-  {% include('/base/collection/pagination.html') %}
-  <div
-    class="overflow-x-auto rounded-lg border border-slate-200 dark:border-slate-700"
-  >
-    <table class="table border-collapse w-full">
-      <thead>
-        <tr>
-          {% for header in table_header %}
-          <th
-            class="font-bold {{header.class}} px-4 py-3 border-b border-r border-slate-200 dark:border-slate-700 last:border-r-0"
+<head>
+  <meta charset="UTF-8" />
+  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+  <title>Fireworks</title>
+  <link
+    rel="stylesheet"
+    href="{{ url_for('static', filename='css/output.css') }}"
+  />
+  <link
+    rel="stylesheet"
+    href="{{ url_for('static', filename='css/flatpickr.min.css') }}"
+  />
+</head>
+```
+
+## main/nav.html
+
+```
+<!-- Sticky Navigation -->
+<nav
+  class="navbar bg-base-100 flex items-center justify-between p-4 sticky top-0 z-[60] shadow-sm"
+>
+  <div class="navbar-start">
+    <a
+      href="{{ url_for('index') }}"
+      class="link text-base-content/90 text-xl font-semibold no-underline flex items-center gap-2"
+    >
+      Fireworks
+    </a>
+  </div>
+  <div class="navbar-end flex items-center gap-2">
+    <!-- User Avatar Dropdown for Desktop -->
+    <div
+      class="dropdown relative inline-flex max-lg:hidden [--auto-close:inside] [--offset:8] [--placement:bottom-end]"
+    >
+      <button
+        type="button"
+        class="dropdown-toggle avatar placeholder"
+        aria-haspopup="menu"
+        aria-expanded="false"
+        aria-label="User menu"
+      >
+        <div class="bg-primary text-primary-content rounded-full w-10">
+          <span class="text-lg"
+            >{{ current_user.firstname[0] }}{{ current_user.name[0] }}</span
           >
-            {{header.label}}
-          </th>
-          {% endfor %}
-          <th
-            class="w-16 px-4 py-3 text-right border-b border-r border-slate-200 dark:border-slate-700 last:border-r-0 sticky right-0 bg-white z-10"
+        </div>
+      </button>
+      <ul
+        class="dropdown-menu dropdown-open:opacity-100 hidden min-w-48"
+        role="menu"
+      >
+        <div class="dropdown-header">
+          <h6 class="text-base-content/90 text-base">
+            {{ current_user.firstname }} {{ current_user.name }}
+          </h6>
+        </div>
+        <a
+          href="{{ url_for('doc', name='user', id=current_user.id) }}"
+          class="dropdown-item"
+        >
+          <span class="icon-[tabler--user] size-5"></span>
+          Edit Profile
+        </a>
+        <form action="{{ url_for('logout') }}" method="post">
+          <input type="hidden" name="csrf_token" value="{{ csrf_token() }}" />
+          <button type="submit" class="dropdown-item w-full text-left">
+            <span class="icon-[tabler--logout-2] size-5"></span>
+            Sign Out
+          </button>
+        </form>
+      </ul>
+    </div>
+    <!-- Mobile Menu Button -->
+    <button
+      type="button"
+      class="btn btn-text max-lg:btn-square lg:hidden"
+      aria-haspopup="dialog"
+      aria-expanded="false"
+      aria-controls="mobile-menu-overlay"
+      data-overlay="#mobile-menu-overlay"
+    >
+      <span class="icon-[tabler--menu-2] size-5"></span>
+    </button>
+  </div>
+</nav>
+
+<aside
+  id="mobile-menu-overlay"
+  class="overlay drawer drawer-start w-64 max-w-64 lg:fixed lg:top-[57px] lg:bottom-0 lg:left-0 lg:z-40 lg:flex lg:translate-x-0 overlay-open:translate-x-0 -translate-x-full transition-transform duration-300"
+  tabindex="-1"
+>
+  <div class="drawer-body w-64 bg-white h-full flex flex-col overflow-hidden">
+    <!-- Fixed Header Section -->
+    <div class="px-2 pt-4 pb-2 border-b border-base-200 flex-none">
+      <ul class="menu w-full space-y-0.5 p-0">
+        <li class="w-full">
+          <a
+            href="{{ url_for('index') }}"
+            class="flex items-center gap-2 px-4 py-2 w-full"
+          >
+            <span class="icon-[tabler--dashboard] size-5 shrink-0"></span>
+            <span class="truncate">Dashboard</span>
+          </a>
+        </li>
+        <li class="w-full">
+          <a
+            href="{{ url_for('dms_chat.chat') }}"
+            class="flex items-center gap-2 px-4 py-2 w-full"
+          >
+            <span class="icon-[tabler--message] size-5 shrink-0"></span>
+            <span class="truncate">Chat</span>
+          </a>
+        </li>
+      </ul>
+    </div>
+
+    <!-- Scrollable Content Section -->
+    <div
+      class="flex-1 overflow-y-auto scrollbar-thin scrollbar-thumb-base-300 scrollbar-track-transparent px-2 py-2"
+    >
+      <ul
+        class="menu w-full space-y-0.5 [&_.nested-collapse-wrapper]:space-y-0.5 [&_ul]:space-y-0.5 p-0 pb-6"
+      >
+        {% if current_user.is_admin %}
+        <li class="w-full space-y-0.5">
+          <button
+            type="button"
+            class="collapse-toggle w-full flex items-center gap-2 px-4 py-2 collapse-open:bg-base-content/10"
+            id="admin-collapse"
+            aria-expanded="false"
+            aria-controls="admin-collapse-content"
+            data-collapse="#admin-collapse-content"
+          >
+            <span class="icon-[tabler--shield-lock] size-5 shrink-0"></span>
+            <span class="truncate flex-1">Admin</span>
+            <span
+              class="icon-[tabler--chevron-down] collapse-open:rotate-180 size-4 shrink-0 transition-transform duration-300"
+            ></span>
+          </button>
+          <div
+            id="admin-collapse-content"
+            class="collapse hidden w-full overflow-hidden transition-[height] duration-300"
+            role="menu"
+            aria-labelledby="admin-collapse"
+          >
+            <div>
+              <ul class="menu w-full space-y-0.5">
+                <li class="w-full">
+                  <a
+                    href="{{ url_for('list', collection='user') }}"
+                    class="text-xs w-full px-4 py-2 hover:bg-base-200 flex items-center gap-2 rounded-lg"
+                  >
+                    <span class="icon-[tabler--users] size-5 shrink-0"></span>
+                    <span class="truncate">Manage Users</span>
+                  </a>
+                </li>
+                <li class="w-full">
+                  <a
+                    href="{{ url_for('list', collection='models') }}"
+                    class="text-xs w-full px-4 py-2 hover:bg-base-200 flex items-center gap-2 rounded-lg"
+                  >
+                    <span class="icon-[tabler--brain] size-5 shrink-0"></span>
+                    <span class="truncate">Manage Models</span>
+                  </a>
+                </li>
+              </ul>
+            </div>
+          </div>
+        </li>
+        {% endif %}
+        <li class="w-full space-y-0.5">
+          <button
+            type="button"
+            class="collapse-toggle w-full flex items-center gap-2 px-4 py-2 collapse-open:bg-base-content/10"
+            id="prompts-collapse"
+            aria-expanded="false"
+            aria-controls="prompts-collapse-content"
+            data-collapse="#prompts-collapse-content"
+          >
+            <span class="icon-[tabler--app-window] size-5 shrink-0"></span>
+            <span class="truncate flex-1">Prompts</span>
+            <span
+              class="icon-[tabler--chevron-down] collapse-open:rotate-180 size-4 shrink-0 transition-transform duration-300"
+            ></span>
+          </button>
+          <div
+            id="prompts-collapse-content"
+            class="collapse hidden w-full overflow-hidden transition-[height] duration-300"
+            aria-labelledby="prompts-collapse"
+          >
+            <div>
+              <ul class="menu space-y-0.5 w-full" id="prompts-list">
+                <li class="w-full">
+                  <a
+                    href="{{ url_for('list', collection='prompts') }}"
+                    class="text-xs view-all w-full px-4 py-2 hover:bg-base-200 flex items-center rounded-lg"
+                  >
+                    <span class="truncate">View All Prompts</span>
+                  </a>
+                </li>
+                <li class="w-full">
+                  <a
+                    href="{{ url_for('doc', name='prompt') }}"
+                    class="text-xs w-full px-4 py-2 hover:bg-base-200 flex items-center gap-2 text-primary rounded-lg group"
+                  >
+                    <span class="icon-[tabler--plus] size-3.5 shrink-0"></span>
+                    <span class="truncate">New Prompt</span>
+                  </a>
+                </li>
+                <li class="w-full border-t border-base-200 my-1"></li>
+                {% for prompt in prompts %}
+                <li class="w-full">
+                  <div
+                    class="flex items-center gap-2 w-full px-4 py-2 hover:bg-base-200 group rounded-lg"
+                  >
+                    <a
+                      href="{{ url_for('chat.prompt', id=prompt.id) }}"
+                      class="flex-1 min-w-0"
+                      title="{{ prompt.name }}"
+                    >
+                      <span class="truncate text-xs block"
+                        >{{ prompt.name }}</span
+                      >
+                    </a>
+                    <span
+                      class="text-[10px] text-gray-500 whitespace-nowrap shrink-0"
+                      >{{ format_time_ago(prompt.modified_date) }}</span
+                    >
+                    <a
+                      href="{{ url_for('prompt.edit', id=prompt.id) }}"
+                      class="shrink-0 opacity-0 group-hover:opacity-100 transition-opacity"
+                      aria-label="Edit prompt"
+                      title="Edit prompt"
+                    >
+                      <span
+                        class="icon-[tabler--edit] size-3.5 text-primary"
+                      ></span>
+                    </a>
+                  </div>
+                </li>
+                {% endfor %}
+              </ul>
+            </div>
+          </div>
+        </li>
+        <li class="w-full space-y-0.5">
+          <button
+            type="button"
+            class="collapse-toggle w-full flex items-center gap-2 px-4 py-2 collapse-open:bg-base-content/10"
+            id="history-collapse"
+            aria-expanded="false"
+            aria-controls="history-collapse-content"
+            data-collapse="#history-collapse-content"
           >
-            Actions
-          </th>
-        </tr>
-      </thead>
-      <tbody>
-        {% for document in table_content %}
-        <tr
-          class="{% if not loop.last %}border-b border-slate-200 dark:border-slate-700{% endif %}"
-        >
-          {% for field in document %}
-          <td
-            class="font-normal leading-normal px-4 py-2 border-r border-slate-200 dark:border-slate-700 last:border-r-0"
+            <span class="icon-[tabler--clock] size-5 shrink-0"></span>
+            <span class="truncate flex-1">History</span>
+            <span
+              class="icon-[tabler--chevron-down] collapse-open:rotate-180 size-4 shrink-0 transition-transform duration-300"
+            ></span>
+          </button>
+          <div
+            id="history-collapse-content"
+            class="collapse hidden w-full overflow-hidden transition-[height] duration-300"
+            aria-labelledby="history-collapse"
           >
-            {% if field.type == 'ButtonField' %}
-            <div class="flex justify-start items-center">
-              <a href="{{field.link}}/{{field.id}}" class="w-full">
-                <button
-                  type="button"
-                  class="btn btn-primary btn-outline btn-sm {{field.class}} truncate"
-                >
-                  {{field.label}}
-                </button>
-              </a>
-            </div>
-            {% else %} {{field.value}} {% endif %}
-          </td>
-          {% endfor %}
-          <td class="w-16 px-4 py-2 text-right sticky right-0 bg-white">
-            <div class="flex gap-2 justify-end">
-              <a
-                href="{{document_url}}/{{document[0].id}}"
-                class="btn btn-primary btn-sm btn-outline"
-              >
-                <span class="icon-[tabler--edit] size-4"></span>
-              </a>
-              <button
-                type="button"
-                class="btn btn-error btn-sm btn-outline delete-btn"
-                data-id="{{document[0].id}}"
-                data-type="{{collection_name}}"
-              >
-                <span class="icon-[tabler--trash] size-4"></span>
-              </button>
-            </div>
-          </td>
-        </tr>
-        {% endfor %}
-      </tbody>
-    </table>
-  </div>
-  {% include('/base/collection/pagination.html') %}
-</div>
-```
-
-## base/document/form.html
-
-```
-<!doctype html>
-<html lang="en" class="overflow-y-scroll">
-  {% include('/main/header.html') %}
-  <body class="bg-gray-50 min-h-screen">
-    {% include('/main/nav.html') %}
-
-    <section class="p-6 flex items-center lg:ml-64">
-      <div class="max-w-screen-xl mx-auto px-4 lg:px-12 w-full">
-        <!-- Start coding here -->
-        <div class="relative bg-white shadow-md dark:bg-gray-800 sm:rounded-lg">
-          <div class="flex items-center justify-center pt-4 px-4">
-            <form
-              method="POST"
-              enctype="multipart/form-data"
-              id="documentForm"
-              class="w-full max-w-lg"
-            >
-              <input
-                type="hidden"
-                name="csrf_token"
-                value="{{ csrf_token() }}"
-              />
-              <input type="hidden" name="id" value="{{document.id}}" />
-
-              <h1 class="text-2xl font-bold">{{page.title}}</h1>
-              <hr class="my-4" />
-              <div class="flex flex-wrap -mx-3 mb-6">
-                {% include('/base/document/form_elements.html') %}
-              </div>
-
-              <!-- Save and Delete Buttons -->
-              <div class="flex flex-wrap -mx-3 mb-6">
-                <div
-                  class="w-full px-3 mb-6 md:mb-0 flex justify-between space-x-3"
-                >
-                  <button
-                    type="submit"
-                    class="btn btn-primary w-1/2"
-                    id="saveButton"
+            <div>
+              <ul class="menu space-y-0.5 w-full" id="history-list">
+                <li class="w-full">
+                  <a
+                    href="{{ url_for('list', collection='history') }}"
+                    class="text-xs view-all w-full px-4 py-2 hover:bg-base-200 flex items-center rounded-lg"
                   >
-                    Save
-                  </button>
+                    <span class="truncate">View All History</span>
+                  </a>
+                </li>
+                <li class="w-full">
                   <button
                     type="button"
-                    class="btn btn-error w-1/2"
-                    id="deleteButton"
+                    class="text-xs w-full px-4 py-2 hover:bg-base-200 flex items-center gap-2 text-error rounded-lg group"
+                    onclick="handleDeleteHistory()"
                   >
-                    Delete
+                    <span class="icon-[tabler--trash] size-3.5 shrink-0"></span>
+                    <span class="truncate">Delete History </span>
                   </button>
-                </div>
-              </div>
-            </form>
-
-            <div
-              id="deleteModal"
-              tabindex="-1"
-              class="hidden overflow-y-auto overflow-x-hidden bg-gray-600 bg-opacity-65 backdrop-blur-sm fixed top-0 right-0 left-0 z-50 flex justify-center items-center w-full h-full"
-            >
-              <div
-                id="modalContent"
-                class="relative p-4 w-full max-w-md max-h-full"
-              >
-                <div class="relative bg-white rounded-lg shadow">
-                  <button
-                    type="button"
-                    class="absolute top-3 right-2.5 text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center"
-                    id="closeModal"
+                </li>
+                <li class="w-full border-t border-base-200 my-1"></li>
+                {% for item in history %}
+                <li class="w-full">
+                  <a
+                    href="{{ url_for('chat.history', id=item.id) }}"
+                    class="flex items-center gap-2 w-full px-4 py-2 hover:bg-base-200 rounded-lg"
+                    title="{{ item.first_message or 'Untitled Chat' }}"
                   >
-                    <svg
-                      class="w-3 h-3"
-                      aria-hidden="true"
-                      xmlns="http://www.w3.org/2000/svg"
-                      fill="none"
-                      viewBox="0 0 14 14"
-                    >
-                      <path
-                        stroke="currentColor"
-                        stroke-linecap="round"
-                        stroke-linejoin="round"
-                        stroke-width="2"
-                        d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"
-                      />
-                    </svg>
-                    <span class="sr-only">Close modal</span>
-                  </button>
-                  <div class="p-4 md:p-5 text-center">
-                    <svg
-                      class="mx-auto mb-4 text-gray-400 w-12 h-12"
-                      aria-hidden="true"
-                      xmlns="http://www.w3.org/2000/svg"
-                      fill="none"
-                      viewBox="0 0 20 20"
-                    >
-                      <path
-                        stroke="currentColor"
-                        stroke-linecap="round"
-                        stroke-linejoin="round"
-                        stroke-width="2"
-                        d="M10 11V6m0 8h.01M19 10a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z"
-                      />
-                    </svg>
-                    <h3 class="mb-5 text-lg font-normal text-gray-500">
-                      Are you sure?
-                    </h3>
-                    <button
-                      id="confirmDelete"
-                      type="button"
-                      class="text-white bg-red-600 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 font-medium rounded-lg text-sm inline-flex items-center px-5 py-2.5 text-center"
+                    <span class="truncate flex-1 text-xs"
+                      >{{ item.first_message or "Untitled Chat" }}</span
                     >
-                      Yes, I'm sure
-                    </button>
-                    <button
-                      id="cancelDelete"
-                      type="button"
-                      class="py-2.5 px-5 ms-3 text-sm font-medium text-gray-900 focus:outline-none bg-white rounded-lg border border-gray-200 hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-4 focus:ring-gray-100"
+                    <span
+                      class="text-[10px] text-gray-500 whitespace-nowrap shrink-0"
+                      >{{ format_time_ago(item.modified_date) }}</span
                     >
-                      No, cancel
-                    </button>
-                  </div>
-                </div>
-              </div>
+                  </a>
+                </li>
+                {% endfor %}
+              </ul>
             </div>
           </div>
-        </div>
-      </div>
-    </section>
-    <script>
-      window.addEventListener("load", function () {
-        // Basic
-        flatpickr("#flatpickr-date", {
-          monthSelectorType: "static",
-          locale: "de",
-          dateFormat: "d.m.Y",
-        });
-      });
-    </script>
-    <script>
-      document.addEventListener('DOMContentLoaded', function() {
+        </li>
+      </ul>
+    </div>
+
+    <!-- Fixed Footer Section -->
+    <div class="flex-none border-t border-base-200 px-2 pt-4 pb-2 lg:hidden">
+      <form action="{{ url_for('logout') }}" method="post" class="w-full">
+        <input type="hidden" name="csrf_token" value="{{ csrf_token() }}" />
+        <button
+          type="submit"
+          class="btn btn-ghost w-full justify-start gap-2 text-error"
+        >
+          <span class="icon-[tabler--logout-2] size-5 shrink-0"></span>
+          <span class="truncate">Sign Out</span>
+        </button>
+      </form>
+    </div>
+  </div>
+</aside>
+
+<script>
+  // Add error notification function
+  function showErrorNotification(message) {
+    console.error(message);
+  }
+
+  // Function to format date
+  function formatDate(dateString) {
+    let date;
+    if (typeof dateString === "string") {
+      // Try to parse the formatted date string from mongoToJson (DD.MM.YYYY HH:MM)
+      const parts = dateString.split(" ");
+      if (parts.length === 2) {
+        const [datePart, timePart] = parts;
+        const [day, month, year] = datePart.split(".");
+        const [hours, minutes] = timePart.split(":");
+        date = new Date(year, month - 1, day, hours, minutes);
+      } else {
+        date = new Date(dateString);
+      }
+    } else if (dateString?.$date) {
+      // Handle MongoDB ISODate format
+      date = new Date(dateString.$date);
+    } else {
+      return "";
+    }
 
-        {% include 'base/document/js/delete_document.js' %}
-        {% include 'base/document/js/search_field.js' %}
+    const now = new Date();
+    const diffMs = now - date;
+    const diffMins = Math.floor(diffMs / 60000);
+    const diffHours = Math.floor(diffMins / 60);
+    const diffDays = Math.floor(diffHours / 24);
 
-      });
-    </script>
-    <script src="{{ url_for('static', filename='js/lib/flyonui.js') }}"></script>
-    <script src="{{ url_for('static', filename='js/lib/flatpickr.min.js') }}"></script>
-  </body>
-</html>
-```
+    if (diffMins < 1) {
+      return "just now";
+    } else if (diffMins < 60) {
+      return `${diffMins}m ago`;
+    } else if (diffHours < 24) {
+      return `${diffHours}h ago`;
+    } else if (diffDays === 1) {
+      return "yesterday";
+    } else if (diffDays < 7) {
+      return `${diffDays}d ago`;
+    } else {
+      return date.toLocaleDateString();
+    }
+  }
 
-## base/document/form_elements.html
+  // Function to fetch and update nav items with improved error handling
+  async function updateNavItems() {
+    try {
+      const response = await fetch("{{ url_for('dms_chat.get_nav_items') }}");
+      if (!response.ok) {
+        throw new Error(`Failed to fetch nav items: ${response.status}`);
+      }
 
-```
-{% for element in elements %}
-<div
-  class="{{ 'w-full' if element.full_width else 'w-full md:w-1/2' }} px-3 mb-6 md:mb-0"
->
-  <label
-    for="{{ element.id }}"
-    class="label label-text"
-  >
-    {{ element.label }}
-  </label>
+      const data = await response.json();
+      console.log("Total history items received:", data.history.length);
 
-  {% if element.type == 'ButtonField' %}
-  <a href="{{element.link}}/{{document.id}}"
-    ><button
-      type="button"
-      class="btn btn-primary"
-    >
-      {{element.label}}
-    </button></a
-  >
-  {% endif %} {% if element.type == 'FileField' %}
-  <input
-    class="input max-w-sm"
-    id="{{element.id}}"
-    type="file"
-    name="files_{{element.id}}"
-    multiple
-  />
-  {% for file in element.value %} {% if file.element_id == element.id %}
-  <div id="{{file.document_id}}" class="flex items-center justify-between mt-2">
-    <span class="mt-1 text-sm text-gray-600">
-      <a
-        href="{{url_for('download_file',file_id=file.id)}}"
-        class="text-blue-600 hover:text-blue-500"
-        target="_blank"
-      >
-        {{ file.name }}
-      </a>
-    </span>
-    <button
-      id="{{file.id}}"
-      document_id="{{file.document_id}}"
-      class="delete_file bg-red-100 text-red-800 text-xs font-medium me-2 px-2.5 py-0.5 rounded"
-    >
-      Delete
-    </button>
-  </div>
-  {% endif %} {% endfor %} {% endif %} {% if element.type=='DocumentField' %}
-  <!-- Search Field -->
-  <input
-    type="hidden"
-    value="{{element.value_id if element.value_id else document.get(element.name + '_id', '')}}"
-    name="{{ element.name }}_hidden"
-    id="{{ element.name }}_hidden"
-  />
-  <input
-    id="{{element.id}}"
-    name="{{element.name}}"
-    value="{{element.value if element.value else document.get(element.name, '')}}"
-    module="{{element.module}}"
-    document_field="{{element.document_field}}"
-    type="text"
-    placeholder="Search..."
-    class="searchField bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5"
-  />
+      // Validate data structure
+      if (
+        !data ||
+        !Array.isArray(data.prompts) ||
+        !Array.isArray(data.history)
+      ) {
+        throw new Error("Invalid navigation data structure");
+      }
 
-  <!-- Dropdown Menu -->
-  <div
-    id="dropdownMenu"
-    class="z-10 hidden bg-white rounded-lg shadow w-full mt-1 max-h-48 overflow-y-auto"
-  >
-    <ul id="userList" class="py-2 text-gray-700"></ul>
-  </div>
-  {% endif %} {% if element.type == 'IntField' or element.type =='FloatField' %}
+      // Update prompts list
+      const promptsList = document.getElementById("prompts-list");
+      if (promptsList) {
+        // Keep the view all and new prompt links
+        const staticLinks = promptsList.querySelectorAll("li:nth-child(-n+3)");
+        promptsList.innerHTML = "";
+        staticLinks.forEach((link) =>
+          promptsList.appendChild(link.cloneNode(true)),
+        );
 
-  <div class="max-w-sm mx-auto">
-    <input
-      type="text"
-      id="{{element.id}}"
-      name="{{element.name}}"
-      value="{{element.value if element.value is not none else ''}}"
-      class="input"
-    />
-  </div>
+        // Add prompts with error handling
+        data.prompts.forEach((prompt) => {
+          try {
+            if (!prompt?._id?.$oid || !prompt?.name) {
+              console.warn("Invalid prompt data:", prompt);
+              return;
+            }
 
-  {% endif %} {% if element.type == 'Date' %}
+            console.log("Prompt modified date:", prompt.modified_date);
+            const formattedDate = formatDate(prompt.modified_date);
+            console.log("Formatted date:", formattedDate);
 
-  <input
-    type="text"
-    class="input max-w-sm"
-    placeholder="DD.MM.YYYY"
-    id="flatpickr-date"
-    name="{{element.name}}"
-    value="{{element.value if element.value is not none else ''}}"
-  />
+            const li = document.createElement("li");
+            li.className = "w-full";
+            li.innerHTML = `
+              <div class="flex items-center gap-2 w-full px-4 py-2 hover:bg-base-200 group rounded-lg">
+                <a href="/chat/prompt/${prompt._id.$oid}" class="flex-1 min-w-0" title="${prompt.name}">
+                  <span class="truncate text-xs block">${prompt.name}</span>
+                </a>
+                <span class="text-[10px] text-gray-500 whitespace-nowrap shrink-0">${formattedDate}</span>
+                <a href="/d/prompt/${prompt._id.$oid}" class="shrink-0 opacity-0 group-hover:opacity-100 transition-opacity" aria-label="Edit prompt" title="Edit prompt">
+                  <span class="icon-[tabler--edit] size-3.5 text-primary"></span>
+                </a>
+              </div>
+            `;
+            promptsList.appendChild(li);
+          } catch (itemError) {
+            console.warn("Error adding prompt item:", itemError);
+          }
+        });
+      }
 
-  {% endif %} {% if element.type == 'CheckBox' %}
-  <label class="inline-flex items-center mb-5 cursor-pointer">
-    <input
-      type="hidden"
-      name="{{ element.name }}_hidden"
-      value="Off"
-    />
-    <input
-      type="checkbox"
-      name="{{ element.name }}"
-      class="switch switch-primary"
-      value="On"
-      {% if element.value == "On" %}checked{% endif %}
-    />
-  </label>
-  {% endif %} {% if element.type =='SimpleListField' %}
-  <select
-    class="select max-w-sm appearance-none"
-    aria-label="select"
-    id="{{element.id}}"
-    name="{{element.name}}"
-  >
-    {% for item in element.SimpleListField %} {% if item.value == element.value %}
-    <option value="{{item.value}}" selected="selected">{{item.name}}</option>
-    {% else %}
-    <option value="{{item.value}}">{{item.name}}</option>
-    {% endif %} {% endfor %}
-  </select>
-  {% endif %} {% if element.type=='AdvancedListField' %}
-  <select class="select max-w-sm appearance-none" aria-label="select" id="{{element.id}}" name="{{element.name}}">
-    {% for item in element.AdvancedListField %} {% if item.value == element.value %}
-    <option value="{{item.value}}" selected="selected">{{item.name}}</option>
-    {% else %}
-    <option value="{{item.value}}">{{item.name}}</option>
-    {% endif %} {% endfor %}
-  </select>
-  {% endif %} {% if element.type == 'SingleLine' %}
-  <input
-    id="{{ element.id }}"
-    name="{{ element.name }}"
-    type="text"
-    value="{{ element.value }}"
-    placeholder="{{ element.label }}"
-    class="input"
-    {% if element.required %}required{% endif %}
-  />
-  {% elif element.type == 'MultiLine' %}
-  <textarea
-    id="{{ element.id }}"
-    name="{{ element.name }}"
-    rows="4"
-    placeholder="{{ element.label }}"
-    class="textarea"
-    {% if element.required %}required{% endif %}
-  >{{ element.value if element.value is not none else '' }}</textarea>
-  {% endif %}
-    <!-- {% if element.required %}
-    <p class="text-red-500 text-xs italic">Please fill out this field.</p>
-    {% endif %} -->
-</div>
-{% endfor %}
-```
+      // Update history list
+      const historyList = document.getElementById("history-list");
+      if (historyList) {
+        // Keep the view all link and delete button
+        const staticLinks = historyList.querySelectorAll("li:nth-child(-n+3)");
+        historyList.innerHTML = "";
+        staticLinks.forEach((link) =>
+          historyList.appendChild(link.cloneNode(true)),
+        );
 
-## base/document/js/search_field.js
+        let addedCount = 0;
+        // Add history items with error handling
+        data.history.forEach((item) => {
+          try {
+            if (!item?._id?.$oid) {
+              return;
+            }
 
-```
-document.querySelectorAll(".searchField").forEach((searchField) => {
-  searchField.addEventListener("input", function () {
-    const query = this.value;
-    const module = this.getAttribute("module"); // Get the module attribute value
-    const document_field = this.getAttribute("document_field");
-    const dropdown = this.nextElementSibling;
-    const userList = dropdown.querySelector("#userList");
-    const document_field_hidden = document.getElementById(
-      this.name + "_hidden",
-    );
+            const li = document.createElement("li");
+            li.className = "w-full";
+            li.innerHTML = `
+              <a href="/chat/history/${item._id.$oid}" 
+                 class="flex items-center gap-2 w-full px-4 py-2 hover:bg-base-200 rounded-lg"
+                 title="${item.first_message || "Untitled Chat"}">
+                <span class="truncate flex-1 text-xs">${item.first_message || "Untitled Chat"}</span>
+                <span class="text-[10px] text-gray-500 whitespace-nowrap shrink-0">${formatDate(item.modified_date)}</span>
+              </a>
+            `;
+            historyList.appendChild(li);
+            addedCount++;
+          } catch (itemError) {
+            console.warn("Error adding history item:", itemError);
+          }
+        });
+        console.log("Actually added history items:", addedCount);
+      }
+    } catch (error) {
+      console.error("Error updating navigation:", error);
+      showErrorNotification(
+        "Failed to update navigation. Please refresh the page.",
+      );
+    }
+  }
 
-    // Clear hidden field if search field is empty
-    if (!query || query.length === 0) {
-      document_field_hidden.value = "";
-      document_field.value = "";
-      dropdown.classList.add("hidden");
+  // Function to handle history deletion
+  async function handleDeleteHistory() {
+    if (
+      !confirm(
+        "Are you sure you want to delete all history documents? This action cannot be undone.",
+      )
+    ) {
       return;
     }
 
-    if (query.length > 3) {
-      // Construct the URL using the module value
-      const url =
-        `{{ url_for("list", collection="__MODULE__", mode="json") }}`.replace(
-          "__MODULE__",
-          module,
-        );
+    try {
+      const response = await fetch(
+        "{{ url_for('dms_chat.delete_all_history') }}",
+        {
+          method: "POST",
+          headers: {
+            "X-CSRFToken": "{{ csrf_token() }}",
+          },
+        },
+      );
 
-      // Fetch users from the server based on the search query
-      fetch(`${url}&search=${encodeURIComponent(query)}&limit=100`)
-        .then((response) => response.json())
-        .then((data) => {
-          if (data.status === "ok" && data.message === "success") {
-            dropdown.classList.remove("hidden");
-            console.log(data); // Log the result
-            userList.innerHTML = ""; // Clear the existing list
+      if (!response.ok) {
+        throw new Error("Failed to delete history");
+      }
 
-            // Check if data.data is an array before iterating
-            if (Array.isArray(data.data)) {
-              // Append users to the list
-              data.data.forEach((user) => {
-                const userItem = document.createElement("li");
-                userItem.innerHTML = `
-                                    <a href="#" class="flex items-center px-4 py-2 hover:bg-gray-100">
-                                        ${user[document_field]}
-                                    </a>
-                                `;
-                userItem.addEventListener("click", function (event) {
-                  event.preventDefault();
-                  searchField.value = user[document_field];
-                  document_field_hidden.value = user.id;
-                  dropdown.classList.add("hidden");
-                });
-                userList.appendChild(userItem);
-              });
+      const result = await response.json();
 
-              // Log the length of the userList to verify
-              console.log(
-                `Number of users appended: ${userList.children.length}`,
-              );
-            } else {
-              console.error("Error: data.data is not an array");
-            }
-          } else {
-            console.error("Error: Unexpected response format");
-          }
-        })
-        .catch((error) => {
-          console.error("Error fetching user data:", error); // Log error message
-        });
-    } else {
-      dropdown.classList.add("hidden");
+      // Check if we're on a history page or list history page
+      const currentPath = window.location.pathname;
+      if (
+        currentPath.includes("/chat/history/") ||
+        currentPath.includes("/list/history")
+      ) {
+        // Redirect to index page
+        window.location.href = "/";
+        return;
+      }
+
+      // Update the navigation items
+      await updateNavItems();
+    } catch (error) {
+      console.error("Error deleting history:", error);
+      showErrorNotification("Failed to delete history. Please try again.");
     }
-  });
-});
+  }
+
+  // Initialize nav items when the page loads
+  document.addEventListener("DOMContentLoaded", updateNavItems);
+
+  // Update nav items periodically with a debounce
+  let updateTimeout = null;
+  function debouncedUpdate() {
+    if (updateTimeout) {
+      clearTimeout(updateTimeout);
+    }
+    updateTimeout = setTimeout(updateNavItems, 500);
+  }
+
+  // Update every 30 seconds, but use debouncing to prevent overlapping calls
+  setInterval(debouncedUpdate, 30000);
+</script>
 ```
 
-## base/document/js/delete_document.js
+## db_helper.py
 
 ```
-// Function to handle form submission for delete action
-function submitDeleteForm() {
-  var url =
-    "{{url_for('delete_document')}}" +
-    "?id=" +
-    "{{document.id}}&type={{page.document_name}}";
+#!/usr/bin/env python
+# -*- coding: utf-8 -*-
+from core.db_connect import *
+from core.db_date import dbDates
+from core.db_document import File, getDefaults, Filter
+import json
+import os
 
-  fetch(url)
-    .then((response) => response.json())
-    .then((result) => {
-      console.log(result);
-      if (result.status === "ok") {
-        console.log("Document Deleted");
-        window.location.href = "{{ page.collection_url }}";
-      } else {
-        console.log("Document not deleted");
-      }
-    })
-    .catch((error) => {
-      console.error("Error:", error);
-    });
-}
+def searchDocuments(collection, searchFields, start=0, limit=10, search='', filter=None, product_name='', mode=''):
+    print(f"[DEBUG] searchDocuments called with filter={filter}")
+    searchDict = {}
 
-const modal = document.getElementById("deleteModal");
-const deleteButton = document.getElementById("deleteButton");
-const closeButton = document.getElementById("closeModal");
-const confirmButton = document.getElementById("confirmDelete");
-const cancelButton = document.getElementById("cancelDelete");
-const modalContent = document.getElementById('modalContent');
+    # Handle search term if provided
+    if search and search.strip():
+        searchArray = []
+        for name in searchFields:
+            searchArray.append({name: {'$regex': search, '$options': 'i'}})
+        searchDict = {'$or': searchArray}
 
-function showModal() {
-  modal.classList.remove("hidden");
-}
+    # Handle filter
+    if filter:
+        if isinstance(filter, str):
+            # For string filters, use getFilterDict
+            filter_dict = getFilterDict(filter)
+            print(f"[DEBUG] Filter string converted to: {filter_dict}")
+            if filter_dict:
+                if searchDict:
+                    if '$and' not in searchDict:
+                        searchDict = {'$and': [searchDict]}
+                    searchDict['$and'].extend(filter_dict)
+                else:
+                    searchDict = {'$and': filter_dict}
+        else:
+            # For direct dictionary filters (like user_id filter)
+            print(f"[DEBUG] Using direct filter: {filter}")
+            if searchDict:
+                if '$and' not in searchDict:
+                    searchDict = {'$and': [searchDict, filter]}
+                else:
+                    searchDict['$and'].append(filter)
+            else:
+                searchDict.update(filter)
+
+    # Handle product name
+    if product_name:
+        product_filter = {'name': product_name}
+        if searchDict:
+            if '$and' not in searchDict:
+                searchDict = {'$and': [searchDict, product_filter]}
+            else:
+                searchDict['$and'].append(product_filter)
+        else:
+            searchDict = product_filter
+
+    print(f"[DEBUG] Final search dict: {searchDict}")
+
+    try:
+        # Test the query first
+        test_count = collection.objects(__raw__=searchDict).count()
+        print(f"[DEBUG] Test query found {test_count} documents")
+        
+        # Apply the query
+        if mode == 'channels':
+            recordsTotal = collection.objects(__raw__=searchDict).count()
+            documents = collection.objects(__raw__=searchDict).order_by('category_id').skip(start).limit(limit)
+        else:
+            recordsTotal = collection.objects(__raw__=searchDict).count()
+            documents = collection.objects(__raw__=searchDict).skip(start).limit(limit)
+
+        return processDocuments(documents, recordsTotal, start, limit)
+    except Exception as e:
+        print(f"[DEBUG] Error in searchDocuments: {str(e)}")
+        print(f"[DEBUG] Collection: {collection}")
+        print(f"[DEBUG] Search dict: {searchDict}")
+        return {'status': 'error', 'message': str(e)}
+
+
+
+
+def getFile(file_id):
+    try:
+        file = File.objects(id=file_id).first()
+        if file is not None:
+            # Verify file exists on disk
+            file_path = os.path.join(file.path, f"{file_id}.{file.file_type}")
+            if os.path.exists(file_path):
+                return {'status': 'ok', 'message': '', 'data': file.to_json()}
+            else:
+                print(f"[DEBUG] Physical file not found at: {file_path}")
+                return {'status': 'error', 'message': 'Physical file not found'}
+        else:
+            print(f"[DEBUG] No file record found for id: {file_id}")
+            return {'status': 'error', 'message': 'File record not found'}
+    except Exception as e:
+        print(f"[DEBUG] Error in getFile: {str(e)}")
+        return {'status': 'error', 'message': f'Error retrieving file: {str(e)}'}
+
+
+def getDocumentsByID(collection, name, start=0, limit=10, id=''):
+    if not id:
+        # Return empty result set when no id is provided
+        return {
+            'status': 'ok',
+            'message': '',
+            'data': '[]',
+            'recordsTotal': 0,
+            'limit': limit,
+            'prev': 0,
+            'next': None,
+            'start': 0,
+            'end': 0,
+            'last': None
+        }
+        
+    try:
+        recordsTotal = collection.objects(__raw__={name: {'$regex': id}}).count()
+        documents = collection.objects(__raw__={name: {'$regex': id}}).skip(start).limit(limit)
+        return processDocuments(documents, recordsTotal, start, limit)
+    except Exception as e:
+        print(f"[DEBUG] Error in getDocumentsByID: {str(e)}")
+        return {'status': 'error', 'message': 'Error retrieving documents'}
 
-function hideModal() {
-  modal.classList.add("hidden");
-}
+def getDocumentName(id, mode,field):
+    default = getDefaults(mode)
+    try:
+        document = default.collection.objects(id = id).only(field).first()
+        if document:
+            return document[field]
+        return ''
+    except:
+        return ''
 
-deleteButton.addEventListener("click", showModal);
-closeButton.addEventListener("click", hideModal);
-cancelButton.addEventListener("click", hideModal);
+def getFilter(category):
+    data = []
+    try:
+        filters = Filter.objects(category = category)
+        if filters != None :
+            for filter in filters:
+                #print filter
+                name = filter.name
+                filter_id = str(filter.id)
+                data.append({'name' : name,'id' : filter_id})
+            return data
+    except:
+        return []
 
-confirmButton.addEventListener("click", function (ev) {
-  ev.preventDefault();
-  submitDeleteForm();
-});
+# def getMailTemplates(category):
+#     data = []
+#     try:
+#         templates = MailTemplate.objects(category = category)
+#         if templates != None :
+#             for template in templates:
+#                 #print filter
+#                 name = template.name
+#                 template_id = str(template.id)
+#                 data.append({'name' : name,'id' : template_id})
+#             return data
+#     except:
+#         return []
 
-modal.addEventListener('click', function(event) {
-  if (!modalContent.contains(event.target)) {
-    hideModal();
-  }
-});
+def processDocuments(documents, recordsTotal, start, limit):
+    print('processDocuments')
+    
+    # Handle case where documents is None
+    if documents is None:
+        return {'status': 'error', 'message': 'no documents found'}
 
+    # Calculate pagination values
+    prev = max(0, start - limit) if start - limit > -1 else 0
+    next = start + limit if start + limit < recordsTotal else None
+    last = recordsTotal - limit if recordsTotal > limit else None
+    
+    # Adjust start and end values
+    end = min(start + limit, recordsTotal)
+    display_start = start + 1 if recordsTotal > 0 else start
 
-document.querySelectorAll('.delete_file').forEach(button => {
-    button.addEventListener('click', function (event) {
-        event.preventDefault();
-        const documentId = this.getAttribute('document_id');
-        const fileId = this.id;
+    # Return successful response even if no documents found (empty list is valid)
+    return {
+        'status': 'ok',
+        'message': '',
+        'data': documents.to_json(),
+        'recordsTotal': recordsTotal,
+        'limit': limit,
+        'prev': prev,
+        'next': next,
+        'start': display_start,
+        'end': end,
+        'last': last
+    }
 
-        const url = "{{ url_for('delete_document') }}" + "?id="+fileId + "&type=files";
-        console.log(url)
+def getFilterDict(filter_id):
+    data = []
+    try:
+        filter = Filter.objects(id=filter_id).first()
+        if 'filter' in filter:
+            for x in filter['filter']:
 
-        fetch(url)
-        .then(response => response.json())
-        .then(data => {
-            if (data.status=='ok') {
-                const fileElement = document.getElementById(documentId);
-                if (fileElement) {
-                    fileElement.remove();
-                    console.log("File removed!")
-                }
-            } else {
-                console.error('Failed to delete document:', data);
-            }
-        })
-        .catch(error => console.error('Error:', error));
-    });
-});
+                if x['field'].find('_date') == -1:
+                    if x['operator'] =='is':
+                        data.append({x['field'] : x['value']})
+                    elif x['operator'] =='contains':
+                        data.append({x['field'] : { '$regex' : x['value'],'$options' : 'i' }})
+                    elif x['operator'] == 'is_not':
+                        data.append({x['field'] : { '$ne' : x['value'] }})
+                    elif x['operator'] == 'starts_with':
+                        data.append({x['field'] : { '$regex' : '^'+x['value'] }})
+                else:
+                    if x['value'] =='current_week':
+                        data.append({x['field'] : dbDates().thisWeek()})
+                    elif x['value'] =='current_month':
+                        data.append({x['field'] : dbDates().thisMonth()})
+                    elif x['value'] =='current_year':
+                        data.append({x['field'] : dbDates().thisYear()})
+                    elif x['operator'] =='is_gte':
+                        data.append({x['field'] : {'$gte': x['value']}})
+                    elif x['operator'] =='is_lt':
+                        data.append({x['field'] : {'$lt': x['value']}})
+    except:
+        pass
+    return data
 ```
 
 ## auth.py
@@ -2450,6 +2776,9 @@ def do_login(request):
                 return render_template('login.html', status='error', message='User not found')
             
             login_user(user, remember=remember, duration=timedelta(days=30) if remember else None)
+            next_page = request.args.get('next')
+            if next_page and next_page.startswith('/'):  # Ensure the next URL is relative
+                return redirect(next_page)
             return redirect(url_for('index'))
         else:
             return render_template('login.html', status='error', message=status['message'])
@@ -2462,321 +2791,379 @@ def do_logout():
     return redirect(url_for('login'))
 ```
 
-## db_user.py
+## db_default.py
 
 ```
 #!/usr/bin/env python
 # -*- coding: utf-8 -*-
-from werkzeug.security import generate_password_hash, check_password_hash
-from core.db_document import *
-
-import logging
-from mongoengine.errors import NotUniqueError, ValidationError, OperationError
+from db_connect import *
 
-# Configure logging
-logging.basicConfig(level=logging.INFO)
-logger = logging.getLogger(__name__)
+import csv,json
 
-def hash_password(password):
-    return generate_password_hash(password)
+from datetime import date
 
-def check_password(email, password):
-    try:
-        user = User.objects(email=email).first()
-        if user and check_password_hash(user.pw_hash, password):
-            return {'status': 'ok', 'message': 'successfully logged in', 'user': user.to_json()}
-        return {'status': 'error', 'message': 'Invalid email or password'}
-    except Exception as e:
-        logger.error(f"Error checking password for {email}: {str(e)}")
-        return {'status': 'error', 'message': 'Authentication error occurred'}
+class Setting(DynamicDocument):
+    name = StringField(required=True,min_length=4)
+    description = StringField()
+    type = StringField(required = True)
 
-def create_user(firstname, name, email, password, role='user'):
-    try:
-        # Check if user exists first
-        if User.objects(email=email).first():
-            return {'status': 'error', 'message': 'user exists'}
+def initDefault():
+    Setting.drop_collection()
+    settings = []
+    settings.append(Setting(name = 'salutation', lable_name='Anrede', type = 'SimpleListField', values = ['','Herr', 'Frau']))
+   
+    #settings.append(Setting(name = 'ai_provider', lable_name='A.I. Provider', type = 'AdvancedListField',values = [{'' : ''},{'OpenAI' : 'open_ai'},{'Anthropic' :'anthropic'},{'Meta' :'meta'}]))
+  
+    languages = ['Deutsch', 'Englisch', 'Französich', 'Spanisch']
+    settings.append(Setting(name = 'language', lable_name = 'Sprachen', type = 'SimpleListField', values = languages))
+   
+    # Add roles
+    roles = ['admin', 'user']
+    settings.append(Setting(name = 'role', lable_name = 'Rollen', type = 'SimpleListField', values = roles))
 
-        # Create new user
-        user = User(
-            firstname=firstname,
-            name=name,
-            email=email,
-            pw_hash=hash_password(password),
-            role=role
-        )
-        user.save()
-        logger.info(f"User created successfully: {email}")
-        return {'status': 'ok', 'message': 'user created', 'id': str(user.id)}
+    # my_number = Setting(name = 'My Number', lable_name = 'Rechnungs-Nr', type ='Counter', value=1000, year = year)
+    # settings.append(my_number)
 
-    except ValidationError as e:
-        logger.error(f"Validation error creating user {email}: {str(e)}")
-        return {'status': 'error', 'message': 'Invalid user data provided'}
-    except NotUniqueError as e:
-        logger.error(f"Duplicate email error for {email}")
-        return {'status': 'error', 'message': 'user exists'}
-    except OperationError as e:
-        logger.error(f"Database operation error creating user {email}: {str(e)}")
-        return {'status': 'error', 'message': 'Database error occurred'}
-    except Exception as e:
-        logger.error(f"Unexpected error creating user {email}: {str(e)}")
-        return {'status': 'error', 'message': 'An unexpected error occurred'}
+    for setting in settings:
+        setting.save()
+    #MultiLine, SingleLine, SingleSelection, MultiSelection, Date, Number, Counter, Label
 
-def delete_user(email, password):
-    try:
-        user = User.objects(email=email).first()
-        if not user:
-            return {'status': 'error', 'message': 'user does not exist'}
-        
-        if not check_password_hash(user.pw_hash, password):
-            return {'status': 'error', 'message': 'incorrect password'}
-        
-        user.delete()
-        logger.info(f"User deleted successfully: {email}")
-        return {'status': 'ok', 'message': 'user deleted'}
-    except Exception as e:
-        logger.error(f"Error deleting user {email}: {str(e)}")
-        return {'status': 'error', 'message': 'Failed to delete user'}
+def prepListField(db_values,type):
+    array=[]
+    for x in db_values:
+        if type =='AdvancedListField':
+            for key in x:
+                array.append({'name' : key,'value' : x[key]})
+        elif type == 'SimpleListField':
+            array.append({'name' : x,'value' : x})
+    return array
 
-def update_password(email, password, new_password):
-    try:
-        user = User.objects(email=email).first()
-        if not user:
-            return {'status': 'error', 'message': 'user does not exist'}
+def getDefaultList(name, collection, type):
+    if type == 'SimpleDocumentField':
+        array=[]
+        documents = collection.objects()
+        #array.append({'name':document.name, 'value':0})
+        for document in documents:
+            array.append({'name':document.name, 'value':json.loads(document.to_json())['_id']['$oid']})
+        return array
+    document = collection.objects(name = name).first()
+    if document != None:
+        return prepListField(document.values,type)
 
-        if not check_password_hash(user.pw_hash, password):
-            return {'status': 'error', 'message': 'incorrect password'}
+def getCounter(name):
+    document = Setting.objects(name = name).first()
+    if document != None:
+        if document.value != None:
+            document.value = int(document.value) + 1
+            document.save()
+            return str(document.value)
+    return 0
 
-        user.pw_hash = hash_password(new_password)
-        user.save()
-        logger.info(f"Password updated successfully for user: {email}")
-        return {'status': 'ok', 'message': 'password updated'}
-    except ValidationError as e:
-        logger.error(f"Validation error updating password for {email}: {str(e)}")
-        return {'status': 'error', 'message': 'Invalid password format'}
-    except Exception as e:
-        logger.error(f"Error updating password for {email}: {str(e)}")
-        return {'status': 'error', 'message': 'Failed to update password'}
+#initDefault()
 ```
 
-## db_helper.py
+## db_crud.py
 
 ```
 #!/usr/bin/env python
 # -*- coding: utf-8 -*-
+import sys
+sys.path.append('core')
+from core.db_document import File, Prompt
 from core.db_connect import *
-from core.db_date import dbDates
-from core.db_document import File, getDefaults, Filter
-import json
 import os
 
-def searchDocuments(collection, searchFields,start = 0, limit = 10, search = '',filter='',product_name='',mode=''):
-    searchAnd = []
-    searchDict={}
+import json,datetime
+from flask import session
+from flask_login import current_user
 
-    if (search != None and search !=''):
-        searchArray = []
-        for name in searchFields:
-            #search contains string, option i means case insentive
-            searchArray.append({name: {'$regex': search, '$options' : 'i'}})
+from db_default import getCounter
+from bson import ObjectId
 
-        searchDict = {'$or': searchArray}
+def createDocument(form_data, document, request=None):
+    print(f"[DEBUG] Starting createDocument with form_data keys: {form_data.keys()}")
+    # Remove csrf_token before processing
+    form_data = {k: v for k, v in form_data.items() if k != 'csrf_token'}
+    
+    try:
+        # Initialize document with default values if it's a new document
+        if isinstance(document, type):
+            document = document()
+        
+        # Handle counter if needed
+        try:
+            counter_name = document.getCounterName()
+            counter = getCounter(counter_name)
+            document[counter_name] = counter
+        except Exception as e:
+            print(f"[DEBUG] Counter error: {str(e)}")
 
-        if filter !='':
-            searchAnd = getFilterDict(filter)
+        # Process all non-file fields
+        for key in form_data.keys():
+            if key.startswith('files_'):
+                continue
+                
+            if form_data[key] is None or (isinstance(form_data[key], list) and not form_data[key]):
+                continue
 
-        if product_name!='':
-            searchAnd.append({'name' : product_name})
+            if key.endswith('_hidden'):
+                base_key = key.replace('_hidden', '')
+                if form_data[key]:
+                    document[f"{base_key}_id"] = form_data[key]
+                continue
 
-        if searchAnd != []:
-            searchDict['$and'] = searchAnd
+            if form_data[key] == '':
+                continue
 
-        if mode =='channels':
-            recordsTotal = collection.objects(__raw__=searchDict).count()
-            documents = collection.objects(__raw__=searchDict).order_by('category_id').skip(start).limit(limit)
-        else:
-            recordsTotal = collection.objects(__raw__=searchDict).count()
-            documents = collection.objects(__raw__=searchDict).skip(start).limit(limit)
-        return processDocuments(documents,recordsTotal,start,limit)
-    else:
-        if filter !='':
-            searchDict = {}
-            searchAnd = getFilterDict(filter)
-            if searchAnd !=[]:
-                if product_name!='':
-                    searchAnd.append({'name' : product_name})
-                searchDict['$and'] = searchAnd
-                if mode =='channels':
-                    recordsTotal = collection.objects(__raw__=searchDict).count()
-                    documents = collection.objects(__raw__=searchDict).order_by('category_id').skip(start).limit(limit)
-                else:
-                    recordsTotal = collection.objects(__raw__=searchDict).count()
-                    documents = collection.objects(__raw__=searchDict).skip(start).limit(limit)
-                return processDocuments(documents,recordsTotal,start,limit)
-            else:
-                return {'status' : 'error', 'message' : 'no filter found' }
-        else:
-            if product_name!='':
-                searchDict['$and'] = [{'name' : product_name}]
-                if mode =='channels':
-                    recordsTotal = collection.objects(__raw__=searchDict).count()
-                    documents = collection.objects(__raw__=searchDict).order_by('category_id').skip(start).limit(limit)
-                else:
-                    recordsTotal = collection.objects(__raw__=searchDict).count()
-                    documents = collection.objects(__raw__=searchDict).skip(start).limit(limit)
-                return processDocuments(documents,recordsTotal,start,limit)
-            else:
-                if mode=='channels':
-                    recordsTotal = collection.objects().count()
-                    documents = collection.objects.order_by('category_id').skip(start).limit(limit)
+            if '_date' in key:
+                try:
+                    document[key] = datetime.datetime.strptime(form_data[key], "%d.%m.%Y") if form_data[key] else None
+                except ValueError as e:
+                    return {'status': 'error', 'message': f'Invalid date format for field {key}'}
+            elif '_int' in key:
+                try:
+                    document[key] = int(form_data[key]) if form_data[key] else None
+                except ValueError:
+                    return {'status': 'error', 'message': f'Invalid integer value for field {key}'}
+            elif '_float' in key:
+                try:
+                    document[key] = float(form_data[key]) if form_data[key] else None
+                except ValueError:
+                    return {'status': 'error', 'message': f'Invalid float value for field {key}'}
+            elif key != 'id':
+                document[key] = form_data[key]
 
-                else:
-                    recordsTotal = collection.objects().count()
-                    documents = collection.objects.skip(start).limit(limit)
-                return processDocuments(documents,recordsTotal,start,limit)
+        # Save document
+        try:
+            document.save()
+            return {'status': 'ok', 'message': '', 'data': document.to_json()}
+            
+        except ValidationError as e:
+            print(f"[DEBUG] Validation error: {str(e)}")
+            return {'status': 'error', 'message': f'validation error: {str(e)}', 'data': document.to_json()}
+        except Exception as e:
+            print(f"[DEBUG] Save error: {str(e)}")
+            return {'status': 'error', 'message': f'document not created: {str(e)}'}
 
+    except Exception as e:
+        print(f"[DEBUG] Error in createDocument: {str(e)}")
+        return {'status': 'error', 'message': f'Error creating document: {str(e)}'}
 
+def updateDocument(form_data, document, collection):
+    # Remove csrf_token before processing
+    form_data = {k: v for k, v in form_data.items() if k != 'csrf_token'}
+    
+    try:
+        print(f"[DEBUG] Updating document with id={form_data['id']}")
+        object_id = ObjectId(form_data['id'])
+        document = collection.objects(_id=object_id).first()
+        
+        if document is None:
+            return {'status': 'error', 'message': 'document not found'}
 
+        for key in form_data.keys():
+            if key == 'id':  # Skip id field
+                continue
 
-def getFile(file_id):
+            # Handle document search fields
+            if key.endswith('_hidden'):
+                base_key = key.replace('_hidden', '')
+                if '_search' in base_key:
+                    # Clear both the search field and its ID if hidden field is empty
+                    if not form_data[key]:
+                        document[base_key] = ''
+                        document[f"{base_key}_id"] = ''
+                    else:
+                        document[f"{base_key}_id"] = form_data[key]
+                else:
+                    if base_key in form_data:
+                        document[base_key] = form_data[base_key]  # Will be "On" if checked
+                    else:
+                        document[base_key] = "Off"  # Default to Off if unchecked
+                continue
+
+            # Handle different field types
+            if '_date' in key:
+                try:
+                    document[key] = datetime.datetime.strptime(form_data[key], "%d.%m.%Y") if form_data[key] else None
+                except:
+                    return {'status': 'error', 'message': 'error preparing form date field'}
+            elif '_int' in key:
+                document[key] = int(form_data[key]) if form_data[key] else None
+            elif '_float' in key:
+                document[key] = float(form_data[key].replace(',','.')) if form_data[key] else None
+            else:
+                document[key] = form_data[key]
+
+        # Save document
+        try:
+            document.save()
+            return {'status': 'ok', 'message': '', 'data': document.to_json()}
+        except ValidationError as e:
+            print(f"Validation error: {str(e)}")
+            return {'status': 'error', 'message': f'validation error: {str(e)}', 'data': document.to_json()}
+        except Exception as e:
+            print(f"Error saving document: {str(e)}")
+            return {'status': 'error', 'message': f'error saving document: {str(e)}'}
+            
+    except Exception as e:
+        print(f"[DEBUG] Error in updateDocument: {str(e)}")
+        return {'status': 'error', 'message': f'Error updating document: {str(e)}'}
+
+def eraseDocument(id, document, collection):
     try:
-        file = File.objects(id=file_id).first()
-        if file is not None:
-            # Verify file exists on disk
-            file_path = os.path.join(file.path, f"{file_id}.{file.file_type}")
-            if os.path.exists(file_path):
-                return {'status': 'ok', 'message': '', 'data': file.to_json()}
+        print(f"[DEBUG] eraseDocument called with id={id}, collection={collection.__name__}")
+        object_id = ObjectId(id)
+        document = collection.objects(_id=object_id).first()
+        
+        if document is not None:
+            print(f"[DEBUG] Found document to delete: {document.to_json()}")
+            
+            # Get base path for constructing absolute paths
+            base_path = os.path.dirname(os.path.dirname(os.path.realpath(__file__)))
+            print(f"[DEBUG] Base path: {base_path}")
+            
+            # Handle file deletion for both File collection and associated files
+            if collection == File:
+                # Check if user has permission to delete this file
+                if not document.can_access(current_user):
+                    print(f"[DEBUG] Access denied for file deletion: {id}")
+                    return {'status': 'error', 'message': 'Access denied. You can only delete your own files.'}
+                
+                # Check if file is used by any prompt
+                prompts_using_file = Prompt.objects(document_id=str(id))
+                if prompts_using_file:
+                    print(f"[DEBUG] File {id} is used by prompts, cannot delete")
+                    return {'status': 'error', 'message': 'File is used by one or more prompts and cannot be deleted'}
+                    
+                # Direct file document deletion
+                try:
+                    # Use the same path construction as upload_files
+                    file_path = os.path.join(base_path, document.path, f"{id}.{document.file_type}")
+                    print(f"[DEBUG] Attempting to delete file at: {file_path}")
+                    print(f"[DEBUG] File exists: {os.path.exists(file_path)}")
+                    
+                    if os.path.exists(file_path):
+                        os.remove(file_path)
+                        print(f"[DEBUG] Successfully deleted file: {file_path}")
+                    else:
+                        print(f'[DEBUG] Physical file not found at: {file_path}')
+                except Exception as e:
+                    print(f'[DEBUG] Error deleting physical file: {str(e)}')
+                    return {'status': 'error', 'message': f'Error deleting physical file: {str(e)}'}
+                
+                try:
+                    document.delete()
+                    print(f"[DEBUG] Successfully deleted file document from database")
+                    return {'status': 'ok', 'message': 'deleted'}
+                except Exception as e:
+                    print(f'[DEBUG] Error deleting file document: {str(e)}')
+                    return {'status': 'error', 'message': f'Error deleting file document: {str(e)}'}
             else:
-                print(f"[DEBUG] Physical file not found at: {file_path}")
-                return {'status': 'error', 'message': 'Physical file not found'}
+                # For non-File collections, handle associated files
+                file_ids = []
+                
+                # Check for files linked by document_id
+                associated_files = File.objects(document_id=str(id))
+                file_ids.extend([str(f.id) for f in associated_files])
+                
+                # Check for files in file_ids array (used by History documents)
+                if hasattr(document, 'file_ids') and document.file_ids:
+                    file_ids.extend(document.file_ids)
+                
+                # Remove duplicates
+                file_ids = list(set(file_ids))
+                print(f"[DEBUG] Found {len(file_ids)} associated files")
+                print(f"[DEBUG] File IDs to process: {file_ids}")
+                
+                deleted_files = []
+                failed_files = []
+                
+                for file_id in file_ids:
+                    try:
+                        print(f"[DEBUG] Processing associated file: {file_id}")
+                        file_doc = File.objects(id=file_id).first()
+                        if not file_doc:
+                            print(f"[DEBUG] File document not found: {file_id}")
+                            failed_files.append(file_id)
+                            continue
+                            
+                        # Check if file is used by any prompt
+                        prompts_using_file = Prompt.objects(document_id=str(file_id))
+                        if prompts_using_file:
+                            print(f"[DEBUG] File {file_id} is used by prompts, skipping")
+                            failed_files.append(file_id)
+                            continue
+                        
+                        # Check if user has permission to delete this file
+                        if not file_doc.can_access(current_user):
+                            print(f"[DEBUG] Access denied for associated file deletion: {file_id}")
+                            failed_files.append(file_id)
+                            continue
+                            
+                        # Delete physical file
+                        # Use the same path construction as upload_files
+                        file_path = os.path.join(base_path, file_doc.path, f"{file_id}.{file_doc.file_type}")
+                        print(f"[DEBUG] Attempting to delete associated file at: {file_path}")
+                        print(f"[DEBUG] File exists: {os.path.exists(file_path)}")
+                        
+                        if os.path.exists(file_path):
+                            os.remove(file_path)
+                            print(f"[DEBUG] Successfully deleted associated file: {file_path}")
+                        else:
+                            print(f'[DEBUG] Physical file not found at: {file_path}')
+                        
+                        # Delete file document
+                        file_doc.delete()
+                        deleted_files.append(file_id)
+                        print(f"[DEBUG] Successfully deleted associated file document: {file_id}")
+                    except Exception as e:
+                        print(f'[DEBUG] Error deleting associated file {file_id}: {str(e)}')
+                        failed_files.append(file_id)
+                
+                try:
+                    document.delete()
+                    status_msg = 'deleted'
+                    if failed_files:
+                        status_msg += f' (some associated files could not be deleted: {", ".join(map(str, failed_files))})'
+                    print(f"[DEBUG] Successfully deleted main document with status: {status_msg}")
+                    return {'status': 'ok', 'message': status_msg}
+                except Exception as e:
+                    print(f'[DEBUG] Error deleting main document: {str(e)}')
+                    return {'status': 'error', 'message': f'Error deleting document: {str(e)}'}
         else:
-            print(f"[DEBUG] No file record found for id: {file_id}")
-            return {'status': 'error', 'message': 'File record not found'}
+            print(f"[DEBUG] No document found with id={id}")
+            return {'status': 'error', 'message': 'document not found'}
     except Exception as e:
-        print(f"[DEBUG] Error in getFile: {str(e)}")
-        return {'status': 'error', 'message': f'Error retrieving file: {str(e)}'}
-
+        print(f"[DEBUG] Error in eraseDocument: {str(e)}")
+        return {'status': 'error', 'message': f'Error deleting document: {str(e)}'}
 
-def getDocumentsByID(collection, name, start=0, limit=10, id=''):
-    if not id:
-        # Return empty result set when no id is provided
-        return {
-            'status': 'ok',
-            'message': '',
-            'data': '[]',
-            'recordsTotal': 0,
-            'limit': limit,
-            'prev': 0,
-            'next': None,
-            'start': 0,
-            'end': 0,
-            'last': None
-        }
-        
+def getDocument(id, document, collection):
     try:
-        recordsTotal = collection.objects(__raw__={name: {'$regex': id}}).count()
-        documents = collection.objects(__raw__={name: {'$regex': id}}).skip(start).limit(limit)
-        return processDocuments(documents, recordsTotal, start, limit)
+        print(f"[DEBUG] Querying collection {collection.__name__} for document with id={id}")
+        # Convert string id to ObjectId
+        object_id = ObjectId(id)
+        print(f"[DEBUG] Using ObjectId: {object_id}")
+        
+        # Try direct query first
+        document = collection.objects(_id=object_id).first()
+        
+        if document is None:
+            # Try alternate query structure
+            document = collection.objects(__raw__={'_id': {'$oid': id}}).first()
+        
+        if document is not None:
+            #print(f"[DEBUG] Found document: {document.to_json()}")
+            return {'status': 'ok', 'message': '', 'data': document.to_json()}
+        else:
+            # Let's print all documents in collection to debug
+            all_docs = collection.objects().limit(1)
+            print(f"[DEBUG] Sample document from collection: {[doc.to_json() for doc in all_docs]}")
+            print(f"[DEBUG] No document found with id={id} in collection {collection.__name__}")
+            return {'status': 'error', 'message': f'Document not found in {collection.__name__}'}
     except Exception as e:
-        print(f"[DEBUG] Error in getDocumentsByID: {str(e)}")
-        return {'status': 'error', 'message': 'Error retrieving documents'}
-
-def getDocumentName(id, mode,field):
-    default = getDefaults(mode)
-    try:
-        document = default.collection.objects(id = id).only(field).first()
-        if document:
-            return document[field]
-        return ''
-    except:
-        return ''
-
-def getFilter(category):
-    data = []
-    try:
-        filters = Filter.objects(category = category)
-        if filters != None :
-            for filter in filters:
-                #print filter
-                name = filter.name
-                filter_id = str(filter.id)
-                data.append({'name' : name,'id' : filter_id})
-            return data
-    except:
-        return []
-
-# def getMailTemplates(category):
-#     data = []
-#     try:
-#         templates = MailTemplate.objects(category = category)
-#         if templates != None :
-#             for template in templates:
-#                 #print filter
-#                 name = template.name
-#                 template_id = str(template.id)
-#                 data.append({'name' : name,'id' : template_id})
-#             return data
-#     except:
-#         return []
-
-def processDocuments(documents, recordsTotal, start, limit):
-    print('processDocuments')
-    
-    # Handle case where documents is None or recordsTotal is not defined
-    if documents is None or recordsTotal is None:
-        return {'status': 'error', 'message': 'no documents found'}
-
-    # Calculate pagination values
-    prev = max(0, start - limit) if start - limit > -1 else 0
-    next = start + limit if start + limit < recordsTotal else None
-    last = recordsTotal - limit if recordsTotal > limit else None
-    
-    # Adjust start and end values
-    end = min(start + limit, recordsTotal)
-    display_start = start + 1 if recordsTotal > 0 else start
-
-    return {
-        'status': 'ok',
-        'message': '',
-        'data': documents.to_json(),
-        'recordsTotal': recordsTotal,
-        'limit': limit,
-        'prev': prev,
-        'next': next,
-        'start': display_start,
-        'end': end,
-        'last': last
-    }
-
-def getFilterDict(filter_id):
-    data = []
-    try:
-        filter = Filter.objects(id=filter_id).first()
-        if 'filter' in filter:
-            for x in filter['filter']:
-
-                if x['field'].find('_date') == -1:
-                    if x['operator'] =='is':
-                        data.append({x['field'] : x['value']})
-                    elif x['operator'] =='contains':
-                        data.append({x['field'] : { '$regex' : x['value'],'$options' : 'i' }})
-                    elif x['operator'] == 'is_not':
-                        data.append({x['field'] : { '$ne' : x['value'] }})
-                    elif x['operator'] == 'starts_with':
-                        data.append({x['field'] : { '$regex' : '^'+x['value'] }})
-                else:
-                    if x['value'] =='current_week':
-                        data.append({x['field'] : dbDates().thisWeek()})
-                    elif x['value'] =='current_month':
-                        data.append({x['field'] : dbDates().thisMonth()})
-                    elif x['value'] =='current_year':
-                        data.append({x['field'] : dbDates().thisYear()})
-                    elif x['operator'] =='is_gte':
-                        data.append({x['field'] : {'$gte': x['value']}})
-                    elif x['operator'] =='is_lt':
-                        data.append({x['field'] : {'$lt': x['value']}})
-    except:
-        pass
-    return data
+        print(f"[DEBUG] Error in getDocument: {str(e)}")
+        return {'status': 'error', 'message': f'Error retrieving document: {str(e)}'}
 ```
 
 ## __init__.py
@@ -2785,1568 +3172,1585 @@ def getFilterDict(filter_id):
 # This file can be empty, it just marks the directory as a Python package
 ```
 
-## db_default.py
-
-```
-#!/usr/bin/env python
-# -*- coding: utf-8 -*-
-from db_connect import *
-
-import csv,json
-
-from datetime import date
-
-class Setting(DynamicDocument):
-    name = StringField(required=True,min_length=4)
-    description = StringField()
-    type = StringField(required = True)
-
-def initDefault():
-    Setting.drop_collection()
-    settings = []
-    settings.append(Setting(name = 'salutation', lable_name='Anrede', type = 'SimpleListField', values = ['','Herr', 'Frau']))
-   
-    #settings.append(Setting(name = 'ai_provider', lable_name='A.I. Provider', type = 'AdvancedListField',values = [{'' : ''},{'OpenAI' : 'open_ai'},{'Anthropic' :'anthropic'},{'Meta' :'meta'}]))
-  
-    languages = ['Deutsch', 'Englisch', 'Französich', 'Spanisch']
-    settings.append(Setting(name = 'language', lable_name = 'Sprachen', type = 'SimpleListField', values = languages))
-   
-    # Add roles
-    roles = ['admin', 'user']
-    settings.append(Setting(name = 'role', lable_name = 'Rollen', type = 'SimpleListField', values = roles))
-
-    # my_number = Setting(name = 'My Number', lable_name = 'Rechnungs-Nr', type ='Counter', value=1000, year = year)
-    # settings.append(my_number)
-
-    for setting in settings:
-        setting.save()
-    #MultiLine, SingleLine, SingleSelection, MultiSelection, Date, Number, Counter, Label
-
-def prepListField(db_values,type):
-    array=[]
-    for x in db_values:
-        if type =='AdvancedListField':
-            for key in x:
-                array.append({'name' : key,'value' : x[key]})
-        elif type == 'SimpleListField':
-            array.append({'name' : x,'value' : x})
-    return array
-
-def getDefaultList(name, collection, type):
-    if type == 'SimpleDocumentField':
-        array=[]
-        documents = collection.objects()
-        #array.append({'name':document.name, 'value':0})
-        for document in documents:
-            array.append({'name':document.name, 'value':json.loads(document.to_json())['_id']['$oid']})
-        return array
-    document = collection.objects(name = name).first()
-    if document != None:
-        return prepListField(document.values,type)
-
-def getCounter(name):
-    document = Setting.objects(name = name).first()
-    if document != None:
-        if document.value != None:
-            document.value = int(document.value) + 1
-            document.save()
-            return str(document.value)
-    return 0
-
-initDefault()
-```
-
-## helper.py
+## db_document.py
 
 ```
 #!/usr/bin/env python
 # -*- coding: utf-8 -*-
+from core.db_connect import *
+from bson import json_util
+from flask_login import UserMixin, current_user
+from flask import url_for
+from datetime import datetime
+from mongoengine import *
 
-import json,os,csv,base64
-from core.db_helper import searchDocuments, getFile, getDocumentsByID, getFilter, processDocuments, getFilterDict, getDocumentName
-from core.db_crud import getDocument, updateDocument, createDocument, eraseDocument
-from core.db_default import Setting, getDefaultList
-from core.db_document import File, getDefaults
-
-from pypdf import PdfReader
-    
-import datetime
-
-from werkzeug.utils import secure_filename
-
-from flask_login import current_user
-
-import sys
-sys.path.append('core')
-from flask import redirect, url_for, flash
-from bson import ObjectId
-
-UPLOAD_FOLDER = 'temp'
-DOCUMENT_FOLDER = 'documents'
-
-import logging
-current_path = os.path.dirname(os.path.realpath(__file__)) + '/'
-# logging.basicConfig(format='%(asctime)s %(message)s\n\r',filename=current_path+'import_leads.log', level=logging.INFO,filemode='w')
-
-
-from flask import render_template, redirect, url_for, jsonify, flash
-
-ALLOWED_EXTENSIONS = set(['txt', 'pdf', 'png', 'jpg', 'jpeg', 'gif','csv','md'])
-
-def getRequestData(request):
-    limit = request.args.get('limit')
-    start = request.args.get('start')
-    search = request.args.get('search')
-    id = request.args.get('id')
-    filter = request.args.get('filter')
-    product_name = request.args.get('product_name')
-    offer_id = request.args.get('offer_id')
-
-    if product_name == None:
-        product_name=''
-    if search == None:
-        search = ''
-    if filter == None:
-        filter = ''
-    if id == None:
-        id = ''
-    if start == None:
-        start = 0
-    else:
-        start = int(start)
-    if limit == None:
-        limit = 50
-    else:
-        limit = int(limit)
-
-    end = start + limit
-
-    if offer_id == None:
-        offer_id=''
-
+class AuditMixin:
+    created_date = DateTimeField(default=lambda: datetime.now())
+    created_by = StringField()
+    modified_date = DateTimeField()
+    modified_by = StringField()
 
+    def save(self, *args, **kwargs):
+        try:
+            user = current_user.get_id() if current_user and current_user.is_authenticated else 'system'
+        except:
+            user = 'system'
+            
+        if not self.id:
+            # Document is being created
+            self.created_date = datetime.now()
+            self.created_by = user
+        
+        # Always update modified info on save
+        self.modified_date = datetime.now()
+        self.modified_by = user
+        
+        return super().save(*args, **kwargs)
 
-    return start,limit,end,search, id,filter,product_name,offer_id
+#Date Fields must be named name_date, e.g. contact_date
+#This is to make sure that string dates like 01.01.2016 are saved as date objects
+#functions to convert strings to date objects are in crud.py (create / update)
 
-def initData():
-    data = []
-    prev = None
-    next = None
-    last = None
-    recordsTotal = 0  # Initialize to 0 instead of None
+#every document needs a required name field !!!
 
-    return data, prev, next, last, recordsTotal
+#converts mongo to Json and formats _date properly
+def mongoToJson(document):
+    data = document.to_mongo()
+    
+    # Format all date fields (including audit fields)
+    for key, value in data.items():
+        if key in ['created_date', 'modified_date'] or key.find('_date') != -1:
+            try:
+                data[key] = document[key].strftime('%d.%m.%Y %H:%M')
+            except:
+                pass
+        elif key.find('filter') != -1:
+            try:
+                i = 0
+                for filter in document[key]:
+                    if '_date' in filter['field']:
+                        data[key][i]['value'] = document[key][i]['value'].strftime('%d.%m.%Y')
+                    i += 1
+            except:
+                pass
 
-def loadData(mydata):
-    if (mydata['status'] == 'ok'):
-        data = json.loads(mydata['data'])
-        prev = mydata['prev']
-        next = mydata['next']
-        last = mydata['last']
-        start = mydata['start']
-        end = mydata['end']
-        recordsTotal = mydata['recordsTotal']
+    return json_util.dumps(data)
 
-        #pages = mydata['pages']
-        i=0
-        for x in data:
-            data[i]['id'] = x['_id']['$oid']
-            i=i+1
-        return data,start,end,prev,next,recordsTotal,last
-    return None
+class CustomQuerySet(QuerySet):
+    def to_json(self):
+        return "[%s]" % (",".join([doc.to_json() for doc in self]))
 
-def getList(name, request, filter=None, return_json=False):
-    default = getDefaults(name)
-    if default == None:
-        return redirect(url_for('index'))
-        
-    data, prev, next, last, recordsTotal = initData()
-    start,limit,end,search,id,filter_param,product_name,offer_id = getRequestData(request)
+class Default(DynamicDocument):
+    document_name = StringField(default='')
+    document_url = StringField(default='')
+    collection_name = StringField(default='')
+    collection_url = StringField(default='')
+    page_name_document = StringField(default='')
+    page_name_collection = StringField(default='')
+    collection_title = StringField(default='')
+    menu = DictField(default={})
     
-    filter_data = getFilter(default.document_name)
-    mode = default.collection_name
+    def to_json(self):
+        return mongoToJson(self)
+    
+def getDefaults(name):
+    print(f"[DEBUG] getDefaults called with name={name}")
+    defaults = None
+    
+    def create_document(doc_class):
+        try:
+            return doc_class()
+        except Exception as e:
+            print(f"[DEBUG] Error creating document instance: {str(e)}")
+            return None
+    
+    if name == 'filter':
+        defaults = ['filter', 'filter', 'Filter','Filter', Filter, create_document(Filter), 'filters']
+    elif name == 'user' or name == 'users':
+        defaults = ['user', 'users', 'User','Users', User, create_document(User), 'users']
+    elif name == 'file' or name == 'files':
+        defaults = ['file', 'files', 'File','Files', File, create_document(File), 'files']
+    elif name == 'example' or name == 'examples':
+        defaults = ['example', 'examples', 'Example','Example', Example, create_document(Example), 'examples']
+    elif name == 'model' or name == 'models':
+        defaults = ['model', 'models', 'Model','Models', Model, create_document(Model), 'models']
+    elif name == 'history':
+        defaults = ['history', 'history', 'History','Histories', History, create_document(History), 'history']
+    elif name == 'prompt' or name == 'prompts':
+        print("[DEBUG] Found prompt match")
+        defaults = ['prompt', 'prompts', 'Prompt','Prompts', Prompt, create_document(Prompt), 'prompts']
 
-    # Handle combined filters for user permissions and existing filters
-    if filter:
-        if filter_param:
-            filter_dict = getFilterDict(filter_param)
-            filter.update(filter_dict)
-        mydata = searchDocuments(default.collection, default.document.searchFields(), 
-                               start, limit, search, filter, product_name, mode)
+    print(f"[DEBUG] defaults={defaults}")
+    if defaults:
+        try:
+            d = Default()
+            d.document_name = defaults[0]
+            d.document_url = url_for('doc', name=defaults[0])
+            d.collection_name = defaults[1]
+            d.collection_url = url_for('list', collection=defaults[1])
+            d.page_name_document = defaults[2]
+            d.page_name_collection = defaults[3]
+            d.collection_title = defaults[3]
+            d.collection = defaults[4]
+            d.document = defaults[5]
+            if d.document is None:
+                print("[DEBUG] Failed to create document instance")
+                return None
+            d.menu = {defaults[6]: 'open active', defaults[1]: 'open active'}
+            print("[DEBUG] Created Default object successfully")
+            return d
+        except Exception as e:
+            print(f"[DEBUG] Error creating Default object: {str(e)}")
+            return None
     else:
-        mydata = searchDocuments(default.collection, default.document.searchFields(),
-                               start, limit, search, filter_param, product_name, mode)
-
-    processedData = loadData(mydata)
-
-    if processedData:
-        data, start, end, prev, next, recordsTotal, last = processedData
-        recordsTotal = int(recordsTotal) if recordsTotal is not None else 0
-        if return_json:
-            return jsonify({
-                'status': 'ok',
-                'message': 'success',
-                'data': data,
-                'recordsTotal': recordsTotal,
-                'prev': prev,
-                'next': next,
-                'last': last,
-                'start': start,
-                'end': end
-            })
+        print("[DEBUG] No defaults found")
+        return None
 
-    table_header = default.document.fields(list_order = True)
-    table_content = tableContent(data, table_header)
+class AccessControlMixin:
+    def can_access(self, user):
+        """Default access control - allows access to all users"""
+        return True
+        
+    def can_list(self, user):
+        """Default list access control - allows listing to all users"""
+        return True
+        
+    @classmethod
+    def get_list_filter(cls, user):
+        """Default list filter - no filtering"""
+        return None
 
-    try:
-        table = request.args.get('table')
-        if table:
-            return render_template('/base/collection/table.html',
-                                 menu=default.menu,
-                                 documents=data,
-                                 prev=prev,
-                                 next=next,
-                                 limit=limit,
-                                 start=start,
-                                 total=recordsTotal,
-                                 end=end,
-                                 search=search,
-                                 id=id,
-                                 offer_id=offer_id,
-                                 last=last,
-                                 page_name_collection=default.page_name_collection,
-                                 collection_name=default.collection_name,
-                                 collection_url=default.collection_url,
-                                 document_url=default.document_url,
-                                 mode=mode,
-                                 table_header=table_header,
-                                 table_content=table_content,
-                                 filter=filter_param,
-                                 filter_data=filter_data,
-                                 product_name=product_name)
-    except:
-        pass
+class User(UserMixin, AccessControlMixin, DynamicDocument):
+    firstname = StringField(required=True)
+    name = StringField(required=True)
+    email = StringField(required=True, unique=True)
+    pw_hash = StringField(required=True)
+    csrf_token = StringField()
+    salutation = StringField()
+    comment = StringField()
+    role = StringField(default='user')
+    created_date = DateTimeField(default=datetime.now)
+    modified_date = DateTimeField(default=datetime.now)
+    created_by = StringField()
+    modified_by = StringField()
+    
+    meta = {
+        'collection': 'user',
+        'queryset_class': CustomQuerySet
+    }
+    def searchFields(self):
+        return ['email','firstname','name']
+    def fields(self, list_order = False):
+        email = {'name' :  'email', 'label' : 'Email', 'class' : '', 'type' : 'SingleLine', 'required' : True,'full_width':True}
+        salutation = {'name' :  'salutation', 'label' : 'Anrede', 'class' : '', 'type' : 'SimpleListField','full_width':False}
+        firstname = {'name' :  'firstname', 'label' : 'Vorname', 'class' : '', 'type' : 'SingleLine', 'full_width':False}
+        name = {'name' :  'name', 'label' : 'Nachname', 'class' : '', 'type' : 'SingleLine','full_width':False}
+        comment = {'name' :  'comment', 'label' : 'Kommentar', 'class' : '', 'type' : 'MultiLine','full_width':True}
+        role = {'name' :  'role', 'label' : 'Rolle', 'class' : '', 'type' : 'SimpleListField','full_width':False}
+        
+        if list_order != None and list_order == True:
+            #fields in the overview table of the collection
+            return [firstname,name,email,role] if current_user.is_admin else [firstname,name,email]
+            
+        #fields in the form
+        fields = [email,salutation,firstname,name,comment]
+        if current_user.is_admin:
+            fields.append(role)
+        return fields
+    def to_json(self):
+        return mongoToJson(self)
+    def get_id(self):
+        """Return the unique identifier for Flask-Login"""
+        return str(self.id)
 
-    return render_template('/base/collection/collection.html',
-                         menu=default.menu,
-                         documents=data,
-                         prev=prev,
-                         next=next,
-                         limit=limit,
-                         start=start,
-                         total=recordsTotal,
-                         end=end,
-                         search=search,
-                         id=id,
-                         offer_id=offer_id,
-                         last=last,
-                         page_name_collection=default.page_name_collection,
-                         collection_name=default.collection_name,
-                         collection_url=default.collection_url,
-                         document_url=default.document_url,
-                         mode=mode,
-                         table_header=table_header,
-                         table_content=table_content,
-                         filter=filter_param,
-                         filter_data=filter_data,
-                         product_name=product_name)
+    @property
+    def is_admin(self):
+        """Check if user has admin role"""
+        return self.role == 'admin'
+    
+    def can_access(self, user):
+        """Check if a user can access this specific user profile"""
+        return user.is_admin or str(user.id) == str(self.id)
 
-def handleDocument(name, id, request, return_json=False):
-    try:
-        print(f"[DEBUG] Starting handleDocument with name={name}, id={id}")
-        default = getDefaults(name)
+    def can_list(self, user):
+        """Only admins can list all users"""
+        return user.is_admin
+        
+    @classmethod
+    def get_list_filter(cls, user):
+        """Regular users can only see themselves"""
+        if not user.is_admin:
+            return {'_id': user.id}
+        return None
 
-        if default == None:
-            print(f"[DEBUG] No defaults found for name: {name}")
-            return redirect(url_for('index'))
+class File(AccessControlMixin, AuditMixin, DynamicDocument):
+    name = StringField(required=True, min_length=4)
+    owner_id = StringField(required=True)
+    category = StringField(default='')  # 'prompt' or 'history' or other categories
+    meta = {'queryset_class': CustomQuerySet}
+    
+    def searchFields(self):
+        return ['name']
+    
+    def fields(self, list_order=False):
+        name = {'name': 'name', 'label': 'Name', 'class': '', 'type': 'SingleLine', 'required': True, "full_width": False}
+        category = {'name': 'category', 'label': 'Kategorie', 'class': 'hidden-xs', 'type': 'TextField', "full_width": False}
+        if list_order:
+            return [name, category]
+        return [name, category]
+    
+    def can_access(self, user):
+        """Check if a user can access this file"""
+        # Admin can access all files
+        if user.is_admin:
+            return True
+            
+        # If file is part of a prompt, anyone can access
+        if self.category == 'prompt':
+            return True
+            
+        # For history files or other categories, only owner can access
+        return str(user.id) == str(self.owner_id)
+    
+    def can_list(self, user):
+        """Users can list files"""
+        return True
+        
+    @classmethod
+    def get_list_filter(cls, user):
+        """Filter logic for file listing"""
+        if user.is_admin:
+            return None  # Admins see all files
+            
+        # Regular users see:
+        # 1. Their own files (including history files)
+        # 2. Files associated with prompts
+        return {
+            '$or': [
+                {'owner_id': str(user.id)},
+                {'category': 'prompt'}
+            ]
+        }
 
-        # Add permission check for user documents
-        if name == 'user' and id:
-            if not current_user.can_view_user(id):
-                flash('Access denied. You can only view your own profile.', 'error')
-                return redirect(url_for('list', collection='user'))
-                
-        # Add permission check for history documents
-        if name == 'history' and id:
-            try:
-                history_doc = default.collection.objects(_id=ObjectId(id)).first()
-                if history_doc and not history_doc.can_view(current_user):
-                    flash('Access denied. You can only view your own history.', 'error')
-                    return redirect(url_for('list', collection='history'))
-            except Exception as e:
-                print(f"[DEBUG] Error checking history access: {str(e)}")
-                return redirect(url_for('list', collection='history'))
+    def save(self, *args, **kwargs):
+        if not self.owner_id and current_user and current_user.is_authenticated:
+            self.owner_id = str(current_user.id)
+        return super().save(*args, **kwargs)
 
-        print(f"[DEBUG] Got defaults: document_name={default.document_name}, collection_name={default.collection_name}")
-        mode = default.document_name
+    def to_json(self):
+        return mongoToJson(self)
 
-        # Initialize empty document data for new documents
-        data = {}
-        if not id:
-            print("[DEBUG] Creating new document")
-            try:
-                # Initialize a new document instance
-                doc = default.document()
-                data = json.loads(doc.to_json())
-                data['id'] = ''  # Empty ID for new document
-            except Exception as e:
-                print(f"[DEBUG] Error initializing new document: {str(e)}")
-                return redirect(url_for('index'))
+class Filter(AccessControlMixin, AuditMixin, DynamicDocument):
+    name = StringField(required=True, min_length=4)
+    meta = {'queryset_class': CustomQuerySet}
+    
+    def searchFields(self):
+        return ['name']
+        
+    def fields(self, list_order=False):
+        name = {'name': 'name', 'label': 'Name', 'class': '', 'type': 'SingleLine', 'required': True}
+        category = {'name': 'category', 'label': 'Kategorie', 'class': '', 'type': 'SingleLine'}
 
-        page = {
-            'title': f"{'Add' if not id else 'Edit'} {default.page_name_document}",
-            'collection_title': default.collection_title,
-            'document_name': default.document_name,
-            'document_url': default.document_url,
-            'collection_url': default.collection_url,
-            'document_title': default.page_name_document
-        }
+        if list_order:
+            return [name, category]
+        return [name, category]
+
+    def can_access(self, user):
+        """Only admins can access filters"""
+        return user.is_admin
         
-        form_data = htmlFormToDict(request.form)
-        print(f"[DEBUG] Form data: {form_data}")
-        category_fields = []
+    def can_list(self, user):
+        """Only admins can list filters"""
+        return user.is_admin
+        
+    @classmethod
+    def get_list_filter(cls, user):
+        """No additional filtering needed since access is already admin-only"""
+        return None
 
-        if name=='filter':
-            form_data = prepFilterData(form_data)
+    def to_json(self):
+        return mongoToJson(self)
 
-        if request.method == 'POST':
-            print("[DEBUG] Processing POST request")
-            if (form_data.get('id') and form_data['id'] not in ['', 'None', None]):
-                print(f'[DEBUG] Updating Document with ID: {form_data["id"]}')
-                data = updateDocument(form_data, default.document, default.collection)
-            else:
-                print('[DEBUG] Creating new Document')
-                data = createDocument(form_data, default.document, request)
+#example of a DynamicDocument with all available fields
+#fields are then used in the form_elements.html to create the form
+#the fields are then used in the db_crud.py to create the document
+class Example(AccessControlMixin, AuditMixin, DynamicDocument):
+    name = StringField(required=True, min_length=1)
+    email = StringField(required=True, min_length=1)
+    salutation = StringField(default='')
+    firstname = StringField(default='')
+    comment = StringField(default='')
+    active = StringField(default='Off')
+    newsletter = StringField(default='Off')
+    event_date = DateField(default=None, null=True)
+    age_int = IntField(default=None, null=True)
+    salary_float = FloatField(default=None, null=True)
+    ai_provider = StringField(default='')
+    user_search = StringField(default='')
+    files = StringField(default='')
+    more_files = StringField(default='')
+    link = StringField(default='')
+    
+    meta = {'queryset_class': CustomQuerySet}
+    
+    #these are the search fields for the search field in the document list overview page
+    def searchFields(self):
+        return ['name', 'email', 'firstname']
+        
+    def fields(self, list_order = False):
+        # Field Types Documentation needs these corrections:
+        
+        # SingleLine: Text input field with 'input' class
+        # MultiLine: Textarea field with 'textarea' class
+        # CheckBox: Switch toggle with 'switch switch-primary' class
+        # SimpleListField: Select dropdown with 'select max-w-sm' class
+        # AdvancedListField: Enhanced select dropdown with 'select max-w-sm' class
+        # Date: Flatpickr date picker with 'input max-w-sm' class (format: DD.MM.YYYY)
+        # IntField: Number input with 'input' class
+        # FloatField: Number input with 'input' class
+        # FileField: File upload with 'input max-w-sm' class
+        # ButtonField: Button with 'btn btn-primary' class
+        # DocumentField: Search field with 'searchField' class and dropdown functionality
 
-            if (data['status'] == 'ok'):
-                data = json.loads(data['data'])
-                data['id'] = data['_id']['$oid']
-                file_status = upload_files(request, default.collection_name, data['id'])
-                print(f"[DEBUG] File status: {file_status}")
-                if return_json:
-                    return json.dumps(data)
-                return redirect(url_for('doc', name=default.document_name) + '/' + data['id'])
-            else:
-                print(f"[DEBUG] Error in POST: {data.get('message', 'Unknown error')}")
-                return json.dumps(data)
+        # Additional Field Properties:
+        # id: Used for element identification (required for all fields)
+        # value: Current field value
+        # value_id: (DocumentField only) ID of selected document
+        # SimpleListField: (SimpleListField only) Array of {value, name} objects
+        # AdvancedListField: (AdvancedListField only) Array of {value, name} objects
 
-        elif request.method == 'GET':
-            print(f"[DEBUG] Processing GET request with id={id}")
-            if id:
-                print(f'[DEBUG] Getting Document with ID: {id}')
-                data = getDocument(id, default.document, default.collection)
-                print(f"[DEBUG] getDocument result: {data}")
-                if (data['status'] == 'ok'):
-                    page = {'title': 'Edit ' + default.page_name_document, 'collection_title': default.collection_title, 'document_name': default.document_name, 'document_url': default.document_url, 'collection_url': default.collection_url, 'document_title': default.page_name_document}
-                    data = json.loads(data['data'])
-                    data['id'] = data['_id']['$oid']
-                    
-                    files = json.loads(File.objects(document_id=data['id']).to_json())
-                    print(f"[DEBUG] Found files: {files}")
-                    for file in files:
-                        if not data.get(file['element_id']):
-                            data[file['element_id']] = []
-                        file['id'] = file['_id']['$oid']
-                        file.pop('_id', None)
-                        data[file['element_id']].append(file)
-                    
-                    if return_json:
-                        return json.dumps(data)
+        #full_width is used to create a full width field in the form
+        #if full_width is set to True, the field will take up the full width of the form
+        #if full_width is set to False, the field will take up half the width of the form
+        #required is used to make the field required in the form
 
-                    if 'category' in data and name == 'filter':
-                        category_fields = getFields(data['category'])
-                else:
-                    print(f"[DEBUG] Error getting document: {data.get('message', 'Unknown error')}")
-                    print(f"[DEBUG] Redirecting to list with name={default.collection_name}")
-                    return redirect(url_for('list', collection=default.collection_name))
+        #list of fields for the form
+        #SingleLine is a single line text field (input type text)
+        #MultiLine is a multi line text field (input type textarea)
+        #CheckBox is a checkbox field (input type checkbox, we are using a switch in the frontend)
+        #SimpleListField is a simple list field (input type select)
+        #AdvancedListField is a advanced list field (input type select with search)
+        #DateField is a date field (input type date, this uses Flatpickr and flatpickr.js needs to be included in the frontend)
+        #IntField is a integer field (input type number)
+        #FloatField is a float field (input type number)
+        #FileField is a file field (input type file)
 
-        print("[DEBUG] Getting elements")
-        elements = getElements(data, default.document)
-        #print(f"[DEBUG] Elements: {elements}")
-        return render_template('/base/document/form.html', elements=elements, menu=default.menu, page=page, document=data, mode=mode, category_fields=category_fields)
-    except Exception as e:
-        print(f"[DEBUG] Error in handleDocument: {str(e)}")
-        if return_json:
-            return json.dumps({'status': 'error', 'message': str(e)})
-        return redirect(url_for('list', collection=default.collection_name))
+        name = {'name': 'name', 'label': 'Name', 'class': '', 'type': 'SingleLine', 'required': True, 'full_width': True}
+        email = {'name': 'email', 'label': 'Email', 'class': '', 'type': 'SingleLine', 'required': True, 'full_width': True}
+        salutation = {'name': 'salutation', 'label': 'Anrede', 'class': '', 'type': 'SimpleListField', 'full_width': False}
+        firstname = {'name': 'firstname', 'label': 'Vorname', 'class': '', 'type': 'SingleLine', 'full_width': False}
+        comment = {'name': 'comment', 'label': 'Kommentar', 'class': '', 'type': 'MultiLine', 'full_width': True}
+        active = {'name': 'active', 'label': 'Aktiv', 'class': '', 'type': 'CheckBox', 'full_width': False}
+        newsletter = {'name': 'newsletter', 'label': 'Newsletter', 'class': '', 'type': 'CheckBox', 'full_width': False}
+        event_date = {'name': 'event_date', 'label': 'Event-Datum', 'class': 'hidden-xs', 'type': 'Date', 'full_width': False}
+        age_int = {'name': 'age_int', 'label': 'Alter', 'class': 'hidden-xs', 'type': 'IntField', 'full_width': False}
+        salary_float = {'name': 'salary_float', 'label': 'Gehalt', 'class': 'hidden-xs', 'type': 'FloatField', 'full_width': False}
+        ai_provider = {'name': 'ai_provider', 'label': 'Firma', 'class': 'hidden-xs', 'type': 'AdvancedListField', 'full_width': False}
+        user_search = {'name': 'user_search', 'label': 'User', 'class': '', 'type': 'DocumentField', 'full_width': False, 'module': 'user', 'document_field': 'email'}
+        files = {'name': 'files', 'label': 'Files', 'class': 'hidden-xs', 'type': 'FileField', 'full_width': True}
+        more_files = {'name': 'more_files', 'label': 'More Files', 'class': 'hidden-xs', 'type': 'FileField', 'full_width': True}
+        link = {'name': 'link', 'label': 'Link', 'class': '', 'type': 'ButtonField', 'full_width': False, 'link': '/d/testing'}
 
-def deleteDocument(request):
-    type = request.args.get('type')
-    id = request.args.get('id')
-    print(f"[DEBUG] deleteDocument called with type={type}, id={id}")
-    
-    if not id:
-        print("[DEBUG] No ID provided")
-        return {'status': 'error', 'message': 'no id'}
+        #fields in the overview table of the collection
+        if list_order:
+            return [name, email, firstname]
+        #fields in the form
+        return [name, email, salutation, firstname, comment, active, newsletter, event_date, 
+                age_int, salary_float, ai_provider, user_search, files, more_files, link]
+
+    def to_json(self):
+        return mongoToJson(self)
+
+    def can_access(self, user):
+        """Only admins can access examples"""
+        return user.is_admin
         
-    # Special handling for file deletions
-    if type == 'files':
-        print(f"[DEBUG] Handling file deletion for id={id}")
-        data = eraseDocument(id, File, File)
-        print(f"[DEBUG] File deletion result: {data}")
-    else:
-        print(f"[DEBUG] Handling document deletion for type={type}, id={id}")
-        default = getDefaults(type)
-        if default == []:
-            print(f"[DEBUG] No defaults found for type={type}")
-            return {'status': 'error', 'message': 'no document found'}
-        data = eraseDocument(id, default.document, default.collection)
-        print(f"[DEBUG] Document deletion result: {data}")
+    def can_list(self, user):
+        """Only admins can list examples"""
+        return user.is_admin
         
-    if data['status'] == 'ok':
-        print("[DEBUG] Deletion successful")
-        return {'status': 'ok', 'message': 'document deleted'}
-    else:
-        print(f"[DEBUG] Deletion failed: {data.get('message', 'unknown error')}")
-        return {'status': 'error', 'message': data.get('message', 'document not deleted')}
-
-def tableContent(documents, table_header):
-    tableContent=[]
+    @classmethod
+    def get_list_filter(cls, user):
+        """No additional filtering needed since access is already admin-only"""
+        return None
 
-    for document in documents:
-        tableRow = []
-        for field in table_header:
-            if field['name'] in document.keys() and 'id' in document.keys():
-                if field['name'].find('_date') !=-1:
-           
-                    date= document[field['name']]['$date']
-                    document[field['name']] = datetime.datetime.fromtimestamp(date/1000).strftime('%d.%m.%Y')
-                if 'link' in field.keys():
-                    tableRow.append({'name': field['name'], 'value' : document[field['name']], 'class' : field['class'], 'id' : document['id'],'type':field['type'],'link':field['link'],'label':field['label']})
-                else:
-                    tableRow.append({'name': field['name'], 'value' : document[field['name']], 'class' : field['class'], 'id' : document['id'],'type':field['type'],'label':field['label']})
-                    
+#AI Documents
+#AI Chat Bot Code
+class Model(AccessControlMixin, AuditMixin, DynamicDocument):
+    provider = StringField(required=True, min_length=1)
+    model = StringField(required=True, min_length=1)
+    name = StringField(required=True, min_length=1)
 
-            else:
-                tableRow.append('')
-        tableContent.append(tableRow)
+    meta = {'queryset_class': CustomQuerySet}
 
-    return tableContent
-def getElements(data, document):
-    elements=[]
-    fields = document.fields()
-    for field in fields:
-        if not 'required' in field:
-            required = False
-        else:
-            required = True
-        if field['type'] == 'SimpleDocumentField':
-            elements.append({'type' : getDefaultList(field['name'], Category, 'SimpleDocumentField'), 'name' : field['name'], 'value' : '', 'id' : field['name'], 'label' : field['label'], 'required' : required,'full_width':field['full_width']})
-        elif field['type'] == 'SimpleListField':
-            elements.append({'type' : 'SimpleListField', 'SimpleListField':getDefaultList(field['name'], Setting, 'SimpleListField'), 'name' : field['name'], 'value' : '', 'id' : field['name'], 'label' : field['label'], 'required' : required,'full_width':field['full_width']})
-        elif field['type'] == 'AdvancedListField':
-            elements.append({'type' : 'AdvancedListField','AdvancedListField': getDefaultList(field['name'], Setting, 'AdvancedListField'), 'name' : field['name'], 'value' : '', 'id' : field['name'], 'label' : field['label'], 'required' : required,'full_width':field['full_width']})
-        elif field['type'] == 'DocumentField':
-            elements.append({'type' : 'DocumentField', 'name' : field['name'], 'value' : '' , 'id' : field['name'], 'label' : field['label'], 'required' : required,'full_width':field['full_width'],'module':field['module'],'document_field':field['document_field']})
-        elif field['type'] == 'EditorField':
-            elements.append({'type' : 'EditorField', 'name' : field['name'], 'value' : '' , 'id' : field['name'], 'label' : field['label'], 'required' : required,'full_width':field['full_width']})
+    def searchFields(self):
+        return ['provider', 'model', 'name']
 
-        elif field['type'] == 'DateInfo':
-            pass
-        elif field['type'] == 'CheckBox':
-            elements.append({'type' : field['type'], 'name' : field['name'], 'value' : 0, 'id' : field['name'], 'label' : field['label'], 'required' : required,'full_width':field['full_width']})
-        elif field['type'] == 'ButtonField':
-            elements.append({'type': field['type'], 'name' : field['name'], 'value' : '', 'id' : field['name'], 'label' : field['label'], 'required' : required,'full_width':field['full_width'],'link':field['link']})
-        else:
-            elements.append({'type': field['type'], 'name' : field['name'], 'value' : '', 'id' : field['name'], 'label' : field['label'], 'required' : required,'full_width':field['full_width']})
+    def fields(self, list_order=False):
+        provider = {'name': 'provider', 'label': 'Provider', 'class': '', 'type': 'SingleLine', 'required': True, 'full_width': True}
+        model = {'name': 'model', 'label': 'Model', 'class': '', 'type': 'SingleLine', 'required': True, 'full_width': True}
+        name = {'name': 'name', 'label': 'Name', 'class': '', 'type': 'SingleLine', 'required': True, 'full_width': True}
 
-    return fillElements(elements,data)
+        if list_order:
+            return [name, provider, model]
+        return [name, provider, model]
 
-def fillElements(elements, data):
-    # Check if data is empty or None
-    if not data or not isinstance(data, dict):
-        return elements
+    def can_access(self, user):
+        """Only admins can access models"""
+        return user.is_admin
         
-    for element in elements:
-        if element['name'] in data:
-            element['value'] = data[element['name']]
-            if element['type'] == 'DocumentField':
-                id = data.get(f"{element['name']}_id", '')  # Get ID with fallback to empty string
-                if id and id != '0815':
-                    element['value'] = getDocumentName(data[element['name']], element['module'], element['document_field'])
-                    element['document_id'] = id
-                    element['url'] = url_for('doc', name=element['module'], id=id)
-                else:
-                    element['value'] = ''
+    def can_list(self, user):
+        """Only admins can list models"""
+        return user.is_admin
+        
+    @classmethod
+    def get_list_filter(cls, user):
+        """No additional filtering needed since access is already admin-only"""
+        return None
 
-    return elements
+    def to_json(self):
+        return mongoToJson(self)
+
+class History(AccessControlMixin, AuditMixin, DynamicDocument):
+    user_id = StringField(required=True)
+    chat_started = IntField()
+    messages = StringField()
+    first_message = StringField()
+    link = StringField(default='')
+    file_ids = ListField(StringField())
     
-def htmlFormToDict(form_data):
-    if not form_data:
-        return {}
+    meta = {'queryset_class': CustomQuerySet}
+    
+    def searchFields(self):
+        return ['messages', 'first_message']
+    
+    def fields(self, list_order=False):
+        user_id = {'name': 'user_id', 'label': 'User ID', 'class': '', 'type': 'SingleLine', 'required': True, 'full_width': False}
+        created_date = {'name': 'created_date', 'label': 'Date', 'class': '', 'type': 'Date', 'full_width': False}
+        first_message = {'name': 'first_message', 'label': 'First Message', 'class': '', 'type': 'SingleLine', 'required': False, 'full_width': True}
+        messages = {'name': 'messages', 'label': 'Messages', 'class': '', 'type': 'MultiLine', 'required': False, 'full_width': True}
+        link = {'name': 'link', 'label': 'Chat', 'class': '', 'type': 'ButtonField', 'full_width': False, 'link': '/chat/history'}
         
-    try:
-        # Handle ImmutableMultiDict from Flask
-        if hasattr(form_data, 'getlist'):
-            return {key: form_data.getlist(key)[0] for key in form_data.keys()}
-        # Handle regular dict
-        elif isinstance(form_data, dict):
-            return form_data
-        # Handle list of dicts with name/value pairs
-        elif isinstance(form_data, list):
-            return {item['name']: item['value'] for item in form_data if 'name' in item and 'value' in item}
-        else:
-            print(f"[DEBUG] Unexpected form_data type: {type(form_data)}")
-            return {}
-    except Exception as e:
-        print(f"[DEBUG] Error in htmlFormToDict: {str(e)}")
-        return {}
-def allowed_file(filename):
-    return '.' in filename and \
-           filename.rsplit('.', 1)[1] in ALLOWED_EXTENSIONS
+        if list_order:
+            # Show these fields in the list view
+            return [created_date, first_message, link]
+        # Show these fields in the edit form
+        return [user_id, first_message, chat_started, messages, link]
+    
+    def can_access(self, user):
+        """Check if a user can access this specific history entry"""
+        return user.is_admin or str(user.id) == str(self.user_id)
+    
+    def can_list(self, user):
+        """Users can always list their own history"""
+        return True
+        
+    @classmethod
+    def get_list_filter(cls, user):
+        """Filter to only show user's own history"""
+        print(f"[DEBUG] Getting list filter for user {user.id}")
+        filter_dict = {'user_id': str(user.id)}
+        print(f"[DEBUG] Returning filter: {filter_dict}")
+        return filter_dict
+    
+    def save(self, *args, **kwargs):
+        if not self.user_id and current_user and current_user.is_authenticated:
+            self.user_id = str(current_user.id)
+        return super().save(*args, **kwargs)
 
+    def to_json(self):
+        return mongoToJson(self)
 
-def upload_files(request, category='', document_id=''):
-    status = {'status': 'ok', 'files': []}
+class Prompt(AccessControlMixin, AuditMixin, DynamicDocument):
+    name = StringField(required=True, min_length=1)
+    welcome_message = StringField(required=True, min_length=1)
+    system_message = StringField(required=True, min_length=1)
+    prompt = StringField(required=True, min_length=1)
+    link = StringField(default='')
+    files = StringField(default='')
 
-    if request.method == 'POST':
-        # Get base path for consistent path handling
-        base_path = os.path.dirname(os.path.dirname(os.path.realpath(__file__)))
-        
-        # Extract element IDs directly from the file input names
-        element_ids = [key.split('files_', 1)[1] for key in request.files.keys()]
+    meta = {
+        'collection': 'prompts',
+        'queryset_class': CustomQuerySet
+    }
 
-        for element_id in element_ids:
-            status[element_id] = []  # Initialize list for this element_id
-            files = request.files.getlist(f'files_{element_id}')
-            if not files or files[0].filename == '':
-                continue  # Skip if no files are selected
+    def __init__(self, *args, **kwargs):
+        super().__init__(*args, **kwargs)
+        if not self.link:
+            self.link = '/chat/prompt'
 
-            for file in files:
-                if file and allowed_file(file.filename):
-                    filename = secure_filename(file.filename)
-                    try:
-                        # Use consistent path structure
-                        relative_path = os.path.join('core', 'documents', category) if category else os.path.join('core', UPLOAD_FOLDER)
-                        absolute_path = os.path.join(base_path, relative_path)
-                        
-                        print(f"[DEBUG] Upload path (absolute): {absolute_path}")
-                        print(f"[DEBUG] Upload path (relative): {relative_path}")
+    def searchFields(self):
+        return ['name', 'system_message', 'prompt']
 
-                        if not os.path.exists(absolute_path):
-                            print(f"[DEBUG] Creating directory: {absolute_path}")
-                            os.makedirs(absolute_path)
+    def fields(self, list_order=False):
+        name = {'name': 'name', 'label': 'Name', 'class': '', 'type': 'SingleLine', 'required': True, 'full_width': True}
+        welcome_message = {'name': 'welcome_message', 'label': 'Welcome Message', 'class': '', 'type': 'MultiLine', 'required': True, 'full_width': True}
+        system_message = {'name': 'system_message', 'label': 'System Message', 'class': '', 'type': 'MultiLine', 'required': True, 'full_width': True}
+        prompt = {'name': 'prompt', 'label': 'Prompt', 'class': '', 'type': 'MultiLine', 'required': True, 'full_width': True}
+        link = {'name': 'link', 'label': 'Use Prompt', 'class': '', 'type': 'ButtonField', 'full_width': False, 'link': '/chat/prompt'}
+        files = {'name': 'files', 'label': 'Files', 'class': 'hidden-xs', 'type': 'FileField', 'full_width': True}
 
-                        file_type = filename.rsplit('.', 1)[1]
-                        fileDB = File(
-                            name=filename, 
-                            path=relative_path,  # Store relative path
-                            category=category, 
-                            file_type=file_type, 
-                            document_id=document_id, 
-                            element_id=element_id,
-                            owner_id=str(current_user.id)  # Set the owner_id to current user's ID
-                        )
-                        fileDB.save()
-                        fileID = getDocumentID(fileDB)
+        if list_order:
+            return [link, name, prompt]
+        return [name, welcome_message, system_message, prompt, files, link]
 
-                        file_save_path = os.path.join(absolute_path, f"{fileID}.{file_type}")
-                        print(f"[DEBUG] Saving file to: {file_save_path}")
-                        file.save(file_save_path)
+    def can_access(self, user):
+        """Check if user can access this prompt"""
+        return True  # All users can access prompts
+        
+    def can_list(self, user):
+        """Check if user can list prompts"""
+        return True  # All users can list prompts
+        
+    @classmethod
+    def get_list_filter(cls, user):
+        """No filtering needed for prompts"""
+        return None  # No filtering - everyone sees all prompts
 
-                        status[element_id].append({
-                            'id': fileID, 
-                            'name': filename, 
-                            'path': os.path.join(relative_path, f"{fileID}.{file_type}")
-                        })
+    def to_json(self):
+        return mongoToJson(self)
+```
 
-                    except Exception as e:
-                        status = {'status': 'error', 'message': f'Error while saving File! / {str(e)}'}
-                        return json.dumps(status)
-                else:
-                    status = {'status': 'error', 'message': 'Filetype not allowed!'}
-                    return json.dumps(status)
+## db_date.py
 
-    return json.dumps(status)
+```
+#!/usr/bin/env python
+# -*- coding: utf-8 -*-
+import sys, datetime
+
+#dont write pyc files!
+sys.dont_write_bytecode = True
+
+#returns isoDates
+class dbDates():
+    now = datetime.datetime.now()
+    #print now.weekday()
+    today = datetime.datetime(now.year,now.month,now.day)
+    def firstDayThisMonth(self):
+        date = self.today.replace(day=1)
+        return date
+    def firstDayLastMonth(self):
+        date = self.today.replace(day=1,month=self.now.month-1)
+        return date
+    def firstDayNextMonth(self):
+        date = self.today.replace(month=self.now.month+1, day=1)
+        return date
+    def firstDayThisYear(self):
+        date = self.today.replace(month=1,day=1)
+        return date
+    def firstDayNextYear(self):
+        date = self.today.replace(year=self.now.year+1,month=1,day=1)
+        return date
+    def thisYear(self):
+        return {'$gte': self.firstDayThisYear(), '$lt': self.firstDayNextYear()}
+    def thisMonth(self):
+        return {'$gte': self.firstDayThisMonth(), '$lt': self.firstDayNextMonth()}
+    def lastMonth(self):
+        return {'$gte': self.firstDayLastMonth(), '$lt': self.firstDayThisMonth()}
+    def thisWeek(self):
+        start = self.today - datetime.timedelta(days=self.today.weekday())
+        end = start + datetime.timedelta(days=7)
+        return {'$gte': start, '$lt': end}
+    def thisDay(self):
+        return self.today
+    def yesterDay(self):
+        return self.today - datetime.timedelta(days=1)
+    def tomorrow(self):
+        return self.today + datetime.timedelta(days=1)
+```
 
-def getDocumentID(document):
-    document = json.loads(document.to_json())
-    id = document['_id']['$oid']
-    return id
+## db_user.py
 
-def prepFilterData(form_data):
-    fields = []
-    db_fields = []
-    i=0
-    for key in form_data:
-        if 'field_' in key:
-            fieldNumber = key.split('_')[1]
-            fields.append(fieldNumber)
-    for fieldNumber in fields:
-        try:
-            value = form_data['value_' + str(fieldNumber)]
-            del(form_data['value_' + str(fieldNumber)])
-        except:
-            value = form_data['date_value_' + str(fieldNumber)]
-            value = datetime.datetime.strptime(value, "%d.%m.%Y")
-            del(form_data['date_value_' + str(fieldNumber)])
+```
+#!/usr/bin/env python
+# -*- coding: utf-8 -*-
+from werkzeug.security import generate_password_hash, check_password_hash
+from core.db_document import *
 
-        operator = form_data['operator_' + str(fieldNumber)]
-        field = form_data['field_' + str(fieldNumber)]
-        db_fields.append({'field' : field,'operator':operator,'value':value,'nr':str(i)})
+import logging
+from mongoengine.errors import NotUniqueError, ValidationError, OperationError
 
-        del(form_data['field_' + str(fieldNumber)])
-        del(form_data['operator_' + str(fieldNumber)])
-        i=i+1
+# Configure logging
+logging.basicConfig(level=logging.INFO)
+logger = logging.getLogger(__name__)
 
-    form_data['filter'] = db_fields
-    return form_data
+def hash_password(password):
+    return generate_password_hash(password)
 
-#only pdf/txt files are supported for now
-def prepare_context_from_files(files):
-    result = {
-        "status": "",
-        "data": "",
-        "character_count": 0
-    }
-    combined_text = ""
+def check_password(email, password):
     try:
-        for file in files:
-            # Convert MongoDB document to dict if needed
-            if hasattr(file, 'to_mongo'):
-                file = file.to_mongo()
-                file_id = str(file['_id'])
-            else:
-                file_id = file['_id']['$oid']
-
-            file_path = os.path.join(file['path'], f"{file_id}.{file['file_type'].lower()}")
-            
-            if file['file_type'].lower() == 'pdf':
-                try:
-                    with open(file_path, 'rb') as pdf_file:
-                        pdf_reader = PdfReader(pdf_file)
-                        combined_text += f"Content of File: {file['name']}\n"
-                        combined_text += "-" * 50 + "\n"
-                        for page_num in range(len(pdf_reader.pages)):
-                            page = pdf_reader.pages[page_num]
-                            text = page.extract_text()
-                            if text:
-                                text = ' '.join(text.split())
-                                text = text.replace(' .', '.').replace(' ,', ',')
-                                paragraphs = text.split('\n')
-                                formatted_text = '\n\n'.join(p.strip() for p in paragraphs if p.strip())
-                                combined_text += formatted_text
-                            else:
-                                combined_text += "[No text found on this page]\n"
-                            combined_text += "\n\n"
-                        combined_text += "-" * 50 + "\n\n"
-                except Exception as e:
-                    result["status"] = "error"
-                    result["data"] = f"Error reading {file['name']}: {e}"
-                    return result
-            elif file['file_type'].lower() == 'txt':
-                try:
-                    with open(file_path, 'r', encoding='utf-8') as txt_file:
-                        text = txt_file.read()
-                        combined_text += f"Content of File: {file['name']}\n"
-                        combined_text += "-" * 50 + "\n"
-                        combined_text += text
-                        combined_text += "\n\n" + "-" * 50 + "\n\n"
-                except Exception as e:
-                    result["status"] = "error"
-                    result["data"] = f"Error reading {file['name']}: {e}"
-                    return result
-        result["status"] = "ok"
-        result["data"] = combined_text
-        result["character_count"] = len(combined_text)
+        user = User.objects(email=email).first()
+        if user and check_password_hash(user.pw_hash, password):
+            return {'status': 'ok', 'message': 'successfully logged in', 'user': user.to_json()}
+        return {'status': 'error', 'message': 'Invalid email or password'}
     except Exception as e:
-        result["status"] = "error"
-        result["data"] = str(e)
-
-    return result
-
-def encode_image(image_path):
-    with open(image_path, "rb") as image_file:
-        return base64.b64encode(image_file.read()).decode('utf-8')
+        logger.error(f"Error checking password for {email}: {str(e)}")
+        return {'status': 'error', 'message': 'Authentication error occurred'}
 
-def upload_file(file, category='history'):
-    """Handle file upload for chat functionality and return file context"""
+def create_user(firstname, name, email, password, role='user'):
     try:
-        if not file:
-            print("[DEBUG] No file object provided")
-            return {'status': 'error', 'message': 'No file provided'}
-            
-        if not hasattr(file, 'filename'):
-            print("[DEBUG] File object has no filename attribute")
-            return {'status': 'error', 'message': 'Invalid file object'}
-            
-        if not file.filename:
-            print("[DEBUG] Empty filename")
-            return {'status': 'error', 'message': 'No file selected'}
-            
-        print(f"[DEBUG] Processing file: {file.filename}")
-        filename = secure_filename(file.filename)
-        
-        # More robust file type extraction
-        try:
-            file_type = filename.rsplit('.', 1)[1].lower() if '.' in filename else None
-            if not file_type:
-                print("[DEBUG] Could not extract file type")
-                return {'status': 'error', 'message': 'Could not determine file type'}
-        except Exception as e:
-            print(f"[DEBUG] Error extracting file type: {str(e)}")
-            return {'status': 'error', 'message': 'Invalid file type'}
-            
-        if not allowed_file(filename):
-            print(f"[DEBUG] File type {file_type} not allowed")
-            return {'status': 'error', 'message': f'File type {file_type} not allowed'}
-        
-        if file_type not in ['pdf', 'txt', 'jpeg', 'jpg', 'png']:
-            print(f"[DEBUG] Unsupported file type: {file_type}")
-            return {'status': 'error', 'message': 'Only PDF, TXT, and image files are supported'}
-            
-        # Get base path and construct relative/absolute paths consistently
-        base_path = os.path.dirname(os.path.dirname(os.path.realpath(__file__)))
-        relative_path = os.path.join('core', 'documents', category)
-        absolute_path = os.path.join(base_path, relative_path)
-        
-        print(f"[DEBUG] Upload base path: {base_path}")
-        print(f"[DEBUG] Upload relative path: {relative_path}")
-        print(f"[DEBUG] Upload absolute path: {absolute_path}")
-        
-        if not os.path.exists(absolute_path):
-            print(f"[DEBUG] Creating directory: {absolute_path}")
-            os.makedirs(absolute_path)
-            
-        fileDB = File(
-            name=filename,
-            path=relative_path,  # Store relative path for consistent deletion
-            category=category,
-            file_type=file_type,
-            owner_id=str(current_user.id)  # Set the owner_id to current user's ID
-        )
-        fileDB.save()
-        fileID = str(fileDB.id)  # Ensure we're using string ID consistently
-        
-        file_save_path = os.path.join(absolute_path, f"{fileID}.{file_type}")
-        print(f"[DEBUG] Saving file to: {file_save_path}")
-        file.save(file_save_path)
-        
-        response = {
-            'status': 'ok',
-            'file_id': fileID,
-            'filename': filename,  # Keep original name for frontend
-            'name': filename,      # Also include as name for consistency
-            'file_type': file_type,  # Keep original file_type for frontend
-            'type': file_type,       # Also include as type for consistency
-            'path': relative_path
-        }
-        
-        # Add context for text-based files
-        if file_type in ['pdf', 'txt']:
-            try:
-                context = prepare_context_from_files([fileDB])
-                if context['status'] == 'ok':
-                    response['content'] = context['data']
-                    response['character_count'] = context['character_count']
-            except Exception as e:
-                print(f"[DEBUG] Error getting file context: {str(e)}")
-                # Don't fail the upload if context extraction fails
-                pass
-                
-        # Add base64 for images
-        elif file_type in ['jpeg', 'jpg', 'png']:
-            try:
-                response['base64_image'] = encode_image(file_save_path)
-            except Exception as e:
-                print(f"[DEBUG] Error encoding image: {str(e)}")
-                # Don't fail the upload if image encoding fails
-                pass
-                
-        print(f"[DEBUG] Upload successful, returning response: {response}")
-        return response
-        
-    except Exception as e:
-        print(f"[DEBUG] Upload error: {str(e)}")
-        return {'status': 'error', 'message': str(e)}
-```
-
-## db_document.py
+        # Check if user exists first
+        if User.objects(email=email).first():
+            return {'status': 'error', 'message': 'user exists'}
 
-```
-#!/usr/bin/env python
-# -*- coding: utf-8 -*-
-from core.db_connect import *
-from bson import json_util
-from flask_login import UserMixin, current_user
-from flask import url_for
-import datetime
+        # Create new user
+        user = User(
+            firstname=firstname,
+            name=name,
+            email=email,
+            pw_hash=hash_password(password),
+            role=role,
+            created_by='system',
+            modified_by='system'
+        )
+        user.save()
+        logger.info(f"User created successfully: {email}")
+        return {'status': 'ok', 'message': 'user created', 'id': str(user.id)}
 
-class AuditMixin:
-    created_date = DateTimeField(default=lambda: datetime.datetime.now())
-    created_by = StringField()
-    modified_date = DateTimeField()
-    modified_by = StringField()
+    except ValidationError as e:
+        logger.error(f"Validation error creating user {email}: {str(e)}")
+        return {'status': 'error', 'message': 'Invalid user data provided'}
+    except NotUniqueError as e:
+        logger.error(f"Duplicate email error for {email}")
+        return {'status': 'error', 'message': 'user exists'}
+    except Exception as e:
+        logger.error(f"Unexpected error creating user {email}: {str(e)}")
+        return {'status': 'error', 'message': 'An unexpected error occurred'}
 
-    def save(self, *args, **kwargs):
-        try:
-            user = current_user.get_id() if current_user and current_user.is_authenticated else 'system'
-        except:
-            user = 'system'
-            
-        if not self.id:
-            # Document is being created
-            self.created_date = datetime.datetime.now()
-            self.created_by = user
+def delete_user(email, password):
+    try:
+        user = User.objects(email=email).first()
+        if not user:
+            return {'status': 'error', 'message': 'user does not exist'}
         
-        # Always update modified info on save
-        self.modified_date = datetime.datetime.now()
-        self.modified_by = user
+        if not check_password_hash(user.pw_hash, password):
+            return {'status': 'error', 'message': 'incorrect password'}
         
-        return super().save(*args, **kwargs)
-
-#Date Fields must be named name_date, e.g. contact_date
-#This is to make sure that string dates like 01.01.2016 are saved as date objects
-#functions to convert strings to date objects are in crud.py (create / update)
-
-#every document needs a required name field !!!
+        user.delete()
+        logger.info(f"User deleted successfully: {email}")
+        return {'status': 'ok', 'message': 'user deleted'}
+    except Exception as e:
+        logger.error(f"Error deleting user {email}: {str(e)}")
+        return {'status': 'error', 'message': 'Failed to delete user'}
 
-#converts mongo to Json and formats _date properly
-def mongoToJson(document):
-    data = document.to_mongo()
-    
-    # Format all date fields (including audit fields)
-    for key, value in data.items():
-        if key in ['created_date', 'modified_date'] or key.find('_date') != -1:
-            try:
-                data[key] = document[key].strftime('%d.%m.%Y %H:%M')
-            except:
-                pass
-        elif key.find('filter') != -1:
-            try:
-                i = 0
-                for filter in document[key]:
-                    if '_date' in filter['field']:
-                        data[key][i]['value'] = document[key][i]['value'].strftime('%d.%m.%Y')
-                    i += 1
-            except:
-                pass
+def update_password(email, password, new_password):
+    try:
+        user = User.objects(email=email).first()
+        if not user:
+            return {'status': 'error', 'message': 'user does not exist'}
 
-    return json_util.dumps(data)
+        if not check_password_hash(user.pw_hash, password):
+            return {'status': 'error', 'message': 'incorrect password'}
 
-class CustomQuerySet(QuerySet):
-    def to_json(self):
-        return "[%s]" % (",".join([doc.to_json() for doc in self]))
+        user.pw_hash = hash_password(new_password)
+        user.save()
+        logger.info(f"Password updated successfully for user: {email}")
+        return {'status': 'ok', 'message': 'password updated'}
+    except ValidationError as e:
+        logger.error(f"Validation error updating password for {email}: {str(e)}")
+        return {'status': 'error', 'message': 'Invalid password format'}
+    except Exception as e:
+        logger.error(f"Error updating password for {email}: {str(e)}")
+        return {'status': 'error', 'message': 'Failed to update password'}
+```
 
-class Default(DynamicDocument):
-    document_name = StringField(default='')
-    
-def getDefaults(name):
-    defaults = None
-    
-    if name == 'filter':
-        defaults = ['filter', 'filter', 'Filter','Filter', Filter, Filter(), 'filters']
-    elif name == 'user' or name == 'users':
-        defaults = ['user', 'users', 'User','Users', User, User(), 'users']
-    elif name == 'file' or name == 'files':
-        defaults = ['file', 'files', 'File','Files', File, File(), 'files']
-    elif name == 'example' or name == 'examples':
-        defaults = ['example', 'examples', 'Example','Example', Example, Example(), 'examples']
-    elif name == 'model' or name == 'models':
-        defaults = ['model', 'models', 'Model','Models', Model, Model(), 'models']
-    elif name == 'history':
-        defaults = ['history', 'history', 'History','Histories', History, History(), 'history']
-    elif name == 'prompt' or name == 'prompts':
-        defaults = ['prompt', 'prompts', 'Prompt','Prompts', Prompt, Prompt(), 'prompts']
+## helper.py
 
-    if defaults:
-        d = Default()
-        d.document_name = defaults[0]
-        d.document_url = url_for('doc',name = defaults[0])
-        d.collection_name = defaults[1]
-        d.collection_url = url_for('list', collection = defaults[1])
-        d.page_name_document = defaults[2]
-        d.page_name_collection = defaults[3]
-        d.collection_title = defaults[3]
-        d.collection = defaults[4]
-        d.document = defaults[5]
-        d.menu = {defaults[6] : 'open active',defaults[1] : 'open active'}
-        return d
-    else:
-        return None
+```
+#!/usr/bin/env python
+# -*- coding: utf-8 -*-
 
-class User(AuditMixin, DynamicDocument, UserMixin):
-    firstname = StringField()
-    name = StringField()
-    email = StringField(unique=True)
-    pw_hash = StringField()
-    csrf_token = StringField()
-    salutation = StringField()
-    comment = StringField()
-    role = StringField(default='user')
-    meta = {
-        'collection': 'user',
-        'queryset_class': CustomQuerySet
-    }
-    def searchFields(self):
-        return ['email','firstname','name']
-    def fields(self, list_order = False):
-        email = {'name' :  'email', 'label' : 'Email', 'class' : '', 'type' : 'SingleLine', 'required' : True,'full_width':True}
-        salutation = {'name' :  'salutation', 'label' : 'Anrede', 'class' : '', 'type' : 'SimpleListField','full_width':False}
-        firstname = {'name' :  'firstname', 'label' : 'Vorname', 'class' : '', 'type' : 'SingleLine', 'full_width':False}
-        name = {'name' :  'name', 'label' : 'Nachname', 'class' : '', 'type' : 'SingleLine','full_width':False}
-        comment = {'name' :  'comment', 'label' : 'Kommentar', 'class' : '', 'type' : 'MultiLine','full_width':True}
-        role = {'name' :  'role', 'label' : 'Rolle', 'class' : '', 'type' : 'SimpleListField','full_width':False}
-        
-        if list_order != None and list_order == True:
-            #fields in the overview table of the collection
-            return [firstname,name,email,role] if current_user.is_admin else [firstname,name,email]
-            
-        #fields in the form
-        fields = [email,salutation,firstname,name,comment]
-        if current_user.is_admin:
-            fields.append(role)
-        return fields
-    def to_json(self):
-        return mongoToJson(self)
-    def get_id(self):
-        """Return the unique identifier for Flask-Login"""
-        return str(self.id)
+import json,os,csv,base64
+from core.db_helper import searchDocuments, getFile, getDocumentsByID, getFilter, processDocuments, getFilterDict, getDocumentName
+from core.db_crud import getDocument, updateDocument, createDocument, eraseDocument
+from core.db_default import Setting, getDefaultList
+from core.db_document import File, getDefaults
 
-    @property
-    def is_admin(self):
-        """Check if user has admin role"""
-        return self.role == 'admin'
+from pypdf import PdfReader
     
-    def can_view_user(self, user_id):
-        """Check if user has permission to view a specific user profile"""
-        return self.is_admin or str(self.id) == str(user_id)
+import datetime
 
-class File(AuditMixin, DynamicDocument):
-    name = StringField(required=True, min_length=4)
-    owner_id = StringField(required=True)  # Add owner_id field
-    meta = {'queryset_class': CustomQuerySet}
-    
-    def searchFields(self):
-        return ['name']
-    
-    def fields(self, list_order = False):
-        name = {'name': 'name', 'label': 'Name', 'class': '', 'type': 'SingleLine', 'required': True, "full_width": False}
-        category = {'name': 'category', 'label': 'Kategorie', 'class': 'hidden-xs', 'type': 'TextField', "full_width": False}
-        if list_order:
-            return [name, category]
-        return [name, category]
-    
-    def can_access(self, user):
-        """Check if a user can access this file"""
-        return user.is_admin or str(user.id) == str(self.owner_id)
-    
-    def save(self, *args, **kwargs):
-        if not self.owner_id and current_user and current_user.is_authenticated:
-            self.owner_id = str(current_user.id)
-        return super().save(*args, **kwargs)
+from werkzeug.utils import secure_filename
 
-    def to_json(self):
-        return mongoToJson(self)
+from flask_login import current_user
 
-class Filter(AuditMixin, DynamicDocument):
-    name = StringField(required=True,min_length=4)
-    meta = {'queryset_class': CustomQuerySet}
-    def searchFields(self):
-        return ['name']
-    def fields(self, list_order = False):
-        name = {'name' :  'name', 'label' : 'Name', 'class' : '', 'type' : 'SingleLine', 'required' : True}
-        category = {'name' :  'category', 'label' : 'Kategorie', 'class' : '', 'type' : 'SingleLine'}
+import sys
+sys.path.append('core')
+from flask import redirect, url_for, flash
+from bson import ObjectId
 
-        if list_order != None and list_order == True:
-            #fields in the overview table of the collection
-            return [name, category]
-        return [name, category]
-    def to_json(self):
-        return mongoToJson(self)
+UPLOAD_FOLDER = 'temp'
+DOCUMENT_FOLDER = 'documents'
 
-#example of a DynamicDocument with all available fields
-#fields are then used in the form_elements.html to create the form
-#the fields are then used in the db_crud.py to create the document
-class Example(AuditMixin, DynamicDocument):
-    name = StringField(required=True, min_length=1)
-    email = StringField(required=True, min_length=1)
-    salutation = StringField(default='')
-    firstname = StringField(default='')
-    comment = StringField(default='')
-    active = StringField(default='Off')
-    newsletter = StringField(default='Off')
-    event_date = DateField(default=None, null=True)
-    age_int = IntField(default=None, null=True)
-    salary_float = FloatField(default=None, null=True)
-    ai_provider = StringField(default='')
-    user_search = StringField(default='')
-    files = StringField(default='')
-    more_files = StringField(default='')
-    link = StringField(default='')
-    
-    meta = {'queryset_class': CustomQuerySet}
-    
-    #these are the search fields for the search field in the document list overview page
-    def searchFields(self):
-        return ['name', 'email', 'firstname']
-        
-    def fields(self, list_order = False):
-        # Field Types Documentation needs these corrections:
-        
-        # SingleLine: Text input field with 'input' class
-        # MultiLine: Textarea field with 'textarea' class
-        # CheckBox: Switch toggle with 'switch switch-primary' class
-        # SimpleListField: Select dropdown with 'select max-w-sm' class
-        # AdvancedListField: Enhanced select dropdown with 'select max-w-sm' class
-        # Date: Flatpickr date picker with 'input max-w-sm' class (format: DD.MM.YYYY)
-        # IntField: Number input with 'input' class
-        # FloatField: Number input with 'input' class
-        # FileField: File upload with 'input max-w-sm' class
-        # ButtonField: Button with 'btn btn-primary' class
-        # DocumentField: Search field with 'searchField' class and dropdown functionality
+import logging
+current_path = os.path.dirname(os.path.realpath(__file__)) + '/'
+# logging.basicConfig(format='%(asctime)s %(message)s\n\r',filename=current_path+'import_leads.log', level=logging.INFO,filemode='w')
 
-        # Additional Field Properties:
-        # id: Used for element identification (required for all fields)
-        # value: Current field value
-        # value_id: (DocumentField only) ID of selected document
-        # SimpleListField: (SimpleListField only) Array of {value, name} objects
-        # AdvancedListField: (AdvancedListField only) Array of {value, name} objects
 
-        #full_width is used to create a full width field in the form
-        #if full_width is set to True, the field will take up the full width of the form
-        #if full_width is set to False, the field will take up half the width of the form
-        #required is used to make the field required in the form
+from flask import render_template, redirect, url_for, jsonify, flash
 
-        #list of fields for the form
-        #SingleLine is a single line text field (input type text)
-        #MultiLine is a multi line text field (input type textarea)
-        #CheckBox is a checkbox field (input type checkbox, we are using a switch in the frontend)
-        #SimpleListField is a simple list field (input type select)
-        #AdvancedListField is a advanced list field (input type select with search)
-        #DateField is a date field (input type date, this uses Flatpickr and flatpickr.js needs to be included in the frontend)
-        #IntField is a integer field (input type number)
-        #FloatField is a float field (input type number)
-        #FileField is a file field (input type file)
+ALLOWED_EXTENSIONS = set(['txt', 'pdf', 'png', 'jpg', 'jpeg', 'gif','csv','md'])
 
-        name = {'name': 'name', 'label': 'Name', 'class': '', 'type': 'SingleLine', 'required': True, 'full_width': True}
-        email = {'name': 'email', 'label': 'Email', 'class': '', 'type': 'SingleLine', 'required': True, 'full_width': True}
-        salutation = {'name': 'salutation', 'label': 'Anrede', 'class': '', 'type': 'SimpleListField', 'full_width': False}
-        firstname = {'name': 'firstname', 'label': 'Vorname', 'class': '', 'type': 'SingleLine', 'full_width': False}
-        comment = {'name': 'comment', 'label': 'Kommentar', 'class': '', 'type': 'MultiLine', 'full_width': True}
-        active = {'name': 'active', 'label': 'Aktiv', 'class': '', 'type': 'CheckBox', 'full_width': False}
-        newsletter = {'name': 'newsletter', 'label': 'Newsletter', 'class': '', 'type': 'CheckBox', 'full_width': False}
-        event_date = {'name': 'event_date', 'label': 'Event-Datum', 'class': 'hidden-xs', 'type': 'Date', 'full_width': False}
-        age_int = {'name': 'age_int', 'label': 'Alter', 'class': 'hidden-xs', 'type': 'IntField', 'full_width': False}
-        salary_float = {'name': 'salary_float', 'label': 'Gehalt', 'class': 'hidden-xs', 'type': 'FloatField', 'full_width': False}
-        ai_provider = {'name': 'ai_provider', 'label': 'Firma', 'class': 'hidden-xs', 'type': 'AdvancedListField', 'full_width': False}
-        user_search = {'name': 'user_search', 'label': 'User', 'class': '', 'type': 'DocumentField', 'full_width': False, 'module': 'user', 'document_field': 'email'}
-        files = {'name': 'files', 'label': 'Files', 'class': 'hidden-xs', 'type': 'FileField', 'full_width': True}
-        more_files = {'name': 'more_files', 'label': 'More Files', 'class': 'hidden-xs', 'type': 'FileField', 'full_width': True}
-        link = {'name': 'link', 'label': 'Link', 'class': '', 'type': 'ButtonField', 'full_width': False, 'link': '/d/testing'}
+def getRequestData(request):
+    limit = request.args.get('limit')
+    start = request.args.get('start')
+    search = request.args.get('search')
+    id = request.args.get('id')
+    filter = request.args.get('filter')
+    product_name = request.args.get('product_name')
+    offer_id = request.args.get('offer_id')
 
-        #fields in the overview table of the collection
-        if list_order:
-            return [name, email, firstname]
-        #fields in the form
-        return [name, email, salutation, firstname, comment, active, newsletter, event_date, 
-                age_int, salary_float, ai_provider, user_search, files, more_files, link]
+    if product_name == None:
+        product_name=''
+    if search == None:
+        search = ''
+    if filter == None:
+        filter = ''
+    if id == None:
+        id = ''
+    if start == None:
+        start = 0
+    else:
+        start = int(start)
+    if limit == None:
+        limit = 50
+    else:
+        limit = int(limit)
 
-    def to_json(self):
-        return mongoToJson(self)
+    end = start + limit
 
-#AI Documents
-#AI Chat Bot Code
-class Model(AuditMixin, DynamicDocument):
-    provider = StringField(required=True, min_length=1)
-    model = StringField(required=True, min_length=1)
-    name = StringField(required=True, min_length=1)
+    if offer_id == None:
+        offer_id=''
 
-    meta = {'queryset_class': CustomQuerySet}
 
-    def searchFields(self):
-        return ['provider', 'model', 'name']
 
-    def fields(self, list_order=False):
-        provider = {'name': 'provider', 'label': 'Provider', 'class': '', 'type': 'SingleLine', 'required': True, 'full_width': True}
-        model = {'name': 'model', 'label': 'Model', 'class': '', 'type': 'SingleLine', 'required': True, 'full_width': True}
-        name = {'name': 'name', 'label': 'Name', 'class': '', 'type': 'SingleLine', 'required': True, 'full_width': True}
+    return start,limit,end,search, id,filter,product_name,offer_id
+
+def initData():
+    data = []
+    prev = None
+    next = None
+    last = None
+    recordsTotal = 0  # Initialize to 0 instead of None
+
+    return data, prev, next, last, recordsTotal
 
-        if list_order:
-            return [name, provider, model]
-        return [name, provider, model]
+def loadData(mydata):
+    if (mydata['status'] == 'ok'):
+        data = json.loads(mydata['data'])
+        prev = mydata['prev']
+        next = mydata['next']
+        last = mydata['last']
+        start = mydata['start']
+        end = mydata['end']
+        recordsTotal = mydata['recordsTotal']
 
-    def to_json(self):
-        return mongoToJson(self)
+        #pages = mydata['pages']
+        i=0
+        for x in data:
+            data[i]['id'] = x['_id']['$oid']
+            i=i+1
+        return data,start,end,prev,next,recordsTotal,last
+    return None
 
-class History(AuditMixin, DynamicDocument):
-    user_id = StringField(required=True)  # Store user ID instead of username
-    chat_started = IntField()
-    messages = StringField()
-    first_message = StringField()
-    link = StringField(default='')
-    file_ids = ListField(StringField())
+def getList(name, request, filter=None, return_json=False):
+    print(f"[DEBUG] getList called for {name}")
+    default = getDefaults(name)
+    if default == None:
+        print("[DEBUG] No defaults found")
+        return redirect(url_for('index'))
+        
+    # Check if user can list this collection
+    if not default.document.can_list(current_user):
+        print("[DEBUG] User cannot list this collection")
+        flash('Access denied.', 'error')
+        return redirect(url_for('index'))
+        
+    data, prev, next, last, recordsTotal = initData()
+    start,limit,end,search,id,filter_param,product_name,offer_id = getRequestData(request)
     
-    def searchFields(self):
-        return ['messages','first_message']
+    filter_data = getFilter(default.document_name)
+    mode = default.collection_name
     
-    def fields(self, list_order=False):
-        user_id = {'name': 'user_id', 'label': 'User ID', 'class': '', 'type': 'SingleLine', 'required': True, 'full_width': False}
-        chat_started = {'name': 'chat_started', 'label': ' Started', 'class': '', 'type': 'IntField', 'required': True, 'full_width': False}
-        first_message = {'name': 'first_message', 'label': 'First Message', 'class': '', 'type': 'SingleLine', 'required': False, 'full_width': True}
-        messages = {'name': 'messages', 'label': 'Messages', 'class': '', 'type': 'MultiLine', 'required': False, 'full_width': True}
-        link = {'name': 'link', 'label': 'Chat', 'class': '', 'type': 'ButtonField', 'full_width': False, 'link': '/chat/history'}
-        if list_order:
-            return [link, first_message]
-        return [user_id, first_message, chat_started, messages, link]
+    # Get access control filter for this document type
+    access_filter = default.document.get_list_filter(current_user)
+    print(f"[DEBUG] Access filter: {access_filter}")
     
-    def can_view(self, user):
-        """Check if a user can view this history"""
-        return user.is_admin or str(user.id) == str(self.user_id)
+    # Combine all filters
+    combined_filter = {}
+    if access_filter:
+        combined_filter.update(access_filter)
+    if filter:
+        combined_filter.update(filter)
+    if filter_param:
+        filter_dict = getFilterDict(filter_param)
+        combined_filter.update(filter_dict)
+    
+    print(f"[DEBUG] Combined filter: {combined_filter}")
 
-class Prompt(AuditMixin, DynamicDocument):
-    name = StringField(required=True, min_length=1)
-    welcome_message = StringField(required=True, min_length=1)
-    system_message = StringField(required=True, min_length=1)
-    prompt = StringField(required=True, min_length=1)
-    link = StringField(default='')
-    files = StringField(default='')
+    # Process the search query with combined filters
+    # Pass empty dict if no filter to avoid "no filter found" error
+    filter_to_use = combined_filter if combined_filter else {}
+    mydata = searchDocuments(default.collection, default.document.searchFields(), 
+                           start, limit, search, filter_to_use, product_name, mode)
+    print(f"[DEBUG] Search results: {mydata}")
 
-    meta = {'queryset_class': CustomQuerySet}
+    processedData = loadData(mydata)
+    if processedData:
+        data, start, end, prev, next, recordsTotal, last = processedData
+        print(f"[DEBUG] Found {recordsTotal} records")
+        recordsTotal = int(recordsTotal) if recordsTotal is not None else 0
+        if return_json:
+            return jsonify({
+                'status': 'ok',
+                'message': 'success',
+                'data': data,
+                'recordsTotal': recordsTotal,
+                'prev': prev,
+                'next': next,
+                'last': last,
+                'start': start,
+                'end': end
+            })
 
-    def searchFields(self):
-        return ['name', 'system_message', 'prompt']
+    table_header = default.document.fields(list_order = True)
+    table_content = tableContent(data, table_header)
 
-    def fields(self, list_order=False):
-        name = {'name': 'name', 'label': 'Name', 'class': '', 'type': 'SingleLine', 'required': True, 'full_width': True}
-        welcome_message = {'name': 'welcome_message', 'label': 'Welcome Message', 'class': '', 'type': 'MultiLine', 'required': True, 'full_width': True}
-        system_message = {'name': 'system_message', 'label': 'System Message', 'class': '', 'type': 'MultiLine', 'required': True, 'full_width': True}
-        prompt = {'name': 'prompt', 'label': 'Prompt', 'class': '', 'type': 'MultiLine', 'required': True, 'full_width': True}
-        link = {'name' :  'link', 'label' : 'Use Prompt', 'class' : '', 'type' : 'ButtonField','full_width':False,'link':'/chat/prompt'}
-        files = {'name' :  'files', 'label' : 'Files', 'class' : 'hidden-xs', 'type' : 'FileField','full_width':True}
+    try:
+        table = request.args.get('table')
+        if table:
+            return render_template('/base/collection/table.html',
+                                 menu=default.menu,
+                                 documents=data,
+                                 prev=prev,
+                                 next=next,
+                                 limit=limit,
+                                 start=start,
+                                 total=recordsTotal,
+                                 end=end,
+                                 search=search,
+                                 id=id,
+                                 offer_id=offer_id,
+                                 last=last,
+                                 page_name_collection=default.page_name_collection,
+                                 collection_name=default.collection_name,
+                                 collection_url=default.collection_url,
+                                 document_url=default.document_url,
+                                 mode=mode,
+                                 table_header=table_header,
+                                 table_content=table_content,
+                                 filter=filter_param,
+                                 filter_data=filter_data,
+                                 show_new_button=True,
+                                 product_name=product_name)
+    except:
+        pass
 
-        if list_order:
-            return [link,name,prompt]
-        return [name,welcome_message, system_message, prompt,files,link]
+    return render_template('/base/collection/collection.html',
+                         menu=default.menu,
+                         documents=data,
+                         prev=prev,
+                         next=next,
+                         limit=limit,
+                         start=start,
+                         total=recordsTotal,
+                         end=end,
+                         search=search,
+                         id=id,
+                         offer_id=offer_id,
+                         last=last,
+                         page_name_collection=default.page_name_collection,
+                         collection_name=default.collection_name,
+                         collection_url=default.collection_url,
+                         document_url=default.document_url,
+                         mode=mode,
+                         table_header=table_header,
+                         table_content=table_content,
+                         filter=filter_param,
+                         filter_data=filter_data,
+                         show_new_button=True,
+                         product_name=product_name)
 
-    def to_json(self):
-        return mongoToJson(self)
-```
+def handleDocument(name, id, request, return_json=False):
+    try:
+        default = getDefaults(name)
+        if default is None:
+            flash('Invalid document type', 'error')
+            return redirect(url_for('index'))
 
-## db_connect.py
+        # For existing documents, verify access
+        if id:
+            doc = default.collection.objects(_id=ObjectId(id)).first()
+            if not doc or not doc.can_access(current_user):
+                flash('Access denied.', 'error')
+                return redirect(url_for('list', collection=default.collection_name))
 
-```
-#!/usr/bin/env python
-# -*- coding: utf-8 -*-
-import os
-from mongoengine import *
-from dotenv import load_dotenv
-import certifi
+        # For new documents
+        else:
+            # Check if user can list (create new) documents of this type
+            if not default.document.can_list(current_user):
+                flash('Access denied.', 'error')
+                return redirect(url_for('index'))
+                
+            # Set user_id for new documents if they use it
+            if request.method == 'POST' and hasattr(default.document, 'user_id'):
+                form_data = htmlFormToDict(request.form)
+                form_data['user_id'] = str(current_user.id)
+                request.form = form_data
 
-# Load environment variables from .env file
-load_dotenv()
+        print(f"[DEBUG] Got defaults: document_name={default.document_name}, collection_name={default.collection_name}")
+        mode = default.document_name
 
-# Retrieve your MongoDB password from an environment variable
-mongodb_pwd = os.getenv('MONGODB_PWD')
-mongodb_user = os.getenv('MONGODB_USER')
+        # Initialize empty document data for new documents
+        data = {}
+        if not id:
+            print("[DEBUG] Creating new document")
+            try:
+                # Get the document instance that was already created in getDefaults
+                doc = default.document
+                if doc is None:
+                    raise Exception("Failed to get document instance")
+                data = json.loads(doc.to_json())
+                data['id'] = ''  # Empty ID for new document
+                # Set user_id for new history documents
+                if name == 'history':
+                    data['user_id'] = str(current_user.id)
+            except Exception as e:
+                print(f"[DEBUG] Error initializing new document: {str(e)}")
+                flash('Error creating new document', 'error')
+                return redirect(url_for('index'))
 
-# Your MongoDB URI
-mongodb_uri = f"mongodb+srv://{mongodb_user}:{mongodb_pwd}@cluster0.3sguoku.mongodb.net/flyon?retryWrites=true&w=majority&appName=Cluster0"
+        page = {
+            'title': f"{'Add' if not id else 'Edit'} {default.page_name_document}",
+            'collection_title': default.collection_title,
+            'document_name': default.document_name,
+            'document_url': default.document_url,
+            'collection_url': default.collection_url,
+            'document_title': default.page_name_document
+        }
+        
+        form_data = htmlFormToDict(request.form)
+        print(f"[DEBUG] Form data: {form_data}")
+        category_fields = []
 
-# Connect to your MongoDB database with SSL certificate verification
-connect(host=mongodb_uri, tlsCAFile=certifi.where())
+        if name=='filter':
+            form_data = prepFilterData(form_data)
 
-# class User(DynamicDocument):
-#   user_name = StringField()
-#   email = StringField(required=True)
+        if request.method == 'POST':
+            print("[DEBUG] Processing POST request")
+            if (form_data.get('id') and form_data['id'] not in ['', 'None', None]):
+                print(f'[DEBUG] Updating Document with ID: {form_data["id"]}')
+                data = updateDocument(form_data, default.document, default.collection)
+            else:
+                print('[DEBUG] Creating new Document')
+                data = createDocument(form_data, default.document, request)
 
-# user = User(user_name="John Doe", email="mynbi@example.com")
+            if (data['status'] == 'ok'):
+                data = json.loads(data['data'])
+                data['id'] = data['_id']['$oid']
+                file_status = upload_files(request, default.collection_name, data['id'])
+                print(f"[DEBUG] File status: {file_status}")
+                if return_json:
+                    return json.dumps(data)
+                return redirect(url_for('doc', name=default.document_name) + '/' + data['id'])
+            else:
+                print(f"[DEBUG] Error in POST: {data.get('message', 'Unknown error')}")
+                return json.dumps(data)
 
-# user.save()
-```
+        elif request.method == 'GET':
+            print(f"[DEBUG] Processing GET request with id={id}")
+            if id:
+                print(f'[DEBUG] Getting Document with ID: {id}')
+                data = getDocument(id, default.document, default.collection)
+                print(f"[DEBUG] getDocument result: {data}")
+                if (data['status'] == 'ok'):
+                    page = {'title': 'Edit ' + default.page_name_document, 'collection_title': default.collection_title, 'document_name': default.document_name, 'document_url': default.document_url, 'collection_url': default.collection_url, 'document_title': default.page_name_document}
+                    data = json.loads(data['data'])
+                    data['id'] = data['_id']['$oid']
+                    
+                    files = json.loads(File.objects(document_id=data['id']).to_json())
+                    print(f"[DEBUG] Found files: {files}")
+                    for file in files:
+                        if not data.get(file['element_id']):
+                            data[file['element_id']] = []
+                        file['id'] = file['_id']['$oid']
+                        file.pop('_id', None)
+                        data[file['element_id']].append(file)
+                    
+                    if return_json:
+                        return json.dumps(data)
 
-## db_date.py
+                    if 'category' in data and name == 'filter':
+                        category_fields = getFields(data['category'])
+                else:
+                    print(f"[DEBUG] Error getting document: {data.get('message', 'Unknown error')}")
+                    print(f"[DEBUG] Redirecting to list with name={default.collection_name}")
+                    return redirect(url_for('list', collection=default.collection_name))
 
-```
-#!/usr/bin/env python
-# -*- coding: utf-8 -*-
-import sys, datetime
+        print("[DEBUG] Getting elements")
+        elements = getElements(data, default.document)
+        #print(f"[DEBUG] Elements: {elements}")
+        return render_template('/base/document/form.html', elements=elements, menu=default.menu, page=page, document=data, mode=mode, category_fields=category_fields)
+    except Exception as e:
+        print(f"[DEBUG] Error in handleDocument: {str(e)}")
+        flash('An error occurred while processing your request', 'error')
+        return redirect(url_for('index'))
+
+def deleteDocument(request):
+    type = request.args.get('type')
+    id = request.args.get('id')
+    print(f"[DEBUG] deleteDocument called with type={type}, id={id}")
+    
+    if not id:
+        print("[DEBUG] No ID provided")
+        return {'status': 'error', 'message': 'no id'}
+        
+    # Special handling for file deletions
+    if type == 'files':
+        print(f"[DEBUG] Handling file deletion for id={id}")
+        data = eraseDocument(id, File, File)
+        print(f"[DEBUG] File deletion result: {data}")
+    else:
+        print(f"[DEBUG] Handling document deletion for type={type}, id={id}")
+        default = getDefaults(type)
+        if default == []:
+            print(f"[DEBUG] No defaults found for type={type}")
+            return {'status': 'error', 'message': 'no document found'}
+        data = eraseDocument(id, default.document, default.collection)
+        print(f"[DEBUG] Document deletion result: {data}")
+        
+    if data['status'] == 'ok':
+        print("[DEBUG] Deletion successful")
+        return {'status': 'ok', 'message': 'document deleted'}
+    else:
+        print(f"[DEBUG] Deletion failed: {data.get('message', 'unknown error')}")
+        return {'status': 'error', 'message': data.get('message', 'document not deleted')}
 
-#dont write pyc files!
-sys.dont_write_bytecode = True
+def tableContent(documents, table_header):
+    print(f"[DEBUG] Creating table content for {len(documents)} documents")
+    tableContent = []
 
-#returns isoDates
-class dbDates():
-    now = datetime.datetime.now()
-    #print now.weekday()
-    today = datetime.datetime(now.year,now.month,now.day)
-    def firstDayThisMonth(self):
-        date = self.today.replace(day=1)
-        return date
-    def firstDayLastMonth(self):
-        date = self.today.replace(day=1,month=self.now.month-1)
-        return date
-    def firstDayNextMonth(self):
-        date = self.today.replace(month=self.now.month+1, day=1)
-        return date
-    def firstDayThisYear(self):
-        date = self.today.replace(month=1,day=1)
-        return date
-    def firstDayNextYear(self):
-        date = self.today.replace(year=self.now.year+1,month=1,day=1)
-        return date
-    def thisYear(self):
-        return {'$gte': self.firstDayThisYear(), '$lt': self.firstDayNextYear()}
-    def thisMonth(self):
-        return {'$gte': self.firstDayThisMonth(), '$lt': self.firstDayNextMonth()}
-    def lastMonth(self):
-        return {'$gte': self.firstDayLastMonth(), '$lt': self.firstDayThisMonth()}
-    def thisWeek(self):
-        start = self.today - datetime.timedelta(days=self.today.weekday())
-        end = start + datetime.timedelta(days=7)
-        return {'$gte': start, '$lt': end}
-    def thisDay(self):
-        return self.today
-    def yesterDay(self):
-        return self.today - datetime.timedelta(days=1)
-    def tomorrow(self):
-        return self.today + datetime.timedelta(days=1)
-```
+    for document in documents:
+        print(f"[DEBUG] Processing document: {document}")
+        tableRow = []
+        for field in table_header:
+            if field['name'] in document.keys() and 'id' in document.keys():
+                value = document[field['name']]
+                
+                # Handle date fields
+                if field['name'].find('_date') != -1:
+                    if isinstance(value, dict) and '$date' in value:
+                        date = value['$date']
+                        value = datetime.datetime.fromtimestamp(date/1000).strftime('%d.%m.%Y')
+                
+                # Handle link fields for history
+                if field['type'] == 'ButtonField' and field.get('link') == '/chat/history':
+                    link = f"{field['link']}/{document['id']}"
+                    tableRow.append({
+                        'name': field['name'],
+                        'value': value,
+                        'class': field['class'],
+                        'id': document['id'],
+                        'type': field['type'],
+                        'link': link,
+                        'label': field['label']
+                    })
+                else:
+                    tableRow.append({
+                        'name': field['name'],
+                        'value': value,
+                        'class': field['class'],
+                        'id': document['id'],
+                        'type': field['type'],
+                        'label': field.get('label', field['name'])
+                    })
+            else:
+                print(f"[DEBUG] Field {field['name']} not found in document or no id")
+                tableRow.append('')
+        
+        if tableRow:  # Only add rows that have content
+            tableContent.append(tableRow)
+            
+    print(f"[DEBUG] Created {len(tableContent)} table rows")
+    return tableContent
 
-## db_crud.py
+def getElements(data, document):
+    elements=[]
+    fields = document.fields()
+    for field in fields:
+        if not 'required' in field:
+            required = False
+        else:
+            required = True
+        if field['type'] == 'SimpleDocumentField':
+            elements.append({'type' : getDefaultList(field['name'], Category, 'SimpleDocumentField'), 'name' : field['name'], 'value' : '', 'id' : field['name'], 'label' : field['label'], 'required' : required,'full_width':field['full_width']})
+        elif field['type'] == 'SimpleListField':
+            elements.append({'type' : 'SimpleListField', 'SimpleListField':getDefaultList(field['name'], Setting, 'SimpleListField'), 'name' : field['name'], 'value' : '', 'id' : field['name'], 'label' : field['label'], 'required' : required,'full_width':field['full_width']})
+        elif field['type'] == 'AdvancedListField':
+            elements.append({'type' : 'AdvancedListField','AdvancedListField': getDefaultList(field['name'], Setting, 'AdvancedListField'), 'name' : field['name'], 'value' : '', 'id' : field['name'], 'label' : field['label'], 'required' : required,'full_width':field['full_width']})
+        elif field['type'] == 'DocumentField':
+            elements.append({'type' : 'DocumentField', 'name' : field['name'], 'value' : '' , 'id' : field['name'], 'label' : field['label'], 'required' : required,'full_width':field['full_width'],'module':field['module'],'document_field':field['document_field']})
+        elif field['type'] == 'EditorField':
+            elements.append({'type' : 'EditorField', 'name' : field['name'], 'value' : '' , 'id' : field['name'], 'label' : field['label'], 'required' : required,'full_width':field['full_width']})
 
-```
-#!/usr/bin/env python
-# -*- coding: utf-8 -*-
-import sys
-sys.path.append('core')
-from core.db_document import File, Prompt
-from core.db_connect import *
-import os
+        elif field['type'] == 'DateInfo':
+            pass
+        elif field['type'] == 'CheckBox':
+            elements.append({'type' : field['type'], 'name' : field['name'], 'value' : 0, 'id' : field['name'], 'label' : field['label'], 'required' : required,'full_width':field['full_width']})
+        elif field['type'] == 'ButtonField':
+            elements.append({'type': field['type'], 'name' : field['name'], 'value' : '', 'id' : field['name'], 'label' : field['label'], 'required' : required,'full_width':field['full_width'],'link':field['link']})
+        else:
+            elements.append({'type': field['type'], 'name' : field['name'], 'value' : '', 'id' : field['name'], 'label' : field['label'], 'required' : required,'full_width':field['full_width']})
 
-import json,datetime
-from flask import session
-from flask_login import current_user
+    return fillElements(elements,data)
 
-from db_default import getCounter
-from bson import ObjectId
+def fillElements(elements, data):
+    # Check if data is empty or None
+    if not data or not isinstance(data, dict):
+        return elements
+        
+    for element in elements:
+        if element['name'] in data:
+            element['value'] = data[element['name']]
+            if element['type'] == 'DocumentField':
+                id = data.get(f"{element['name']}_id", '')  # Get ID with fallback to empty string
+                if id and id != '0815':
+                    element['value'] = getDocumentName(data[element['name']], element['module'], element['document_field'])
+                    element['document_id'] = id
+                    element['url'] = url_for('doc', name=element['module'], id=id)
+                else:
+                    element['value'] = ''
 
-def createDocument(form_data, document, request=None):
-    print(f"[DEBUG] Starting createDocument with form_data keys: {form_data.keys()}")
-    # Remove csrf_token before processing
-    form_data = {k: v for k, v in form_data.items() if k != 'csrf_token'}
+    return elements
     
-    try:
-        # Initialize document with default values if it's a new document
-        if isinstance(document, type):
-            document = document()
+def htmlFormToDict(form_data):
+    if not form_data:
+        return {}
         
-        # Handle counter if needed
-        try:
-            counter_name = document.getCounterName()
-            counter = getCounter(counter_name)
-            document[counter_name] = counter
-        except Exception as e:
-            print(f"[DEBUG] Counter error: {str(e)}")
+    try:
+        # Handle ImmutableMultiDict from Flask
+        if hasattr(form_data, 'getlist'):
+            return {key: form_data.getlist(key)[0] for key in form_data.keys()}
+        # Handle regular dict
+        elif isinstance(form_data, dict):
+            return form_data
+        # Handle list of dicts with name/value pairs
+        elif isinstance(form_data, list):
+            return {item['name']: item['value'] for item in form_data if 'name' in item and 'value' in item}
+        else:
+            print(f"[DEBUG] Unexpected form_data type: {type(form_data)}")
+            return {}
+    except Exception as e:
+        print(f"[DEBUG] Error in htmlFormToDict: {str(e)}")
+        return {}
+def allowed_file(filename):
+    return '.' in filename and \
+           filename.rsplit('.', 1)[1] in ALLOWED_EXTENSIONS
 
-        # Process all non-file fields
-        for key in form_data.keys():
-            if key.startswith('files_'):
-                continue
-                
-            if form_data[key] is None or (isinstance(form_data[key], list) and not form_data[key]):
-                continue
 
-            if key.endswith('_hidden'):
-                base_key = key.replace('_hidden', '')
-                if form_data[key]:
-                    document[f"{base_key}_id"] = form_data[key]
-                continue
+def upload_files(request, category='', document_id=''):
+    status = {'status': 'ok', 'files': []}
 
-            if form_data[key] == '':
-                continue
+    if request.method == 'POST':
+        # Get base path for consistent path handling
+        base_path = os.path.dirname(os.path.dirname(os.path.realpath(__file__)))
+        
+        # Extract element IDs directly from the file input names
+        element_ids = [key.split('files_', 1)[1] for key in request.files.keys()]
 
-            if '_date' in key:
-                try:
-                    document[key] = datetime.datetime.strptime(form_data[key], "%d.%m.%Y") if form_data[key] else None
-                except ValueError as e:
-                    return {'status': 'error', 'message': f'Invalid date format for field {key}'}
-            elif '_int' in key:
-                try:
-                    document[key] = int(form_data[key]) if form_data[key] else None
-                except ValueError:
-                    return {'status': 'error', 'message': f'Invalid integer value for field {key}'}
-            elif '_float' in key:
-                try:
-                    document[key] = float(form_data[key]) if form_data[key] else None
-                except ValueError:
-                    return {'status': 'error', 'message': f'Invalid float value for field {key}'}
-            elif key != 'id':
-                document[key] = form_data[key]
+        for element_id in element_ids:
+            status[element_id] = []  # Initialize list for this element_id
+            files = request.files.getlist(f'files_{element_id}')
+            if not files or files[0].filename == '':
+                continue  # Skip if no files are selected
 
-        # Save document
-        try:
-            document.save()
-            return {'status': 'ok', 'message': '', 'data': document.to_json()}
-            
-        except ValidationError as e:
-            print(f"[DEBUG] Validation error: {str(e)}")
-            return {'status': 'error', 'message': f'validation error: {str(e)}', 'data': document.to_json()}
-        except Exception as e:
-            print(f"[DEBUG] Save error: {str(e)}")
-            return {'status': 'error', 'message': f'document not created: {str(e)}'}
+            for file in files:
+                if file and allowed_file(file.filename):
+                    filename = secure_filename(file.filename)
+                    try:
+                        # Use consistent path structure
+                        relative_path = os.path.join('core', 'documents', category) if category else os.path.join('core', UPLOAD_FOLDER)
+                        absolute_path = os.path.join(base_path, relative_path)
+                        
+                        print(f"[DEBUG] Upload path (absolute): {absolute_path}")
+                        print(f"[DEBUG] Upload path (relative): {relative_path}")
 
-    except Exception as e:
-        print(f"[DEBUG] Error in createDocument: {str(e)}")
-        return {'status': 'error', 'message': f'Error creating document: {str(e)}'}
+                        if not os.path.exists(absolute_path):
+                            print(f"[DEBUG] Creating directory: {absolute_path}")
+                            os.makedirs(absolute_path)
+
+                        file_type = filename.rsplit('.', 1)[1]
+                        fileDB = File(
+                            name=filename, 
+                            path=relative_path,  # Store relative path
+                            category=category, 
+                            file_type=file_type, 
+                            document_id=document_id, 
+                            element_id=element_id,
+                            user_id=str(current_user.id)  # Set the user_id to current user's ID
+                        )
+                        fileDB.save()
+                        fileID = getDocumentID(fileDB)
 
-def updateDocument(form_data, document, collection):
-    # Remove csrf_token before processing
-    form_data = {k: v for k, v in form_data.items() if k != 'csrf_token'}
-    
-    try:
-        print(f"[DEBUG] Updating document with id={form_data['id']}")
-        object_id = ObjectId(form_data['id'])
-        document = collection.objects(_id=object_id).first()
-        
-        if document is None:
-            return {'status': 'error', 'message': 'document not found'}
+                        file_save_path = os.path.join(absolute_path, f"{fileID}.{file_type}")
+                        print(f"[DEBUG] Saving file to: {file_save_path}")
+                        file.save(file_save_path)
 
-        for key in form_data.keys():
-            if key == 'id':  # Skip id field
-                continue
+                        status[element_id].append({
+                            'id': fileID, 
+                            'name': filename, 
+                            'path': os.path.join(relative_path, f"{fileID}.{file_type}")
+                        })
 
-            # Handle document search fields
-            if key.endswith('_hidden'):
-                base_key = key.replace('_hidden', '')
-                if '_search' in base_key:
-                    # Clear both the search field and its ID if hidden field is empty
-                    if not form_data[key]:
-                        document[base_key] = ''
-                        document[f"{base_key}_id"] = ''
-                    else:
-                        document[f"{base_key}_id"] = form_data[key]
+                    except Exception as e:
+                        status = {'status': 'error', 'message': f'Error while saving File! / {str(e)}'}
+                        return json.dumps(status)
                 else:
-                    if base_key in form_data:
-                        document[base_key] = form_data[base_key]  # Will be "On" if checked
-                    else:
-                        document[base_key] = "Off"  # Default to Off if unchecked
-                continue
+                    status = {'status': 'error', 'message': 'Filetype not allowed!'}
+                    return json.dumps(status)
 
-            # Handle different field types
-            if '_date' in key:
-                try:
-                    document[key] = datetime.datetime.strptime(form_data[key], "%d.%m.%Y") if form_data[key] else None
-                except:
-                    return {'status': 'error', 'message': 'error preparing form date field'}
-            elif '_int' in key:
-                document[key] = int(form_data[key]) if form_data[key] else None
-            elif '_float' in key:
-                document[key] = float(form_data[key].replace(',','.')) if form_data[key] else None
-            else:
-                document[key] = form_data[key]
+    return json.dumps(status)
 
-        # Save document
+def getDocumentID(document):
+    document = json.loads(document.to_json())
+    id = document['_id']['$oid']
+    return id
+
+def prepFilterData(form_data):
+    fields = []
+    db_fields = []
+    i=0
+    for key in form_data:
+        if 'field_' in key:
+            fieldNumber = key.split('_')[1]
+            fields.append(fieldNumber)
+    for fieldNumber in fields:
         try:
-            document.save()
-            return {'status': 'ok', 'message': '', 'data': document.to_json()}
-        except ValidationError as e:
-            print(f"Validation error: {str(e)}")
-            return {'status': 'error', 'message': f'validation error: {str(e)}', 'data': document.to_json()}
-        except Exception as e:
-            print(f"Error saving document: {str(e)}")
-            return {'status': 'error', 'message': f'error saving document: {str(e)}'}
-            
-    except Exception as e:
-        print(f"[DEBUG] Error in updateDocument: {str(e)}")
-        return {'status': 'error', 'message': f'Error updating document: {str(e)}'}
+            value = form_data['value_' + str(fieldNumber)]
+            del(form_data['value_' + str(fieldNumber)])
+        except:
+            value = form_data['date_value_' + str(fieldNumber)]
+            value = datetime.datetime.strptime(value, "%d.%m.%Y")
+            del(form_data['date_value_' + str(fieldNumber)])
+
+        operator = form_data['operator_' + str(fieldNumber)]
+        field = form_data['field_' + str(fieldNumber)]
+        db_fields.append({'field' : field,'operator':operator,'value':value,'nr':str(i)})
+
+        del(form_data['field_' + str(fieldNumber)])
+        del(form_data['operator_' + str(fieldNumber)])
+        i=i+1
+
+    form_data['filter'] = db_fields
+    return form_data
+
+#only pdf/txt files are supported for now
+def prepare_context_from_files(files):
+    result = {
+        "status": "error",
+        "data": "",
+        "character_count": 0
+    }
+    
+    print(f"[DEBUG] prepare_context_from_files called with {len(files)} files")
+    
+    if not files:
+        print("[DEBUG] No files provided")
+        result["status"] = "error"
+        result["data"] = "No files provided"
+        return result
 
-def eraseDocument(id, document, collection):
     try:
-        print(f"[DEBUG] eraseDocument called with id={id}, collection={collection.__name__}")
-        object_id = ObjectId(id)
-        document = collection.objects(_id=object_id).first()
+        combined_text = []
+        base_path = os.path.dirname(os.path.dirname(os.path.realpath(__file__)))
+        print(f"[DEBUG] Base path for file reading: {base_path}")
         
-        if document is not None:
-            print(f"[DEBUG] Found document to delete: {document.to_json()}")
-            
-            # Get base path for constructing absolute paths
-            base_path = os.path.dirname(os.path.dirname(os.path.realpath(__file__)))
-            print(f"[DEBUG] Base path: {base_path}")
-            
-            # Handle file deletion for both File collection and associated files
-            if collection == File:
-                # Check if user has permission to delete this file
-                if not document.can_access(current_user):
-                    print(f"[DEBUG] Access denied for file deletion: {id}")
-                    return {'status': 'error', 'message': 'Access denied. You can only delete your own files.'}
-                
-                # Check if file is used by any prompt
-                prompts_using_file = Prompt.objects(document_id=str(id))
-                if prompts_using_file:
-                    print(f"[DEBUG] File {id} is used by prompts, cannot delete")
-                    return {'status': 'error', 'message': 'File is used by one or more prompts and cannot be deleted'}
-                    
-                # Direct file document deletion
-                try:
-                    # Use the same path construction as upload_files
-                    file_path = os.path.join(base_path, document.path, f"{id}.{document.file_type}")
-                    print(f"[DEBUG] Attempting to delete file at: {file_path}")
-                    print(f"[DEBUG] File exists: {os.path.exists(file_path)}")
-                    
-                    if os.path.exists(file_path):
-                        os.remove(file_path)
-                        print(f"[DEBUG] Successfully deleted file: {file_path}")
-                    else:
-                        print(f'[DEBUG] Physical file not found at: {file_path}')
-                except Exception as e:
-                    print(f'[DEBUG] Error deleting physical file: {str(e)}')
-                    return {'status': 'error', 'message': f'Error deleting physical file: {str(e)}'}
-                
-                try:
-                    document.delete()
-                    print(f"[DEBUG] Successfully deleted file document from database")
-                    return {'status': 'ok', 'message': 'deleted'}
-                except Exception as e:
-                    print(f'[DEBUG] Error deleting file document: {str(e)}')
-                    return {'status': 'error', 'message': f'Error deleting file document: {str(e)}'}
-            else:
-                # For non-File collections, handle associated files
-                file_ids = []
+        for file in files:
+            try:
+                print(f"[DEBUG] Processing file: {file.get('name', 'Unknown')}")
+                # Convert MongoDB document to dict if needed
+                if hasattr(file, 'to_mongo'):
+                    file = file.to_mongo().to_dict()
+                    print("[DEBUG] Converted MongoDB document to dict")
                 
-                # Check for files linked by document_id
-                associated_files = File.objects(document_id=str(id))
-                file_ids.extend([str(f.id) for f in associated_files])
+                # Get file ID consistently
+                if isinstance(file.get('_id'), dict) and '$oid' in file['_id']:
+                    file_id = file['_id']['$oid']
+                elif isinstance(file.get('_id'), str):
+                    file_id = file['_id']
+                else:
+                    file_id = str(file['_id'])
+                print(f"[DEBUG] File ID: {file_id}")
                 
-                # Check for files in file_ids array (used by History documents)
-                if hasattr(document, 'file_ids') and document.file_ids:
-                    file_ids.extend(document.file_ids)
+                # Build full file path
+                file_path = os.path.join(base_path, file['path'], f"{file_id}.{file['file_type'].lower()}")
+                print(f"[DEBUG] Full file path: {file_path}")
                 
-                # Remove duplicates
-                file_ids = list(set(file_ids))
-                print(f"[DEBUG] Found {len(file_ids)} associated files")
-                print(f"[DEBUG] File IDs to process: {file_ids}")
+                if not os.path.exists(file_path):
+                    print(f"[DEBUG] File not found at path: {file_path}")
+                    continue
                 
-                deleted_files = []
-                failed_files = []
+                print(f"[DEBUG] Reading file: {file['name']}")
+                file_content = f"\nContent of File: {file['name']}\n{'='*50}\n"
                 
-                for file_id in file_ids:
+                if file['file_type'].lower() == 'pdf':
                     try:
-                        print(f"[DEBUG] Processing associated file: {file_id}")
-                        file_doc = File.objects(id=file_id).first()
-                        if not file_doc:
-                            print(f"[DEBUG] File document not found: {file_id}")
-                            failed_files.append(file_id)
-                            continue
-                            
-                        # Check if file is used by any prompt
-                        prompts_using_file = Prompt.objects(document_id=str(file_id))
-                        if prompts_using_file:
-                            print(f"[DEBUG] File {file_id} is used by prompts, skipping")
-                            failed_files.append(file_id)
-                            continue
-                        
-                        # Check if user has permission to delete this file
-                        if not file_doc.can_access(current_user):
-                            print(f"[DEBUG] Access denied for associated file deletion: {file_id}")
-                            failed_files.append(file_id)
-                            continue
-                            
-                        # Delete physical file
-                        # Use the same path construction as upload_files
-                        file_path = os.path.join(base_path, file_doc.path, f"{file_id}.{file_doc.file_type}")
-                        print(f"[DEBUG] Attempting to delete associated file at: {file_path}")
-                        print(f"[DEBUG] File exists: {os.path.exists(file_path)}")
-                        
-                        if os.path.exists(file_path):
-                            os.remove(file_path)
-                            print(f"[DEBUG] Successfully deleted associated file: {file_path}")
-                        else:
-                            print(f'[DEBUG] Physical file not found at: {file_path}')
+                        with open(file_path, 'rb') as pdf_file:
+                            pdf_reader = PdfReader(pdf_file)
+                            print(f"[DEBUG] PDF has {len(pdf_reader.pages)} pages")
+                            for page_num in range(len(pdf_reader.pages)):
+                                page = pdf_reader.pages[page_num]
+                                text = page.extract_text()
+                                if text:
+                                    print(f"[DEBUG] Extracted text from page {page_num + 1}")
+                                    text = ' '.join(text.split())
+                                    text = text.replace(' .', '.').replace(' ,', ',')
+                                    paragraphs = text.split('\n')
+                                    formatted_text = '\n\n'.join(p.strip() for p in paragraphs if p.strip())
+                                    file_content += formatted_text + "\n\n"
+                                else:
+                                    print(f"[DEBUG] No text found on page {page_num + 1}")
+                                    file_content += "[No text found on this page]\n\n"
+                    except Exception as e:
+                        print(f"[DEBUG] Error reading PDF {file['name']}: {str(e)}")
+                        continue
                         
-                        # Delete file document
-                        file_doc.delete()
-                        deleted_files.append(file_id)
-                        print(f"[DEBUG] Successfully deleted associated file document: {file_id}")
+                elif file['file_type'].lower() == 'txt':
+                    try:
+                        with open(file_path, 'r', encoding='utf-8') as txt_file:
+                            text = txt_file.read()
+                            print(f"[DEBUG] Read {len(text)} characters from text file")
+                            file_content += text
                     except Exception as e:
-                        print(f'[DEBUG] Error deleting associated file {file_id}: {str(e)}')
-                        failed_files.append(file_id)
+                        print(f"[DEBUG] Error reading TXT {file['name']}: {str(e)}")
+                        continue
+                        
+                file_content += f"\n{'='*50}\n"
+                print(f"[DEBUG] Added {len(file_content)} characters of content")
+                combined_text.append(file_content)
                 
-                try:
-                    document.delete()
-                    status_msg = 'deleted'
-                    if failed_files:
-                        status_msg += f' (some associated files could not be deleted: {", ".join(map(str, failed_files))})'
-                    print(f"[DEBUG] Successfully deleted main document with status: {status_msg}")
-                    return {'status': 'ok', 'message': status_msg}
-                except Exception as e:
-                    print(f'[DEBUG] Error deleting main document: {str(e)}')
-                    return {'status': 'error', 'message': f'Error deleting document: {str(e)}'}
+            except Exception as e:
+                print(f"[DEBUG] Error processing file: {str(e)}")
+                continue
+            
+        if combined_text:
+            result["status"] = "ok"
+            result["data"] = "\n".join(combined_text)
+            result["character_count"] = len(result["data"])
+            print(f"[DEBUG] Successfully combined {len(combined_text)} files with total {result['character_count']} characters")
         else:
-            print(f"[DEBUG] No document found with id={id}")
-            return {'status': 'error', 'message': 'document not found'}
+            print("[DEBUG] No content could be extracted from files")
+            result["status"] = "error"
+            result["data"] = "No content could be extracted from files"
+            
     except Exception as e:
-        print(f"[DEBUG] Error in eraseDocument: {str(e)}")
-        return {'status': 'error', 'message': f'Error deleting document: {str(e)}'}
+        print(f"[DEBUG] Error in prepare_context_from_files: {str(e)}")
+        result["status"] = "error"
+        result["data"] = f"Error processing files: {str(e)}"
 
-def getDocument(id, document, collection):
+    return result
+
+def encode_image(image_path):
+    with open(image_path, "rb") as image_file:
+        return base64.b64encode(image_file.read()).decode('utf-8')
+
+def upload_file(file, category='history'):
+    """Handle file upload for chat functionality and return file context"""
     try:
-        print(f"[DEBUG] Querying collection {collection.__name__} for document with id={id}")
-        # Convert string id to ObjectId
-        object_id = ObjectId(id)
-        print(f"[DEBUG] Using ObjectId: {object_id}")
+        if not file:
+            print("[DEBUG] No file object provided")
+            return {'status': 'error', 'message': 'No file provided'}
+            
+        if not hasattr(file, 'filename'):
+            print("[DEBUG] File object has no filename attribute")
+            return {'status': 'error', 'message': 'Invalid file object'}
+            
+        if not file.filename:
+            print("[DEBUG] Empty filename")
+            return {'status': 'error', 'message': 'No file selected'}
+            
+        print(f"[DEBUG] Processing file: {file.filename}")
+        filename = secure_filename(file.filename)
         
-        # Try direct query first
-        document = collection.objects(_id=object_id).first()
+        # More robust file type extraction
+        try:
+            file_type = filename.rsplit('.', 1)[1].lower() if '.' in filename else None
+            if not file_type:
+                print("[DEBUG] Could not extract file type")
+                return {'status': 'error', 'message': 'Could not determine file type'}
+        except Exception as e:
+            print(f"[DEBUG] Error extracting file type: {str(e)}")
+            return {'status': 'error', 'message': 'Invalid file type'}
+            
+        if not allowed_file(filename):
+            print(f"[DEBUG] File type {file_type} not allowed")
+            return {'status': 'error', 'message': f'File type {file_type} not allowed'}
         
-        if document is None:
-            # Try alternate query structure
-            document = collection.objects(__raw__={'_id': {'$oid': id}}).first()
+        if file_type not in ['pdf', 'txt', 'jpeg', 'jpg', 'png']:
+            print(f"[DEBUG] Unsupported file type: {file_type}")
+            return {'status': 'error', 'message': 'Only PDF, TXT, and image files are supported'}
+            
+        # Get base path and construct relative/absolute paths consistently
+        base_path = os.path.dirname(os.path.dirname(os.path.realpath(__file__)))
+        relative_path = os.path.join('core', 'documents', category)
+        absolute_path = os.path.join(base_path, relative_path)
+        
+        print(f"[DEBUG] Upload base path: {base_path}")
+        print(f"[DEBUG] Upload relative path: {relative_path}")
+        print(f"[DEBUG] Upload absolute path: {absolute_path}")
+        
+        if not os.path.exists(absolute_path):
+            print(f"[DEBUG] Creating directory: {absolute_path}")
+            os.makedirs(absolute_path)
+            
+        fileDB = File(
+            name=filename,
+            path=relative_path,
+            category=category,
+            file_type=file_type,
+            user_id=str(current_user.id)
+        )
+        fileDB.save()
+        fileID = str(fileDB.id)
+        
+        file_save_path = os.path.join(absolute_path, f"{fileID}.{file_type}")
+        print(f"[DEBUG] Saving file to: {file_save_path}")
+        file.save(file_save_path)
+        
+        response = {
+            'status': 'ok',
+            'file_id': fileID,
+            'filename': filename,
+            'name': filename,
+            'file_type': file_type,
+            'type': file_type,
+            'path': relative_path
+        }
+        
+        # Always get context for text-based files
+        if file_type in ['pdf', 'txt']:
+            try:
+                # Convert fileDB to dict format expected by prepare_context_from_files
+                file_dict = {
+                    '_id': fileID,
+                    'name': filename,
+                    'path': relative_path,
+                    'file_type': file_type
+                }
+                
+                print(f"[DEBUG] Getting context for file: {file_dict}")
+                context = prepare_context_from_files([file_dict])
+                
+                if context['status'] == 'ok':
+                    print(f"[DEBUG] Successfully extracted context with {context['character_count']} characters")
+                    response['content'] = context['data']
+                    response['character_count'] = context['character_count']
+                else:
+                    print(f"[DEBUG] Context extraction failed: {context['data']}")
+                    response['content'] = f"[Error extracting content from {filename}]"
+            except Exception as e:
+                print(f"[DEBUG] Error getting file context: {str(e)}")
+                response['content'] = f"[Error processing {filename}: {str(e)}]"
+                
+        # Add base64 for images
+        elif file_type in ['jpeg', 'jpg', 'png']:
+            try:
+                response['base64_image'] = encode_image(file_save_path)
+            except Exception as e:
+                print(f"[DEBUG] Error encoding image: {str(e)}")
+                response['base64_image'] = None
+                
+        print(f"[DEBUG] Upload successful, returning response: {response}")
+        return response
         
-        if document is not None:
-            #print(f"[DEBUG] Found document: {document.to_json()}")
-            return {'status': 'ok', 'message': '', 'data': document.to_json()}
-        else:
-            # Let's print all documents in collection to debug
-            all_docs = collection.objects().limit(1)
-            print(f"[DEBUG] Sample document from collection: {[doc.to_json() for doc in all_docs]}")
-            print(f"[DEBUG] No document found with id={id} in collection {collection.__name__}")
-            return {'status': 'error', 'message': f'Document not found in {collection.__name__}'}
     except Exception as e:
-        print(f"[DEBUG] Error in getDocument: {str(e)}")
-        return {'status': 'error', 'message': f'Error retrieving document: {str(e)}'}
+        print(f"[DEBUG] Upload error: {str(e)}")
+        return {'status': 'error', 'message': str(e)}
 ```
 
-## documents/clean_up_files.py
+## db_connect.py
 
 ```
+#!/usr/bin/env python
+# -*- coding: utf-8 -*-
 import os
-import shutil
+from mongoengine import *
+from dotenv import load_dotenv
+import certifi
 
-def delete_folder_contents(folder_path: str) -> None:
-    """Delete all files and subdirectories in the specified folder."""
-    try:
-        # Check if folder exists
-        if not os.path.exists(folder_path):
-            print(f"[DEBUG] Folder {folder_path} does not exist")
-            return
-
-        # Delete everything in the folder
-        for item in os.listdir(folder_path):
-            item_path = os.path.join(folder_path, item)
-            try:
-                if os.path.isfile(item_path):
-                    os.unlink(item_path)
-                elif os.path.isdir(item_path):
-                    shutil.rmtree(item_path)
-            except Exception as e:
-                print(f"[DEBUG] Error deleting {item_path}: {str(e)}")
+# Load environment variables from .env file
+load_dotenv()
 
-        print(f"[DEBUG] Successfully cleared contents of {folder_path}")
+# Retrieve your MongoDB password from an environment variable
+mongodb_pwd = os.getenv('MONGODB_PWD')
+mongodb_user = os.getenv('MONGODB_USER')
+mongodb_uri = os.getenv('MONGODB_URI')
 
-    except Exception as e:
-        print(f"[DEBUG] Error clearing folder {folder_path}: {str(e)}")
+# Connect to your MongoDB database with SSL certificate verification
+#connect(host=mongodb_uri, tlsCAFile=certifi.where())
+connect(host=mongodb_uri)
 
-def delete_history_and_prompts():
-    """Delete contents of history and prompts folders."""
-    folders = ['history']
-    
-    for folder in folders:
-        delete_folder_contents(folder)
-        print(f"[DEBUG] Completed deletion process for {folder}")
+# class User(DynamicDocument):
+#   user_name = StringField()
+#   email = StringField(required=True)
+
+# user = User(user_name="John Doe", email="mynbi@example.com")
+
+# user.save()
+```
+
+## ai_insert_models.py
+
+```
+#!/usr/bin/env python
+# -*- coding: utf-8 -*-
+import os
+import sys
+import datetime
+
+# Add parent directory to Python path to find core module
+sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
+
+from core.db_document import Model
+from core.db_connect import *
+
+models = [
+  {'provider':'openai','model':'gpt-4o','name':'gpt-4o'},
+  {'provider':'openai','model':'gpt-4o-mini','name':'gpt-4o-mini'},
+  # {'provider':'openai','model':'gpt-4-turbo-preview','name':'gpt-4-turbo'},
+  # {'provider':'together','model':'meta-llama/Llama-2-70b-chat-hf','name':'meta-llama-2-70b'},
+  # {'provider':'anthropic','model':'claude-3-haiku-20240307','name':'claude-3-haiku'},
+  # {'provider':'anthropic','model':'claude-3-opus-20240229','name':'claude-3-opus'},
+  #  {'provider':'anthropic','model':'claude-3-5-sonnet-20240620','name':'claude-3.5-sonnet'},
+  #  {'provider':'deepseek','model':'deepseek-chat','name':'deepseek-chat'},
+   {'provider':'perplexity','model':'llama-3.1-sonar-large-128k-online','name':'perplexity-llama-3.1-online'},
+  ]
+
+# Delete existing models
+Model.objects.delete()
+
+# Current timestamp for creation date
+now = datetime.datetime.now()
+
+# Insert models with only creation audit fields
+for model_data in models:
+    model = Model(
+        provider=model_data['provider'],
+        model=model_data['model'],
+        name=model_data['name'],
+        created_date=now,
+        created_by='system'
+    )
+    # Use save(force_insert=True) to ensure it's treated as a new document
+    model.save(force_insert=True)
+
+print("Models inserted successfully with creation audit fields.")
+```
 
-if __name__ == "__main__":
-    delete_history_and_prompts()
+## __init__.py
+
+```
+# This file can be empty, it just marks the directory as a Python package
 ```
 
 ## ai_search.py
@@ -4412,6 +4816,72 @@ def search(question, num_results=10, days=5, start=0):
 search("Wann spielt der FCBayern?")
 ```
 
+## Readme.md
+
+```
+# AI Chat System Documentation
+
+## Prerequisites
+
+- OpenAI API key or Anthropic API key required for operation
+- Set your API keys in the `.env` file
+
+## System Architecture
+
+### Backend Components (`/ai`)
+
+- `ai_chat.py`: Main chat blueprint and route handlers
+- `ai_llm_helper.py`: LLM integration and response processing
+- `ai_insert_models.py`: Database models initialization
+- `__init__.py`: Package initialization
+
+### Frontend Components
+
+#### Templates (`/templates/chat/`)
+
+- `chat.html`: Main chat interface layout
+- `chat_ui.html`: Chat UI components and structure
+- `chat_messages.html`: Message container template
+- `chat_messages_rendered.html`: Rendered messages view
+- `bot_message_template.html`: AI response formatting
+- `user_message_template.html`: User message formatting
+- `code_block_template.html`: Code snippet display
+- `chat_prompts.html`: System prompts management
+
+#### JavaScript (`/static/chat/`)
+
+- `chat_core.js`: Core chat functionality, HTMX interactions, and UI handlers
+
+## Database Integration
+
+- Chat models and schemas defined in `core/db_document.py`
+- Stores message history, prompts, and system configurations
+
+## Setup Instructions
+
+1. Configure your environment variables in `.env`
+2. Import the chat blueprint in `app.py`:
+   ```python
+   from ai.ai_chat import dms_chat
+   app.register_blueprint(dms_chat, url_prefix='/chat')
+   ```
+
+## Features
+
+- Real-time chat interface with AI models
+- Code snippet highlighting and formatting
+- Message history persistence
+- Custom prompt management
+- HTMX-powered dynamic updates
+```
+
+## ToDo.md
+
+```
+check the chat.html and the chat_core.js file for things that are not neccesary anymore
+enable the model selection
+```
+
 ## ai_chat.py
 
 ```
@@ -4449,11 +4919,37 @@ csrf = CSRFProtect()
 
 
 def getConfig():
-    system_message = "Du bist ein hilfreicher Assistent! Antworte immer auf Deutsch! Wenn du Code generierst dann setze den Code in backticks"
+    system_message = """Du bist ein hilfreicher Assistent! Antworte immer auf Deutsch! 
+
+{context}
+
+Formatiere deine Antworten mit Markdown:
+- Überschriften mit # für Haupttitel und ## für Untertitel
+- **Fettschrift** für wichtige Begriffe
+- *Kursivschrift* für Betonungen
+- Listen mit * für Aufzählungen
+- Nummerierte Listen mit 1. 2. 3.
+- `Inline-Code` für kurze Codebeispiele
+- Links mit [Text](URL)
+- ~~Durchgestrichen~~ für nicht mehr gültiges
+
+Beispiel einer formatierten Antwort:
+# Haupttitel
+## Untertitel
+Dies ist ein Absatz mit **wichtigen** und *betonten* Worten.
+* Erster Listenpunkt
+* Zweiter Listenpunkt mit `Code`
+* Dritter Punkt mit [Link](https://example.com)
+
+1. Erster nummerierter Punkt
+2. Zweiter nummerierter Punkt
+
+Wenn du längeren Code generierst, dann setze den Code in dreifache Backticks."""
+
     welcome_message = "Hallo wie kann ich helfen?"
     messages = []
     models = json.loads(Model.objects().to_json())
-    print (models)
+    print(models)
 
     return {
         "system_message": system_message,
@@ -4476,6 +4972,8 @@ def chat(prompt_id=None, history_id=None):
     config['username'] = current_user.email
     config['user_id'] = str(current_user.id)
     config['is_admin'] = current_user.is_admin
+    config['firstname'] = current_user.firstname
+    config['name'] = current_user.name
 
     config['chat_started'] = int(time.time())
     config['history'] = []
@@ -4489,32 +4987,45 @@ def chat(prompt_id=None, history_id=None):
             handleDocument('prompt', prompt_id, request, return_json=True))
         files = json.loads(File.objects(document_id=prompt['id']).to_json())
         
-        #only pdf/txt files are supported for now
-        context = prepare_context_from_files(files)
-        if context['status'] == "ok":
-            if prompt['system_message'].find("{context}") != -1:
-                prompt['system_message'] = prompt['system_message'].replace(
-                    "{context}", context['data'])
+        config['messages'] = []
+        
+        # Create system message with context properly embedded
+        system_message = prompt['system_message']
+        
+        # Always try to get context from files, even if not explicitly requested
+        if files:
+            context = prepare_context_from_files(files)
+            if context['status'] == 'ok':
+                # If prompt has context placeholder, replace it
+                if "{context}" in system_message:
+                    system_message = system_message.replace("{context}", context['data'])
+                # Otherwise append context
+                else:
+                    system_message += f"\n\nContext from uploaded files:\n\n{context['data']}"
                 config['using_context'] = True
                 config['context_files'] = [f['name'] for f in files]
                 config['file_ids'] = [f['_id']['$oid'] for f in files]
-
-        config['messages'] = []
+            else:
+                print(f"[DEBUG] Failed to get context from files: {context['data']}")
+                # Add placeholder text if context extraction failed
+                if "{context}" in system_message:
+                    system_message = system_message.replace("{context}", "[Could not extract context from files]")
+        else:
+            # No files attached, remove context placeholder if present
+            system_message = system_message.replace("{context}", "")
         
-        # Add system message with file attachments if files exist
-        system_message = {
+        # Add system message with file attachments
+        config['messages'].append({
             'role': 'system',
-            'content': prompt['system_message']
-        }
-        if files:
-            system_message['attachments'] = [{
+            'content': system_message,
+            'attachments': [{
                 'type': 'file',
                 'id': f['_id']['$oid'],
                 'name': f['name'],
                 'file_type': f['file_type'],
                 'timestamp': int(time.time())
-            } for f in files]
-        config['messages'].append(system_message)
+            } for f in files] if files else []
+        })
         
         # Add user prompt message
         config['messages'].append({
@@ -4544,7 +5055,73 @@ def chat(prompt_id=None, history_id=None):
 @dms_chat.route('/stream', methods=['POST'])
 def stream():
     data = request.get_json()
-    response_stream = llm_call(data['messages'], data['model'])
+    print("[DEBUG] Stream request received")
+    
+    # Load context for messages if needed
+    messages = data.get('messages', [])
+    if messages and len(messages) > 0:
+        system_message = messages[0]
+        print(f"[DEBUG] System message content: {system_message.get('content')}")
+        print(f"[DEBUG] System message attachments: {system_message.get('attachments')}")
+        
+        if (system_message.get('role') == 'system' and 
+            '{context}' in system_message.get('content', '') and 
+            system_message.get('attachments')):
+            
+            print("[DEBUG] Loading context for system message")
+            try:
+                # Get file IDs from attachments
+                file_ids = [
+                    a['id'] for a in system_message['attachments'] 
+                    if a['type'] == 'file'
+                ]
+                print(f"[DEBUG] Found file IDs: {file_ids}")
+                
+                # Get files from database
+                files = []
+                for file_id in file_ids:
+                    file = File.objects(id=file_id).first()
+                    if file:
+                        print(f"[DEBUG] Found file in DB: {file.name}")
+                        files.append(file)
+                    else:
+                        print(f"[DEBUG] File not found in DB: {file_id}")
+                
+                if files:
+                    print(f"[DEBUG] Processing {len(files)} files for context")
+                    # Get context from files
+                    context = prepare_context_from_files(files)
+                    print(f"[DEBUG] Context extraction result: {context['status']}")
+                    if context['status'] == 'ok':
+                        # Replace context placeholder in system message
+                        original_content = system_message['content']
+                        system_message['content'] = system_message['content'].replace(
+                            '{context}', context['data']
+                        )
+                        print("[DEBUG] Context loaded and replaced in system message")
+                        print(f"[DEBUG] Original content length: {len(original_content)}")
+                        print(f"[DEBUG] New content length: {len(system_message['content'])}")
+                    else:
+                        print(f"[DEBUG] Failed to get context: {context['data']}")
+                        system_message['content'] = system_message['content'].replace(
+                            '{context}', '[Could not extract context from files]'
+                        )
+                else:
+                    print("[DEBUG] No files found for context loading")
+                    system_message['content'] = system_message['content'].replace(
+                        '{context}', '[No files found]'
+                    )
+                    
+            except Exception as e:
+                print(f"[DEBUG] Error loading context: {str(e)}")
+                system_message['content'] = system_message['content'].replace(
+                    '{context}', f'[Error loading context: {str(e)}]'
+                )
+    
+    # Handle normal streaming request
+    print("[DEBUG] Sending messages to LLM")
+    print(f"[DEBUG] First message content: {messages[0]['content'] if messages else 'No messages'}")
+    response_stream = llm_call(messages, data.get('model'))
     return Response(response_stream, mimetype='text/event-stream')
 
 
@@ -4766,78 +5343,6 @@ def delete_all_history():
         }), 500
 ```
 
-## __init__.py
-
-```
-# This file can be empty, it just marks the directory as a Python package
-```
-
-## ToDo.md
-
-```
-check the chat.html and the chat_core.js file for things that are not neccesary anymore
-enable the model selection
-```
-
-## Readme.md
-
-```
-# AI Chat System Documentation
-
-## Prerequisites
-
-- OpenAI API key or Anthropic API key required for operation
-- Set your API keys in the `.env` file
-
-## System Architecture
-
-### Backend Components (`/ai`)
-
-- `ai_chat.py`: Main chat blueprint and route handlers
-- `ai_llm_helper.py`: LLM integration and response processing
-- `ai_insert_models.py`: Database models initialization
-- `__init__.py`: Package initialization
-
-### Frontend Components
-
-#### Templates (`/templates/chat/`)
-
-- `chat.html`: Main chat interface layout
-- `chat_ui.html`: Chat UI components and structure
-- `chat_messages.html`: Message container template
-- `chat_messages_rendered.html`: Rendered messages view
-- `bot_message_template.html`: AI response formatting
-- `user_message_template.html`: User message formatting
-- `code_block_template.html`: Code snippet display
-- `chat_prompts.html`: System prompts management
-
-#### JavaScript (`/static/chat/`)
-
-- `chat_core.js`: Core chat functionality, HTMX interactions, and UI handlers
-
-## Database Integration
-
-- Chat models and schemas defined in `core/db_document.py`
-- Stores message history, prompts, and system configurations
-
-## Setup Instructions
-
-1. Configure your environment variables in `.env`
-2. Import the chat blueprint in `app.py`:
-   ```python
-   from ai.ai_chat import dms_chat
-   app.register_blueprint(dms_chat, url_prefix='/chat')
-   ```
-
-## Features
-
-- Real-time chat interface with AI models
-- Code snippet highlighting and formatting
-- Message history persistence
-- Custom prompt management
-- HTMX-powered dynamic updates
-```
-
 ## ai_llm_helper.py
 
 ```
@@ -4943,6 +5448,38 @@ def llm_call(messages, model, stream=True):
     return llm_call_no_stream(messages, model)
 ```
 
+## ai_test.py
+
+```
+from dotenv import load_dotenv
+import os
+import sys
+
+# Add parent directory to Python path to find core module
+sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
+
+from ai.ai_llm_helper import llm_call
+from core.db_document import History, Prompt, File, Model, Example, User
+
+messages = [
+    {"role": "system", "content": "Du bist ein hilfreicher Assistent"},
+    {"role": "user", "content": "Hallo"}
+]
+
+model = {'provider': 'deepseek', 'model': 'deepseek-chat', 'name': 'deepseek-chat'}
+
+#response = llm_call(messages, model, stream=False)
+#print(response)
+
+# History.objects().delete()
+# Prompt.objects().delete()
+# File.objects().delete()
+
+user = User.objects(email='alexander.fillips@micronova.de').first()
+user.role = 'admin'
+user.save()
+```
+
 ## ai_perplexity.py
 
 ```
@@ -4979,86 +5516,6 @@ response = requests.request("POST", url, json=payload, headers=headers)
 print(response.text)
 ```
 
-## ai_insert_models.py
-
-```
-#!/usr/bin/env python
-# -*- coding: utf-8 -*-
-import os
-import sys
-import datetime
-
-# Add parent directory to Python path to find core module
-sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
-
-from core.db_document import Model
-from core.db_connect import *
-
-models = [
-  {'provider':'openai','model':'gpt-4o','name':'gpt-4o'},
-  {'provider':'openai','model':'gpt-4o-mini','name':'gpt-4o-mini'},
-  {'provider':'openai','model':'gpt-4-turbo-preview','name':'gpt-4-turbo'},
-  {'provider':'together','model':'meta-llama/Llama-2-70b-chat-hf','name':'meta-llama-2-70b'},
-  {'provider':'anthropic','model':'claude-3-haiku-20240307','name':'claude-3-haiku'},
-  {'provider':'anthropic','model':'claude-3-opus-20240229','name':'claude-3-opus'},
-   {'provider':'anthropic','model':'claude-3-5-sonnet-20240620','name':'claude-3.5-sonnet'},
-   {'provider':'deepseek','model':'deepseek-chat','name':'deepseek-chat'},
-   {'provider':'perplexity','model':'llama-3.1-sonar-large-128k-online','name':'perplexity-llama-3.1-online'},
-  ]
-
-# Delete existing models
-Model.objects.delete()
-
-# Current timestamp for creation date
-now = datetime.datetime.now()
-
-# Insert models with only creation audit fields
-for model_data in models:
-    model = Model(
-        provider=model_data['provider'],
-        model=model_data['model'],
-        name=model_data['name'],
-        created_date=now,
-        created_by='system'
-    )
-    # Use save(force_insert=True) to ensure it's treated as a new document
-    model.save(force_insert=True)
-
-print("Models inserted successfully with creation audit fields.")
-```
-
-## ai_test.py
-
-```
-from dotenv import load_dotenv
-import os
-import sys
-
-# Add parent directory to Python path to find core module
-sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
-
-from ai.ai_llm_helper import llm_call
-from core.db_document import History, Prompt, File, Model, Example, User
-
-messages = [
-    {"role": "system", "content": "Du bist ein hilfreicher Assistent"},
-    {"role": "user", "content": "Hallo"}
-]
-
-model = {'provider': 'deepseek', 'model': 'deepseek-chat', 'name': 'deepseek-chat'}
-
-#response = llm_call(messages, model, stream=False)
-#print(response)
-
-# History.objects().delete()
-# Prompt.objects().delete()
-# File.objects().delete()
-
-user = User.objects(email='alexander.fillips@gmail.com').first()
-user.role = 'admin'
-user.save()
-```
-
 # config
 
 ```
@@ -5268,6 +5725,9 @@ function appendImage(container, imageData) {
 }
 
 function appendData(text, botMessageElement) {
+  // Clear any existing content
+  botMessageElement.innerHTML = "";
+
   if (typeof text === "object" && Array.isArray(text)) {
     text.forEach((item) => {
       if (item.type === "text") {
@@ -5279,6 +5739,7 @@ function appendData(text, botMessageElement) {
     return;
   }
 
+  // First handle code blocks
   const codeRegex = /```([\s\S]*?)```/g;
   let lastIndex = 0;
   let match;
@@ -5359,8 +5820,268 @@ async function stopStreaming() {
 }
 
 function appendNormalText(container, text) {
-  const textNode = document.createTextNode(text);
-  container.appendChild(textNode);
+  const lines = text.split("\n");
+  let inList = false;
+  let listElement = null;
+  let inTable = false;
+  let tableElement = null;
+  let tableHeader = false;
+
+  lines.forEach((line, index) => {
+    // Check for horizontal rule
+    if (line.match(/^[\-*_]{3,}$/)) {
+      if (inList) {
+        container.appendChild(listElement);
+        inList = false;
+      }
+      const hr = document.createElement("hr");
+      hr.className = "my-4 border-t-2 border-gray-300";
+      container.appendChild(hr);
+      return;
+    }
+
+    // Check for ordered list
+    const olMatch = line.match(/^(\d+)\. (.*)/);
+    if (olMatch) {
+      if (!inList || listElement.tagName !== "OL") {
+        if (inList) {
+          container.appendChild(listElement);
+        }
+        listElement = document.createElement("ol");
+        listElement.className = "mb-2 list-decimal";
+        listElement.style.counterReset = "list-counter " + (parseInt(olMatch[1]) - 1);
+        inList = true;
+      }
+      
+      const li = document.createElement("li");
+      li.className = "text-gray-700 mb-1 ml-8"; // Add left margin for numbers
+      li.style.counterIncrement = "list-counter";
+      
+      const textSpan = document.createElement("span");
+      textSpan.innerHTML = processInlineMarkdown(olMatch[2]);
+      li.appendChild(textSpan);
+      listElement.appendChild(li);
+      return;
+    }
+
+    // Handle other types (headings, unordered lists, etc.)
+    const h1Match = line.match(/^# (.*)/);
+    const h2Match = line.match(/^## (.*)/);
+    const h3Match = line.match(/^### (.*)/);
+    const ulMatch = line.match(/^[\*\-] (.*)/);
+    const taskMatch = line.match(/^[\*\-] \[([ x])\] (.*)/);
+    const nestedQuoteMatch = line.match(/^>+ (.*)/);
+
+    // Check for table
+    const tableMatch = line.match(/^\|(.+)\|$/);
+    if (tableMatch) {
+      const cells = tableMatch[1].split("|").map((cell) => cell.trim());
+
+      if (!inTable) {
+        tableElement = document.createElement("table");
+        tableElement.className =
+          "min-w-full my-4 border-collapse border border-gray-300";
+        inTable = true;
+        tableHeader = true;
+      }
+
+      const row = document
+        .createElement(tableHeader ? "thead" : "tbody")
+        .appendChild(document.createElement("tr"));
+      row.className = tableHeader ? "bg-gray-100" : "";
+
+      cells.forEach((cell) => {
+        const td = document.createElement(tableHeader ? "th" : "td");
+        td.className = "border border-gray-300 px-4 py-2 text-left";
+        td.innerHTML = processInlineMarkdown(cell);
+        row.appendChild(td);
+      });
+
+      if (tableHeader) {
+        tableElement.appendChild(row.parentElement);
+        tableHeader = false;
+      } else {
+        tableElement.appendChild(row.parentElement);
+      }
+      return;
+    } else if (inTable) {
+      container.appendChild(tableElement);
+      inTable = false;
+    }
+
+    if (nestedQuoteMatch) {
+      if (inList) {
+        container.appendChild(listElement);
+        inList = false;
+      }
+      const quoteDepth = line.match(/^>+/)[0].length;
+      const blockquote = document.createElement("blockquote");
+      // Reduced spacing for blockquotes
+      blockquote.className = `border-l-4 pl-4 py-2 my-2 ml-${(quoteDepth - 1) * 4}`;
+
+      // Adjust styling based on nesting level
+      switch (quoteDepth) {
+        case 1:
+          blockquote.classList.add(
+            "border-blue-300",
+            "text-gray-700",
+            "bg-gray-50",
+          );
+          break;
+        case 2:
+          blockquote.classList.add(
+            "border-purple-300",
+            "text-gray-700",
+            "bg-gray-100",
+          );
+          break;
+        case 3:
+          blockquote.classList.add(
+            "border-indigo-300",
+            "text-gray-700",
+            "bg-gray-200",
+          );
+          break;
+        default:
+          blockquote.classList.add(
+            "border-gray-400",
+            "text-gray-700",
+            "bg-gray-300",
+          );
+      }
+
+      blockquote.innerHTML = processInlineMarkdown(nestedQuoteMatch[1]);
+      container.appendChild(blockquote);
+    } else if (h1Match) {
+      if (inList) {
+        container.appendChild(listElement);
+        inList = false;
+      }
+      const h1 = document.createElement("h1");
+      h1.className = "text-2xl font-bold mt-1 mb-3 text-gray-700"; // Reduced margins
+      h1.innerHTML = processInlineMarkdown(h1Match[1]);
+      container.appendChild(h1);
+    } else if (h2Match) {
+      if (inList) {
+        container.appendChild(listElement);
+        inList = false;
+      }
+      const h2 = document.createElement("h2");
+      h2.className = "text-xl font-bold mt-1 mb-1 text-gray-700"; // Reduced margins
+      h2.innerHTML = processInlineMarkdown(h2Match[1]);
+      container.appendChild(h2);
+    } else if (h3Match) {
+      if (inList) {
+        container.appendChild(listElement);
+        inList = false;
+      }
+      const h3 = document.createElement("h3");
+      h3.className = "text-lg font-bold mt-1 mb-1 text-gray-800"; // Reduced margins
+      h3.innerHTML = processInlineMarkdown(h3Match[1]);
+      container.appendChild(h3);
+    } else if (taskMatch) {
+      if (!inList || listElement.tagName !== "UL") {
+        if (inList) {
+          container.appendChild(listElement);
+        }
+        listElement = document.createElement("ul");
+        listElement.className = "mb-2";
+        inList = true;
+      }
+      const li = document.createElement("li");
+      li.className = "text-gray-700 mb-1 flex items-center";
+      const checkbox = document.createElement("input");
+      checkbox.type = "checkbox";
+      checkbox.checked = taskMatch[1] === "x";
+      checkbox.disabled = true;
+      checkbox.className = "mr-2";
+      li.appendChild(checkbox);
+      const textSpan = document.createElement("span");
+      textSpan.innerHTML = processInlineMarkdown(taskMatch[2]);
+      li.appendChild(textSpan);
+      listElement.appendChild(li);
+    } else if (ulMatch) {
+      if (!inList || listElement.tagName !== "UL") {
+        if (inList) {
+          container.appendChild(listElement);
+        }
+        listElement = document.createElement("ul");
+        listElement.className = "mb-1"; // Reduced margin
+        inList = true;
+      }
+      const li = document.createElement("li");
+      li.className = "text-gray-700 mb-0.5"; // Reduced margin
+      const bulletPoint = document.createElement("span");
+      bulletPoint.className = "inline-block w-4";
+      bulletPoint.textContent = "•";
+      li.appendChild(bulletPoint);
+      const textSpan = document.createElement("span");
+      textSpan.innerHTML = processInlineMarkdown(ulMatch[1]);
+      li.appendChild(textSpan);
+      listElement.appendChild(li);
+    } else {
+      if (inList) {
+        container.appendChild(listElement);
+        inList = false;
+      }
+      if (line === "") {
+        const spacer = document.createElement("div");
+        spacer.className = "h-1"; // Reduced empty line height
+        container.appendChild(spacer);
+      } else {
+        const p = document.createElement("p");
+        p.className = "mb-1 text-gray-700"; // Reduced margin
+        p.innerHTML = processInlineMarkdown(line);
+        container.appendChild(p);
+      }
+    }
+  });
+
+  // Append any remaining list or table
+  if (inList) {
+    container.appendChild(listElement);
+  }
+  if (inTable) {
+    container.appendChild(tableElement);
+  }
+
+  // Remove the last margin-bottom from the last element
+  const lastElement = container.lastElementChild;
+  if (lastElement) {
+    lastElement.classList.remove("mb-0.5", "mb-1", "mb-2");
+  }
+}
+
+function processInlineMarkdown(text) {
+  // Process blockquotes (now handled in appendNormalText for nesting support)
+  if (text.startsWith("> ")) {
+    return `<blockquote class="border-l-4 border-gray-300 pl-4 py-2 my-2 italic text-gray-600">${text.substring(2)}</blockquote>`;
+  }
+
+  // Process inline code first (to avoid conflicts with other syntax)
+  text = text.replace(
+    /`([^`]+)`/g,
+    '<code class="bg-base-300 px-1 py-0.5 rounded text-sm font-mono">$1</code>',
+  );
+
+  // Process bold and italic
+  text = text.replace(
+    /\*\*([^*]+)\*\*/g,
+    '<strong class="font-bold">$1</strong>',
+  );
+  text = text.replace(/\*([^*]+)\*/g, '<em class="italic">$1</em>');
+  text = text.replace(/_([^_]+)_/g, '<em class="italic">$1</em>');
+
+  // Process links
+  text = text.replace(
+    /\[([^\]]+)\]\(([^)]+)\)/g,
+    '<a href="$2" class="text-primary hover:underline" target="_blank" rel="noopener noreferrer">$1</a>',
+  );
+
+  // Process strikethrough
+  text = text.replace(/~~([^~]+)~~/, '<del class="line-through">$1</del>');
+
+  return text;
 }
 
 function appendCodeText(container, text) {
@@ -5432,8 +6153,8 @@ async function streamMessage() {
     console.log("Current messages array before adding user message:", messages);
 
     messages.push(messageObj);
-    addUserMessage(userMessage); // Display the user message in the chat
-    chatInput.value = ""; // Clear the input field after sending the message
+    addUserMessage(userMessage);
+    chatInput.value = "";
 
     // Save chat immediately after adding user message
     try {
@@ -5578,6 +6299,11 @@ function addBotMessage(text) {
     .getElementById("bot-message-template")
     .content.cloneNode(true);
   const contentElement = template.querySelector(".content");
+  const copyButton = template.querySelector(".copy-btn");
+  const copyIcon = copyButton.querySelector(".copy-icon");
+  const checkIcon = copyButton.querySelector(".check-icon");
+  const copyText = copyButton.querySelector(".copy-text");
+  const checkText = copyButton.querySelector(".check-text");
 
   if (text == "...") {
     contentElement.innerHTML =
@@ -5594,6 +6320,75 @@ function addBotMessage(text) {
     contentElement.textContent = text;
   }
 
+  // Add copy functionality
+  copyButton.addEventListener("click", async () => {
+    // Create a temporary div to handle HTML content
+    const tempDiv = document.createElement("div");
+    tempDiv.innerHTML = contentElement.innerHTML;
+
+    // Remove any loading indicators if present
+    const loadingElements = tempDiv.getElementsByClassName("loading");
+    while (loadingElements.length > 0) {
+      loadingElements[0].remove();
+    }
+
+    // Function to inline Tailwind styles
+    function inlineStyles(element) {
+      const styles = window.getComputedStyle(element);
+      const inlineStyle = {};
+      for (let prop of styles) {
+        inlineStyle[prop] = styles.getPropertyValue(prop);
+      }
+      element.style.cssText = Object.entries(inlineStyle)
+        .map(([prop, value]) => `${prop}: ${value}`)
+        .join("; ");
+
+      // Process children
+      Array.from(element.children).forEach((child) => inlineStyles(child));
+    }
+
+    // Clone the content and inline styles
+    const clonedContent = contentElement.cloneNode(true);
+    document.body.appendChild(clonedContent);
+    inlineStyles(clonedContent);
+    const styledHTML = clonedContent.outerHTML;
+    document.body.removeChild(clonedContent);
+
+    try {
+      // Create a Blob with HTML content
+      const blob = new Blob([styledHTML], { type: "text/html" });
+      const plainText = contentElement.textContent;
+
+      // Create clipboard data with both formats
+      await navigator.clipboard.write([
+        new ClipboardItem({
+          "text/html": blob,
+          "text/plain": new Blob([plainText], { type: "text/plain" }),
+        }),
+      ]);
+
+      // Visual feedback
+      copyIcon.classList.add("hidden");
+      checkIcon.classList.remove("hidden");
+      copyText.classList.add("hidden");
+      checkText.classList.remove("hidden");
+      copyButton.classList.add("text-green-600", "bg-green-50");
+
+      // Reset after 2 seconds
+      setTimeout(() => {
+        copyIcon.classList.remove("hidden");
+        checkIcon.classList.add("hidden");
+        copyText.classList.remove("hidden");
+        checkText.classList.add("hidden");
+        copyButton.classList.remove("text-green-600", "bg-green-50");
+      }, 2000);
+    } catch (err) {
+      console.error("Failed to copy formatted content:", err);
+      // Fallback to plain text
+      navigator.clipboard.writeText(contentElement.textContent);
+    }
+  });
+
   document.getElementById("chat_messages").appendChild(template);
   return contentElement;
 }
@@ -5730,17 +6525,27 @@ document
         if (!messages[0].attachments) {
           messages[0].attachments = [];
         }
-        messages[0].attachments.push({
+
+        // Create attachment object
+        const attachment = {
           type: "file",
           id: result.file_id,
           name: result.filename,
           file_type: result.file_type,
           timestamp: Math.floor(Date.now() / 1000),
-        });
+        };
+
+        messages[0].attachments.push(attachment);
 
         // For non-image files, append the context to the existing system message
-        if (!["jpg", "jpeg", "png"].includes(result.file_type.toLowerCase())) {
-          messages[0].content += `\n\nUsing context from file: ${result.filename}\n\n${result.content}`;
+        if (!["jpg", "jpeg", "png"].includes(result.file_type.toLowerCase()) && result.content) {
+          // Update system message with context
+          const contextMarker = "{context}";
+          if (messages[0].content.includes(contextMarker)) {
+            messages[0].content = messages[0].content.replace(contextMarker, result.content);
+          } else {
+            messages[0].content += `\n\nContext from ${result.filename}:\n\n${result.content}`;
+          }
         }
 
         // Save chat state immediately after adding file
diff --git a/codegen/templates.md b/codegen/templates.md
index ce966aa..261c15c 100644
--- a/codegen/templates.md
+++ b/codegen/templates.md
@@ -24,34 +24,99 @@ module.exports = {
 };
 ```
 
-## index.html
+## login.html
 
 ```
 <!doctype html>
-<html lang="en" data-theme="light" class="h-full overflow-y-scroll">
-  {% include('main/header.html') %}
-  <body class="min-h-full flex flex-col bg-gray-50">
-    {% include('main/nav.html') %}
-    <main class="flex-1 lg:pl-64">
-      <div class="h-full flex items-center justify-center p-4">
-        <div class="card max-w-2xl mx-auto">
-          <div class="card-body text-center">
-            <h5 class="card-title mb-2.5">
-              Welcome back, {{ current_user.firstname }} {{ current_user.name
-              }}!
-            </h5>
-            <p class="mb-4">
-              We're glad to see you again. Here's your personal dashboard
-              overview.
-            </p>
-            <div class="card-actions">
-              <button class="btn btn-primary">Learn More</button>
+<html lang="en" data-theme="light" class="overflow-y-scroll">
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <title>Login - Flask App</title>
+    <link
+      rel="stylesheet"
+      href="{{ url_for('static', filename='css/output.css') }}"
+    />
+  </head>
+  <body class="bg-base-200 min-h-screen flex items-center justify-center">
+    <div class="w-full max-w-md p-6">
+      <div class="rounded-box border-base-content/10 bg-base-100 p-8 shadow-lg">
+        <div class="text-center mb-8">
+          <h1 class="text-2xl font-bold text-base-content/90">Welcome Back</h1>
+          <p class="text-base-content/60 mt-2">Please sign in to continue</p>
+        </div>
+
+        <form method="POST" action="{{ url_for('login') }}" autocomplete="on">
+          <input type="hidden" name="csrf_token" value="{{ csrf_token() }}" />
+          <div class="space-y-6">
+            <div class="form-control">
+              <label class="label" for="email">
+                <span class="label-text">Email</span>
+              </label>
+              <input
+                type="email"
+                id="email"
+                name="email"
+                class="input input-bordered w-full"
+                placeholder="your@email.com"
+                value="{{ email if email }}"
+                required
+                autocomplete="email"
+              />
+            </div>
+
+            <div class="form-control">
+              <label class="label" for="password">
+                <span class="label-text">Password</span>
+              </label>
+              <input
+                type="password"
+                id="password"
+                name="password"
+                class="input input-bordered w-full"
+                placeholder="••••••••"
+                required
+                autocomplete="current-password"
+              />
+              <label class="label">
+                <a href="#" class="label-text-alt link link-hover"
+                  >Forgot password?</a
+                >
+              </label>
+            </div>
+
+            <div class="form-control">
+              <label class="label cursor-pointer justify-start gap-3">
+                <input
+                  type="checkbox"
+                  class="checkbox checkbox-primary"
+                  name="remember"
+                />
+                <span class="label-text">Remember me</span>
+              </label>
+            </div>
+
+            {% if status == 'error' %}
+            <div class="alert alert-error">
+              <span
+                >{{ message if message else 'Invalid email or password' }}</span
+              >
+            </div>
+            {% endif %}
+
+            <button type="submit" class="btn btn-primary w-full">
+              Sign in
+            </button>
+
+            <div class="text-center">
+              <a href="/register" class="link link-hover text-sm"
+                >Don't have an account? Register</a
+              >
             </div>
           </div>
-        </div>
+        </form>
       </div>
-    </main>
-
+    </div>
     <script src="{{ url_for('static', filename='js/lib/flyonui.js') }}"></script>
   </body>
 </html>
@@ -167,2063 +232,2069 @@ module.exports = {
 </html>
 ```
 
-## login.html
+## index.html
 
 ```
 <!doctype html>
-<html lang="en" data-theme="light" class="overflow-y-scroll">
-  <head>
-    <meta charset="UTF-8" />
-    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
-    <title>Login - Flask App</title>
-    <link
-      rel="stylesheet"
-      href="{{ url_for('static', filename='css/output.css') }}"
-    />
-  </head>
-  <body class="bg-base-200 min-h-screen flex items-center justify-center">
-    <div class="w-full max-w-md p-6">
-      <div class="rounded-box border-base-content/10 bg-base-100 p-8 shadow-lg">
-        <div class="text-center mb-8">
-          <h1 class="text-2xl font-bold text-base-content/90">Welcome Back</h1>
-          <p class="text-base-content/60 mt-2">Please sign in to continue</p>
-        </div>
-
-        <form method="POST" action="{{ url_for('login') }}" autocomplete="on">
-          <input type="hidden" name="csrf_token" value="{{ csrf_token() }}" />
-          <div class="space-y-6">
-            <div class="form-control">
-              <label class="label" for="email">
-                <span class="label-text">Email</span>
-              </label>
-              <input
-                type="email"
-                id="email"
-                name="email"
-                class="input input-bordered w-full"
-                placeholder="your@email.com"
-                value="{{ email if email }}"
-                required
-                autocomplete="email"
-              />
-            </div>
-
-            <div class="form-control">
-              <label class="label" for="password">
-                <span class="label-text">Password</span>
-              </label>
-              <input
-                type="password"
-                id="password"
-                name="password"
-                class="input input-bordered w-full"
-                placeholder="••••••••"
-                required
-                autocomplete="current-password"
-              />
-              <label class="label">
-                <a href="#" class="label-text-alt link link-hover"
-                  >Forgot password?</a
-                >
-              </label>
-            </div>
-
-            <div class="form-control">
-              <label class="label cursor-pointer justify-start gap-3">
-                <input
-                  type="checkbox"
-                  class="checkbox checkbox-primary"
-                  name="remember"
-                />
-                <span class="label-text">Remember me</span>
-              </label>
-            </div>
-
-            {% if status == 'error' %}
-            <div class="alert alert-error">
-              <span
-                >{{ message if message else 'Invalid email or password' }}</span
-              >
-            </div>
-            {% endif %}
-
-            <button type="submit" class="btn btn-primary w-full">
-              Sign in
-            </button>
-
-            <div class="text-center">
-              <a href="/register" class="link link-hover text-sm"
-                >Don't have an account? Register</a
-              >
+<html lang="en" data-theme="light" class="h-full overflow-y-scroll">
+  {% include('main/header.html') %}
+  <body class="min-h-full flex flex-col bg-gray-50">
+    {% include('main/nav.html') %}
+    <main class="flex-1 lg:pl-64">
+      <div class="h-full flex items-center justify-center p-4">
+        <div class="card max-w-2xl mx-auto">
+          <div class="card-body text-center">
+            <h5 class="card-title mb-2.5">
+              Welcome back, {{ current_user.firstname }} {{ current_user.name
+              }}!
+            </h5>
+            <p class="mb-4">
+              We're glad to see you again. Here's your personal dashboard
+              overview.
+            </p>
+            <div class="card-actions">
+              <button class="btn btn-primary">Learn More</button>
             </div>
           </div>
-        </form>
+        </div>
       </div>
-    </div>
+    </main>
+
     <script src="{{ url_for('static', filename='js/lib/flyonui.js') }}"></script>
   </body>
 </html>
 ```
 
-## chat/chat_messages_rendered.html
-
-```
-<div
-  id="chat_messages"
-  class="ml-2 mr-2 mt-3 mb-2 md:ml-16 md:mr-16 md:mt-6 overflow-auto flex flex-col"
->
-  {% for message in config.messages %} {% if message.role =='user' %}
-  <div class="flex space-x-4 mb-6">
-    <div
-      class="flex justify-center items-center w-10 h-10 bg-gray-500 text-white rounded-full"
-    >
-      A
-    </div>
-    <div class="message content bg-gray-100">{{message.content}}</div>
-  </div>
-  {% endif %} {% if message.role =='assistant' %}
-  <div class="flex space-x-4 mb-6">
-    <div
-      class="flex justify-center items-center w-10 h-10 bg-gray-600 text-white rounded-full"
-    >
-      <svg
-        xmlns="http://www.w3.org/2000/svg"
-        fill="none"
-        viewBox="0 0 24 24"
-        stroke-width="1.5"
-        stroke="currentColor"
-        class="w-6 h-6"
-      >
-        <path
-          stroke-linecap="round"
-          stroke-linejoin="round"
-          d="M9.813 15.904 9 18.75l-.813-2.846a4.5 4.5 0 0 0-3.09-3.09L2.25 12l2.846-.813a4.5 4.5 0 0 0 3.09-3.09L9 5.25l.813 2.846a4.5 4.5 0 0 0 3.09 3.09L15.75 12l-2.846.813a4.5 4.5 0 0 0-3.09 3.09ZM18.259 8.715 18 9.75l-.259-1.035a3.375 3.375 0 0 0-2.455-2.456L14.25 6l1.036-.259a3.375 3.375 0 0 0 2.455-2.456L18 2.25l.259 1.035a3.375 3.375 0 0 0 2.456 2.456L21.75 6l-1.035.259a3.375 3.375 0 0 0-2.456 2.456ZM16.894 20.567 16.5 21.75l-.394-1.183a2.25 2.25 0 0 0-1.423-1.423L13.5 18.75l1.183-.394a2.25 2.25 0 0 0 1.423-1.423l.394-1.183.394 1.183a2.25 2.25 0 0 0 1.423 1.423l1.183.394-1.183.394a2.25 2.25 0 0 0-1.423 1.423Z"
-        />
-      </svg>
-    </div>
-    <div class="message content">{{message.content}}</div>
-  </div>
-  {% endif %} {% endfor %}
-</div>
-```
-
-## chat/chat_prompts.html
+## base/document/form.html
 
 ```
-{% if config.messages | length == 0 %}
-<div
-  id="prompts"
-  class="ml-2 mr-2 mb-2 md:ml-16 md:mr-16 flex flex-col gap-4 mt-8"
->
-  {% if config.history %}
-  <h3
-    class="text-center text-xl font-semibold text-gray-700 dark:text-gray-300"
-  >
-    Last Chats
-  </h3>
-  <div class="flex flex-row flex-wrap justify-center gap-4">
-    {% for item in config.history %}
-    <a href="/chat/history/{{ item.id }}" class="no-underline">
-      <div
-        id="history_{{ loop.index }}"
-        class="relative h-12 w-64 flex items-center justify-center bg-indigo-500 hover:bg-indigo-700 text-white rounded-xl cursor-pointer px-4"
-      >
-        <span class="truncate">{{ item.first_message }}</span>
-      </div>
-    </a>
-    {% endfor %}
-  </div>
-  <hr class="h-px my-2 bg-gray-200 border-0 dark:bg-gray-700" />
-  {% endif %} {% if config.latest_prompts %}
-  <h3
-    class="text-center text-xl font-semibold text-gray-700 dark:text-gray-300"
-  >
-    Latest Prompts
-  </h3>
-  <div class="flex flex-row flex-wrap justify-center gap-4">
-    {% for prompt in config.latest_prompts %}
-    <a href="/chat/prompt/{{ prompt.id }}" class="no-underline">
-      <div
-        id="prompt_{{ loop.index }}"
-        class="relative h-12 w-64 flex items-center justify-center bg-indigo-500 hover:bg-indigo-700 text-white rounded-xl cursor-pointer px-4"
-      >
-        <span class="truncate">{{ prompt.name }}</span>
+<!doctype html>
+<html lang="en" class="overflow-y-scroll">
+  {% include('/main/header.html') %}
+  <body class="bg-gray-50 min-h-screen">
+    {% include('/main/nav.html') %}
+
+    <section class="p-6 flex items-center lg:ml-64">
+      <div class="max-w-screen-xl mx-auto px-4 lg:px-12 w-full">
+        <!-- Start coding here -->
+        <div class="relative bg-white shadow-md dark:bg-gray-800 sm:rounded-lg">
+          <div class="flex items-center justify-center pt-4 px-4">
+            <form
+              method="POST"
+              enctype="multipart/form-data"
+              id="documentForm"
+              class="w-full max-w-lg"
+            >
+              <input
+                type="hidden"
+                name="csrf_token"
+                value="{{ csrf_token() }}"
+              />
+              <input type="hidden" name="id" value="{{document.id}}" />
+
+              <h1 class="text-2xl font-bold">{{page.title}}</h1>
+              <hr class="my-4" />
+              <div class="flex flex-wrap -mx-3 mb-6">
+                {% include('/base/document/form_elements.html') %}
+              </div>
+
+              <!-- Save and Delete Buttons -->
+              <div class="flex flex-wrap -mx-3 mb-6">
+                <div
+                  class="w-full px-3 mb-6 md:mb-0 flex justify-between space-x-3"
+                >
+                  <button
+                    type="submit"
+                    class="btn btn-primary w-1/2"
+                    id="saveButton"
+                  >
+                    Save
+                  </button>
+                  <button
+                    type="button"
+                    class="btn btn-error w-1/2"
+                    id="deleteButton"
+                  >
+                    Delete
+                  </button>
+                </div>
+              </div>
+            </form>
+
+            <div
+              id="deleteModal"
+              tabindex="-1"
+              class="hidden overflow-y-auto overflow-x-hidden bg-gray-600 bg-opacity-65 backdrop-blur-sm fixed top-0 right-0 left-0 z-50 flex justify-center items-center w-full h-full"
+            >
+              <div
+                id="modalContent"
+                class="relative p-4 w-full max-w-md max-h-full"
+              >
+                <div class="relative bg-white rounded-lg shadow">
+                  <button
+                    type="button"
+                    class="absolute top-3 right-2.5 text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center"
+                    id="closeModal"
+                  >
+                    <svg
+                      class="w-3 h-3"
+                      aria-hidden="true"
+                      xmlns="http://www.w3.org/2000/svg"
+                      fill="none"
+                      viewBox="0 0 14 14"
+                    >
+                      <path
+                        stroke="currentColor"
+                        stroke-linecap="round"
+                        stroke-linejoin="round"
+                        stroke-width="2"
+                        d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"
+                      />
+                    </svg>
+                    <span class="sr-only">Close modal</span>
+                  </button>
+                  <div class="p-4 md:p-5 text-center">
+                    <svg
+                      class="mx-auto mb-4 text-gray-400 w-12 h-12"
+                      aria-hidden="true"
+                      xmlns="http://www.w3.org/2000/svg"
+                      fill="none"
+                      viewBox="0 0 20 20"
+                    >
+                      <path
+                        stroke="currentColor"
+                        stroke-linecap="round"
+                        stroke-linejoin="round"
+                        stroke-width="2"
+                        d="M10 11V6m0 8h.01M19 10a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z"
+                      />
+                    </svg>
+                    <h3 class="mb-5 text-lg font-normal text-gray-500">
+                      Are you sure?
+                    </h3>
+                    <button
+                      id="confirmDelete"
+                      type="button"
+                      class="text-white bg-red-600 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 font-medium rounded-lg text-sm inline-flex items-center px-5 py-2.5 text-center"
+                    >
+                      Yes, I'm sure
+                    </button>
+                    <button
+                      id="cancelDelete"
+                      type="button"
+                      class="py-2.5 px-5 ms-3 text-sm font-medium text-gray-900 focus:outline-none bg-white rounded-lg border border-gray-200 hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-4 focus:ring-gray-100"
+                    >
+                      No, cancel
+                    </button>
+                  </div>
+                </div>
+              </div>
+            </div>
+          </div>
+        </div>
       </div>
-    </a>
-    {% endfor %}
-  </div>
-  {% endif %} {% if not config.history and not config.latest_prompts %}
-  <div class="flex flex-row flex-wrap justify-center gap-4">
-    <div
-      class="prompt relative h-12 w-64 flex items-center justify-center bg-indigo-500 hover:bg-indigo-700 text-white rounded-xl cursor-pointer px-4"
-    >
-      <span class="truncate">Wer war Ada Lovelace?</span>
-    </div>
-    <div
-      class="group relative prompt h-12 w-64 flex items-center justify-center bg-indigo-500 hover:bg-indigo-700 text-white rounded-xl cursor-pointer px-4"
-    >
-      <span class="truncate">Schreibe eine index.html</span>
-    </div>
-  </div>
-  {% endif %}
-</div>
-{% endif %}
-```
+    </section>
+    <script>
+      window.addEventListener("load", function () {
+        // Basic
+        flatpickr("#flatpickr-date", {
+          monthSelectorType: "static",
+          locale: "de",
+          dateFormat: "d.m.Y",
+        });
+      });
+    </script>
+    <script>
+      document.addEventListener('DOMContentLoaded', function() {
 
-## chat/bot_message_template.html
+        {% include 'base/document/js/delete_document.js' %}
+        {% include 'base/document/js/search_field.js' %}
 
-```
-<div class="flex space-x-4 mb-6">
-  <div
-    class="flex justify-center items-center w-10 h-10 bg-gray-600 text-white rounded-full flex-shrink-0"
-  >
-    <svg
-      xmlns="http://www.w3.org/2000/svg"
-      fill="none"
-      viewBox="0 0 24 24"
-      stroke-width="1.5"
-      stroke="currentColor"
-      class="w-6 h-6"
-    >
-      <path
-        stroke-linecap="round"
-        stroke-linejoin="round"
-        d="M9.813 15.904 9 18.75l-.813-2.846a4.5 4.5 0 0 0-3.09-3.09L2.25 12l2.846-.813a4.5 4.5 0 0 0 3.09-3.09L9 5.25l.813 2.846a4.5 4.5 0 0 0 3.09 3.09L15.75 12l-2.846.813a4.5 4.5 0 0 0-3.09 3.09ZM18.259 8.715 18 9.75l-.259-1.035a3.375 3.375 0 0 0-2.455-2.456L14.25 6l1.036-.259a3.375 3.375 0 0 0 2.455-2.456L18 2.25l.259 1.035a3.375 3.375 0 0 0 2.456 2.456L21.75 6l-1.035.259a3.375 3.375 0 0 0-2.456 2.456ZM16.894 20.567 16.5 21.75l-.394-1.183a2.25 2.25 0 0 0-1.423-1.423L13.5 18.75l1.183-.394a2.25 2.25 0 0 0 1.423-1.423l.394-1.183.394 1.183a2.25 2.25 0 0 0 1.423 1.423l1.183.394-1.183.394a2.25 2.25 0 0 0-1.423 1.423Z"
-      />
-    </svg>
-  </div>
-  <div
-    class="message content bg-base-300 rounded-lg p-4 flex-1 min-w-0 break-words"
-  ></div>
-</div>
+      });
+    </script>
+    <script src="{{ url_for('static', filename='js/lib/flyonui.js') }}"></script>
+    <script src="{{ url_for('static', filename='js/lib/flatpickr.min.js') }}"></script>
+  </body>
+</html>
 ```
 
-## chat/chat_ui.html
+## base/document/form_elements.html
 
 ```
+{% for element in elements %}
 <div
-  id="chat_ui"
-  class="fixed bottom-0 left-0 lg:left-64 lg:w-[calc(100%-16rem)] w-full h-40 bg-gray-50"
+  class="{{ 'w-full' if element.full_width else 'w-full md:w-1/2' }} px-3 mb-6 md:mb-0"
 >
-  <div
-    class="flex flex-col absolute bottom-0 left-0 right-0 h-32 ml-2 mr-2 mb-2 md:ml-10 md:mr-10 md:mb-4 rounded-xl bg-white"
+  <label
+    for="{{ element.id }}"
+    class="label label-text"
   >
-    <div class="p-3 pr-16 overflow-hidden">
-      <textarea
-        id="chat_input"
-        placeholder="Type your message and press Command or Strg + Enter"
-        rows="3"
-        class="border-none ring-0 w-full rounded-lg focus:outline-none focus:ring-0 resize-none"
-      ></textarea>
-    </div>
-    <div class="ml-6 mb-4 flex items-center gap-2">
-      <div
-        class="dropdown relative inline-flex [--placement:top]"
-        data-dropdown
-      >
-        <button
-          id="modelSelectorButton"
-          class="badge badge-outline badge-primary dropdown-toggle"
-          data-dropdown-toggle
-        >
-          <span id="selected_model"></span>
-        </button>
-        <div
-          class="dropdown-menu min-w-44 dropdown-open:opacity-100 hidden"
-          role="menu"
-          aria-orientation="vertical"
-          aria-labelledby="modelSelectorButton"
-        >
-          {% for model in config.models %}
-          <button
-            id="{{ model.model }}"
-            data-name="{{ model.name }}"
-            class="model dropdown-item w-full text-left px-4 py-2 hover:bg-gray-100"
-          >
-            {{ model.name }}
-          </button>
-          {% endfor %}
-        </div>
-      </div>
-
-      <label for="file-upload" class="cursor-pointer">
-        <div
-          class="badge badge-outline badge-secondary flex items-center gap-1"
-        >
-          <svg
-            xmlns="http://www.w3.org/2000/svg"
-            fill="none"
-            viewBox="0 0 24 24"
-            stroke-width="1.5"
-            stroke="currentColor"
-            class="w-4 h-4"
-          >
-            <path
-              stroke-linecap="round"
-              stroke-linejoin="round"
-              d="M18.375 12.739l-7.693 7.693a4.5 4.5 0 01-6.364-6.364l10.94-10.94A3 3 0 1119.5 7.372L8.552 18.32m.009-.01l-.01.01m5.699-9.941l-7.81 7.81a1.5 1.5 0 002.112 2.13"
-            />
-          </svg>
-          <span id="file-name-display">Upload</span>
-        </div>
-      </label>
-      <input type="file" id="file-upload" class="hidden" />
-    </div>
-
-    <div class="absolute bottom-0 right-0 p-3 flex flex-col gap-2">
-      <button
-        id="reset_button"
-        class="bg-slate-800 hover:bg-slate-600 text-white font-extralight p-2.5 rounded"
-      >
-        <svg
-          xmlns="http://www.w3.org/2000/svg"
-          fill="none"
-          viewBox="0 0 24 24"
-          stroke-width="1.5"
-          stroke="currentColor"
-          class="w-6 h-6"
-        >
-          <path
-            stroke-linecap="round"
-            stroke-linejoin="round"
-            d="M12 4.5v15m7.5-7.5h-15"
-          />
-        </svg>
-      </button>
+    {{ element.label }}
+  </label>
 
-      <button
-        id="chat_button"
-        class="bg-slate-800 hover:bg-slate-600 text-white font-extralight p-2.5 rounded"
-      >
-        <svg
-          xmlns="http://www.w3.org/2000/svg"
-          fill="none"
-          viewBox="0 0 24 24"
-          stroke-width="1.5"
-          stroke="currentColor"
-          class="w-6 h-6"
-        >
-          <path
-            stroke-linecap="round"
-            stroke-linejoin="round"
-            d="M6 12 3.269 3.125A59.769 59.769 0 0 1 21.485 12 59.768 59.768 0 0 1 3.27 20.875L5.999 12Zm0 0h7.5"
-          />
-        </svg>
-      </button>
-      <button
-        id="stop_button"
-        class="hidden bg-red-500 hover:bg-red-400 text-white font-extralight p-2.5 rounded"
+  {% if element.type == 'ButtonField' %}
+  <a href="{{element.link}}/{{document.id}}"
+    ><button
+      type="button"
+      class="btn btn-primary"
+    >
+      {{element.label}}
+    </button></a
+  >
+  {% endif %} {% if element.type == 'FileField' %}
+  <input
+    class="input max-w-sm"
+    id="{{element.id}}"
+    type="file"
+    name="files_{{element.id}}"
+    multiple
+  />
+  {% for file in element.value %} {% if file.element_id == element.id %}
+  <div id="{{file.document_id}}" class="flex items-center justify-between mt-2">
+    <span class="mt-1 text-sm text-gray-600">
+      <a
+        href="{{url_for('download_file',file_id=file.id)}}"
+        class="text-blue-600 hover:text-blue-500"
+        target="_blank"
       >
-        <svg
-          xmlns="http://www.w3.org/2000/svg"
-          fill="none"
-          viewBox="0 0 24 24"
-          stroke-width="1.5"
-          stroke="currentColor"
-          class="w-6 h-6"
-        >
-          <path
-            stroke-linecap="round"
-            stroke-linejoin="round"
-            d="M5.25 7.5A2.25 2.25 0 0 1 7.5 5.25h9a2.25 2.25 0 0 1 2.25 2.25v9a2.25 2.25 0 0 1-2.25 2.25h-9a2.25 2.25 0 0 1-2.25-2.25v-9Z"
-          />
-        </svg>
-      </button>
-    </div>
+        {{ file.name }}
+      </a>
+    </span>
+    <button
+      id="{{file.id}}"
+      document_id="{{file.document_id}}"
+      class="delete_file bg-red-100 text-red-800 text-xs font-medium me-2 px-2.5 py-0.5 rounded"
+    >
+      Delete
+    </button>
   </div>
-</div>
-```
-
-## chat/chat_messages.html
-
-```
-<div
-  id="chat_messages"
-  class="mt-4 mb-4 overflow-auto flex flex-col min-h-[200px]"
-></div>
-```
-
-## chat/user_message_template.html
+  {% endif %} {% endfor %} {% endif %} {% if element.type=='DocumentField' %}
+  <!-- Search Field -->
+  <input
+    type="hidden"
+    value="{{element.value_id if element.value_id else document.get(element.name + '_id', '')}}"
+    name="{{ element.name }}_hidden"
+    id="{{ element.name }}_hidden"
+  />
+  <input
+    id="{{element.id}}"
+    name="{{element.name}}"
+    value="{{element.value if element.value else document.get(element.name, '')}}"
+    module="{{element.module}}"
+    document_field="{{element.document_field}}"
+    type="text"
+    placeholder="Search..."
+    class="searchField bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5"
+  />
 
-```
-<div class="flex space-x-4 mb-6">
+  <!-- Dropdown Menu -->
   <div
-    class="flex justify-center items-center w-10 h-10 bg-gray-500 text-white rounded-full flex-shrink-0"
+    id="dropdownMenu"
+    class="z-10 hidden bg-white rounded-lg shadow w-full mt-1 max-h-48 overflow-y-auto"
   >
-    A
+    <ul id="userList" class="py-2 text-gray-700"></ul>
   </div>
-  <div
-    class="message content bg-base-200 rounded-lg p-4 flex-1 min-w-0 break-words"
-  ></div>
-</div>
-```
-
-## chat/code_block_template.html
-
-```
-<div class="flex flex-col w-full">
-    <div class="h-8 bg-gray-800 w-full flex rounded-t justify-between items-center px-4">
-      <!-- Language Info Placeholder -->
-      <span class="text-sm text-white language-info"></span>
+  {% endif %} {% if element.type == 'IntField' or element.type =='FloatField' %}
 
-      <div class="flex flex-row items-center gap-2">
-        <span class="copied hidden text-sm font-extralight text-green-400">copied!</span>
-        <!-- Copy Button -->
-      <button class="h-4 w-4 copy-btn flex items-center justify-center text-white hover:text-green-400">
-        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
-          <path stroke-linecap="round" stroke-linejoin="round" d="M15.666 3.888A2.25 2.25 0 0 0 13.5 2.25h-3c-1.03 0-1.9.693-2.166 1.638m7.332 0c.055.194.084.4.084.612v0a.75.75 0 0 1-.75.75H9a.75.75 0 0 1-.75-.75v0c0-.212.03-.418.084-.612m7.332 0c.646.049 1.288.11 1.927.184 1.1.128 1.907 1.077 1.907 2.185V19.5a2.25 2.25 0 0 1-2.25 2.25H6.75A2.25 2.25 0 0 1 4.5 19.5V6.257c0-1.108.806-2.057 1.907-2.185a48.208 48.208 0 0 1 1.927-.184" />
-        </svg>
-      </button>
-      </div>
-      
-    </div>
-    <div class="w-full">
-      <pre class="bg-gray-700 text-sm text-white rounded-b p-2 overflow-x-auto whitespace-pre-wrap">
-      </pre>
-    </div>
+  <div class="max-w-sm mx-auto">
+    <input
+      type="text"
+      id="{{element.id}}"
+      name="{{element.name}}"
+      value="{{element.value if element.value is not none else ''}}"
+      class="input"
+    />
   </div>
-```
-
-## chat/chat.html
 
-```
-<!doctype html>
-<html lang="en" class="h-full">
-  {% include('/main/header.html') %}
-  <head>
-    <meta charset="UTF-8" />
-    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
-    <meta name="csrf-token" content="{{ csrf_token() }}" />
-    <title>Chat</title>
-  </head>
-  <body class="min-h-full flex flex-col bg-gray-50">
-    {% include('/main/nav.html') %}
+  {% endif %} {% if element.type == 'Date' %}
 
-    <section class="flex-1 flex items-start overflow-y-auto lg:ml-64">
-      <div class="px-4 md:px-10 w-full">
-        <div class="relative min-h-[calc(100vh-8rem)] pb-32">
-          <main id="main" class="flex flex-col h-full">
-            {% if config.messages|length == 0 %}
-            <!-- Show prompts and history first in a fresh chat -->
-            <div id="selected_prompts_container" class="flex-1">
-              {% include '/chat/chat_prompts.html' %}
-            </div>
-            <div id="chat_messages_container" class="pb-40">
-              {% include '/chat/chat_messages.html' %}
-            </div>
-            {% else %}
-            <!-- Show messages first in an existing chat -->
-            <div id="chat_messages_container" class="pb-40">
-              {% include '/chat/chat_messages.html' %}
-            </div>
-            <div id="selected_prompts_container">
-              {% include '/chat/chat_prompts.html' %}
-            </div>
-            {% endif %}
+  <input
+    type="text"
+    class="input max-w-sm"
+    placeholder="DD.MM.YYYY"
+    id="flatpickr-date"
+    name="{{element.name}}"
+    value="{{element.value if element.value is not none else ''}}"
+  />
 
-            <div id="chat_history_container" class="hidden"></div>
-            <div id="prompts_container" class="hidden"></div>
-            <div id="create_prompt_container" class="hidden"></div>
-            <div id="chat_ui_container">{% include '/chat/chat_ui.html' %}</div>
-          </main>
+  {% endif %} {% if element.type == 'CheckBox' %}
+  <label class="inline-flex items-center mb-5 cursor-pointer">
+    <input
+      type="hidden"
+      name="{{ element.name }}_hidden"
+      value="Off"
+    />
+    <input
+      type="checkbox"
+      name="{{ element.name }}"
+      class="switch switch-primary"
+      value="On"
+      {% if element.value == "On" %}checked{% endif %}
+    />
+  </label>
+  {% endif %} {% if element.type =='SimpleListField' %}
+  <select
+    class="select max-w-sm appearance-none"
+    aria-label="select"
+    id="{{element.id}}"
+    name="{{element.name}}"
+  >
+    {% for item in element.SimpleListField %} {% if item.value == element.value %}
+    <option value="{{item.value}}" selected="selected">{{item.name}}</option>
+    {% else %}
+    <option value="{{item.value}}">{{item.name}}</option>
+    {% endif %} {% endfor %}
+  </select>
+  {% endif %} {% if element.type=='AdvancedListField' %}
+  <select class="select max-w-sm appearance-none" aria-label="select" id="{{element.id}}" name="{{element.name}}">
+    {% for item in element.AdvancedListField %} {% if item.value == element.value %}
+    <option value="{{item.value}}" selected="selected">{{item.name}}</option>
+    {% else %}
+    <option value="{{item.value}}">{{item.name}}</option>
+    {% endif %} {% endfor %}
+  </select>
+  {% endif %} {% if element.type == 'SingleLine' %}
+  <input
+    id="{{ element.id }}"
+    name="{{ element.name }}"
+    type="text"
+    value="{{ element.value }}"
+    placeholder="{{ element.label }}"
+    class="input"
+    {% if element.required %}required{% endif %}
+  />
+  {% elif element.type == 'MultiLine' %}
+  <textarea
+    id="{{ element.id }}"
+    name="{{ element.name }}"
+    rows="4"
+    placeholder="{{ element.label }}"
+    class="textarea"
+    {% if element.required %}required{% endif %}
+  >{{ element.value if element.value is not none else '' }}</textarea>
+  {% endif %}
+    <!-- {% if element.required %}
+    <p class="text-red-500 text-xs italic">Please fill out this field.</p>
+    {% endif %} -->
+</div>
+{% endfor %}
+```
 
-          <!-- Bot Message Template -->
-          <template id="bot-message-template">
-            {% include '/chat/bot_message_template.html' %}
-          </template>
+## base/document/js/delete_document.js
 
-          <!-- User Message Template -->
-          <template id="user-message-template">
-            {% include '/chat/user_message_template.html' %}
-          </template>
+```
+// Function to handle form submission for delete action
+function submitDeleteForm() {
+  var url =
+    "{{url_for('delete_document')}}" +
+    "?id=" +
+    "{{document.id}}&type={{page.document_name}}";
 
-          <!-- File Banner Template -->
-          <template id="file-banner-template">
-            <div class="mb-6">
-              <div class="bg-blue-50 border-l-4 border-blue-400 p-4">
-                <div class="flex">
-                  <div class="flex-shrink-0">
-                    <svg
-                      class="h-5 w-5 text-blue-400"
-                      viewBox="0 0 20 20"
-                      fill="currentColor"
-                    >
-                      <path
-                        fill-rule="evenodd"
-                        d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z"
-                        clip-rule="evenodd"
-                      />
-                    </svg>
-                  </div>
-                  <div class="ml-3 flex items-center gap-3">
-                    <p class="text-sm text-blue-700">
-                      Using context from file: <span class="filename"></span>
-                    </p>
-                    <a
-                      href="#"
-                      class="download-link text-blue-700 hover:text-blue-900"
-                    >
-                      <svg
-                        class="w-4 h-4"
-                        xmlns="http://www.w3.org/2000/svg"
-                        fill="none"
-                        viewBox="0 0 24 24"
-                        stroke-width="1.5"
-                        stroke="currentColor"
-                      >
-                        <path
-                          stroke-linecap="round"
-                          stroke-linejoin="round"
-                          d="M3 16.5v2.25A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75V16.5M16.5 12L12 16.5m0 0L7.5 12m4.5 4.5V3"
-                        />
-                      </svg>
-                    </a>
-                  </div>
-                </div>
-              </div>
-            </div>
-          </template>
+  fetch(url)
+    .then((response) => response.json())
+    .then((result) => {
+      console.log(result);
+      if (result.status === "ok") {
+        console.log("Document Deleted");
+        window.location.href = "{{ page.collection_url }}";
+      } else {
+        console.log("Document not deleted");
+      }
+    })
+    .catch((error) => {
+      console.error("Error:", error);
+    });
+}
 
-          <template id="code_template">
-            {% include '/chat/code_block_template.html' %}
-          </template>
-        </div>
-      </div>
-    </section>
+const modal = document.getElementById("deleteModal");
+const deleteButton = document.getElementById("deleteButton");
+const closeButton = document.getElementById("closeModal");
+const confirmButton = document.getElementById("confirmDelete");
+const cancelButton = document.getElementById("cancelDelete");
+const modalContent = document.getElementById('modalContent');
 
-    <script>
-      // Global variables
-      const messages = {{ config.messages | tojson | safe }};
-      const systemMessage = {{ config.system_message|tojson }};
-      const welcomeMessage = {{ config.welcome_message|tojson }};
-      const models = {{ config.models | tojson | safe}};
-      const use_prompt_template = {{ config.use_prompt_template|tojson }};
-      const username = {{ config.username|tojson }};
-      const chat_started = {{ config.chat_started|tojson }};
+function showModal() {
+  modal.classList.remove("hidden");
+}
 
-      // Model selection
-      var selected_model = models[0]['model'];
-      var selected_model_name = models[0]['name'];
-      var selectedModelElement = document.getElementById('selected_model');
+function hideModal() {
+  modal.classList.add("hidden");
+}
 
-      // Check localStorage for saved model
-      if (localStorage.getItem('selected_model') !== null) {
-        selected_model = localStorage.getItem('selected_model');
-        const model = models.find(m => m.model === selected_model);
-        if (model) {
-          selected_model_name = model.name;
-        }
-      }
+deleteButton.addEventListener("click", showModal);
+closeButton.addEventListener("click", hideModal);
+cancelButton.addEventListener("click", hideModal);
 
-      selectedModelElement.innerText = selected_model_name;
+confirmButton.addEventListener("click", function (ev) {
+  ev.preventDefault();
+  submitDeleteForm();
+});
 
-      document.addEventListener('click', function (e) {
-        if (e.target.closest('#prompts .prompt')) {
-          var chatInput = document.getElementById('chat_input');
-          if (chatInput) {
-            chatInput.value = e.target.textContent;
-          }
+modal.addEventListener('click', function(event) {
+  if (!modalContent.contains(event.target)) {
+    hideModal();
+  }
+});
 
-          var chatButton = document.getElementById('chat_button');
-          if (chatButton) {
-            chatButton.click();
-          }
 
-          var promptsDiv = document.getElementById('prompts');
-          if (promptsDiv) {
-            promptsDiv.remove();
-          }
-        }
+document.querySelectorAll('.delete_file').forEach(button => {
+    button.addEventListener('click', function (event) {
+        event.preventDefault();
+        const documentId = this.getAttribute('document_id');
+        const fileId = this.id;
 
-        if (event.target.classList.contains('model')) {
-          selected_model = event.target.id;
-          selected_model_name = event.target.dataset.name;
-          localStorage.setItem('selected_model', selected_model);
-          selectedModelElement.innerText = selected_model_name;
-          const modelSelectorButton = document.getElementById('modelSelectorButton');
-          if (modelSelectorButton) {
-            modelSelectorButton.click();
-          }
-        }
-      });
-    </script>
+        const url = "{{ url_for('delete_document') }}" + "?id="+fileId + "&type=files";
+        console.log(url)
 
-    <script src="{{ url_for('static', filename='/chat/chat_core.js') }}"></script>
-    <script src="{{ url_for('static', filename='js/lib/flyonui.js') }}"></script>
-  </body>
-</html>
+        fetch(url)
+        .then(response => response.json())
+        .then(data => {
+            if (data.status=='ok') {
+                const fileElement = document.getElementById(documentId);
+                if (fileElement) {
+                    fileElement.remove();
+                    console.log("File removed!")
+                }
+            } else {
+                console.error('Failed to delete document:', data);
+            }
+        })
+        .catch(error => console.error('Error:', error));
+    });
+});
 ```
 
-## testing/create_users.py
+## base/document/js/search_field.js
 
 ```
-import sys
-import os
-
-# Add the project root directory to Python path
-sys.path.append(os.path.dirname(os.path.dirname(os.path.dirname(__file__))))
+document.querySelectorAll(".searchField").forEach((searchField) => {
+  searchField.addEventListener("input", function () {
+    const query = this.value;
+    const module = this.getAttribute("module"); // Get the module attribute value
+    const document_field = this.getAttribute("document_field");
+    const dropdown = this.nextElementSibling;
+    const userList = dropdown.querySelector("#userList");
+    const document_field_hidden = document.getElementById(
+      this.name + "_hidden",
+    );
 
-from core.db_user import create_user
+    // Clear hidden field if search field is empty
+    if (!query || query.length === 0) {
+      document_field_hidden.value = "";
+      document_field.value = "";
+      dropdown.classList.add("hidden");
+      return;
+    }
 
-for i in range(1, 20):
-    username = f"User{i}"
-    name = f"Name{i}"
-    email = f"user{i}.name@gmail.com"
-    password = '12345'
+    if (query.length > 3) {
+      // Construct the URL using the module value
+      const url =
+        `{{ url_for("list", collection="__MODULE__", mode="json") }}`.replace(
+          "__MODULE__",
+          module,
+        );
 
-    # Create user with generated data
-    create_user(username, name, email, password, role='user')
-```
+      // Fetch users from the server based on the search query
+      fetch(`${url}&search=${encodeURIComponent(query)}&limit=100`)
+        .then((response) => response.json())
+        .then((data) => {
+          if (data.status === "ok" && data.message === "success") {
+            dropdown.classList.remove("hidden");
+            console.log(data); // Log the result
+            userList.innerHTML = ""; // Clear the existing list
 
-## main/header.html
+            // Check if data.data is an array before iterating
+            if (Array.isArray(data.data)) {
+              // Append users to the list
+              data.data.forEach((user) => {
+                const userItem = document.createElement("li");
+                userItem.innerHTML = `
+                                    <a href="#" class="flex items-center px-4 py-2 hover:bg-gray-100">
+                                        ${user[document_field]}
+                                    </a>
+                                `;
+                userItem.addEventListener("click", function (event) {
+                  event.preventDefault();
+                  searchField.value = user[document_field];
+                  document_field_hidden.value = user.id;
+                  dropdown.classList.add("hidden");
+                });
+                userList.appendChild(userItem);
+              });
 
-```
-<head>
-  <meta charset="UTF-8" />
-  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
-  <title>Fireworks</title>
-  <link
-    rel="stylesheet"
-    href="{{ url_for('static', filename='css/output.css') }}"
-  />
-  <link
-    rel="stylesheet"
-    href="{{ url_for('static', filename='css/flatpickr.min.css') }}"
-  />
-</head>
+              // Log the length of the userList to verify
+              console.log(
+                `Number of users appended: ${userList.children.length}`,
+              );
+            } else {
+              console.error("Error: data.data is not an array");
+            }
+          } else {
+            console.error("Error: Unexpected response format");
+          }
+        })
+        .catch((error) => {
+          console.error("Error fetching user data:", error); // Log error message
+        });
+    } else {
+      dropdown.classList.add("hidden");
+    }
+  });
+});
 ```
 
-## main/nav.html
+## base/collection/pagination.html
 
 ```
-<!-- Sticky Navigation -->
-<nav
-  class="navbar bg-base-100 flex items-center justify-between p-4 sticky top-0 z-[60] shadow-sm"
->
-  <div class="navbar-start">
-    <a
-      href="{{ url_for('index') }}"
-      class="link text-base-content/90 text-xl font-semibold no-underline flex items-center gap-2"
-    >
-      Fireworks
-    </a>
-  </div>
-  <div class="navbar-end flex items-center gap-2">
-    <!-- User Avatar Dropdown for Desktop -->
-    <div
-      class="dropdown relative inline-flex max-lg:hidden [--auto-close:inside] [--offset:8] [--placement:bottom-end]"
-    >
-      <button
-        type="button"
-        class="dropdown-toggle avatar placeholder"
-        aria-haspopup="menu"
-        aria-expanded="false"
-        aria-label="User menu"
+{% if total != null %}
+<div class="flex flex-wrap items-center justify-between gap-2">
+  <div class="flex flex-wrap items-center gap-2 sm:gap-4">
+    <nav class="flex items-center gap-x-1" aria-label="Pagination">
+      {% if prev != null and prev != None %}
+      <a
+        href="{{collection_url}}?start=0&limit={{limit}}&search={{search}}&id={{id}}&filter={{filter}}"
+        class="btn btn-outline btn-primary"
+        aria-label="First"
       >
-        <div class="bg-primary text-primary-content rounded-full w-10">
-          <span class="text-lg"
-            >{{ current_user.firstname[0] }}{{ current_user.name[0] }}</span
-          >
-        </div>
-      </button>
-      <ul
-        class="dropdown-menu dropdown-open:opacity-100 hidden min-w-48"
-        role="menu"
+        <span
+          class="icon-[tabler--chevrons-left] size-5 rtl:rotate-180 sm:hidden"
+        ></span>
+        <span class="hidden sm:inline">First</span>
+      </a>
+      <a
+        href="{{collection_url}}?start={{prev}}&limit={{limit}}&search={{search}}&id={{id}}&filter={{filter}}"
+        class="btn btn-outline btn-primary"
+        aria-label="Previous"
       >
-        <div class="dropdown-header">
-          <h6 class="text-base-content/90 text-base">
-            {{ current_user.firstname }} {{ current_user.name }}
-          </h6>
-        </div>
-        <a
-          href="{{ url_for('view_document', collection='user', id=current_user.id) }}"
-          class="dropdown-item"
-        >
-          <span class="icon-[tabler--user] size-5"></span>
-          Edit Profile
-        </a>
-        <form action="{{ url_for('logout') }}" method="post">
-          <input type="hidden" name="csrf_token" value="{{ csrf_token() }}" />
-          <button type="submit" class="dropdown-item w-full text-left">
-            <span class="icon-[tabler--logout-2] size-5"></span>
-            Sign Out
-          </button>
-        </form>
-      </ul>
+        <span
+          class="icon-[tabler--chevron-left] size-5 rtl:rotate-180 sm:hidden"
+        ></span>
+        <span class="hidden sm:inline">Previous</span>
+      </a>
+      {% endif %}
+
+      <div class="flex items-center gap-x-1">
+        <!-- Page numbers would go here -->
+      </div>
+
+      {% if next %}
+      <a
+        href="{{collection_url}}?start={{next}}&limit={{limit}}&search={{search}}&id={{id}}&filter={{filter}}"
+        class="btn btn-outline btn-primary"
+        aria-label="Next"
+      >
+        <span class="hidden sm:inline">Next</span>
+        <span
+          class="icon-[tabler--chevron-right] size-5 rtl:rotate-180 sm:hidden"
+        ></span>
+      </a>
+      {% endif %} {% if last != null and last != None %}
+      <a
+        href="{{collection_url}}?start={{last}}&limit={{limit}}&search={{search}}&id={{id}}&filter={{filter}}"
+        class="btn btn-outline btn-primary"
+        aria-label="Last"
+      >
+        <span class="hidden sm:inline">Last</span>
+        <span
+          class="icon-[tabler--chevrons-right] size-5 rtl:rotate-180 sm:hidden"
+        ></span>
+      </a>
+      {% endif %}
+    </nav>
+
+    <div class="text-sm text-gray-500">
+      {% if total != None and total > 0 %} Showing
+      <span class="font-medium">{{start}}</span>
+      to
+      <span class="font-medium">{{end}}</span>
+      of
+      <span class="font-medium">{{total}}</span>
+      results {% else %} No results found {% endif %}
     </div>
-    <!-- Mobile Menu Button -->
+  </div>
+
+  <!-- Limit dropdown -->
+  <div class="dropdown relative inline-flex rtl:[--placement:bottom-end]">
     <button
+      id="dropdown-default"
       type="button"
-      class="btn btn-text max-lg:btn-square lg:hidden"
-      aria-haspopup="dialog"
+      class="dropdown-toggle btn btn-primary btn-outline"
+      aria-haspopup="menu"
       aria-expanded="false"
-      aria-controls="mobile-menu-overlay"
-      data-overlay="#mobile-menu-overlay"
+      aria-label="Limit"
     >
-      <span class="icon-[tabler--menu-2] size-5"></span>
+      Limit
+      <span
+        class="icon-[tabler--chevron-down] dropdown-open:rotate-180 size-4"
+      ></span>
     </button>
-  </div>
-</nav>
-
-<aside
-  id="mobile-menu-overlay"
-  class="overlay drawer drawer-start w-64 max-w-64 lg:fixed lg:top-[57px] lg:bottom-0 lg:left-0 lg:z-40 lg:flex lg:translate-x-0 overlay-open:translate-x-0 -translate-x-full transition-transform duration-300"
-  tabindex="-1"
->
-  <div class="drawer-body w-64 bg-white h-full flex flex-col overflow-hidden">
-    <!-- Fixed Header Section -->
-    <div class="px-2 pt-4 pb-2 border-b border-base-200 flex-none">
-      <ul class="menu w-full space-y-0.5 p-0">
-        <li class="w-full">
-          <a
-            href="{{ url_for('index') }}"
-            class="flex items-center gap-2 px-4 py-2 w-full"
-          >
-            <span class="icon-[tabler--dashboard] size-5 shrink-0"></span>
-            <span class="truncate">Dashboard</span>
-          </a>
-        </li>
-        <li class="w-full">
-          <a
-            href="{{ url_for('dms_chat.chat') }}"
-            class="flex items-center gap-2 px-4 py-2 w-full"
-          >
-            <span class="icon-[tabler--message] size-5 shrink-0"></span>
-            <span class="truncate">Chat</span>
-          </a>
-        </li>
-      </ul>
-    </div>
-
-    <!-- Scrollable Content Section -->
-    <div
-      class="flex-1 overflow-y-auto scrollbar-thin scrollbar-thumb-base-300 scrollbar-track-transparent px-2 py-2"
+    <ul
+      aria-labelledby="dropdown-default"
+      aria-orientation="vertical"
+      class="dropdown-menu dropdown-open:opacity-100 hidden min-w-60"
+      role="menu"
     >
-      <ul
-        class="menu w-full space-y-0.5 [&_.nested-collapse-wrapper]:space-y-0.5 [&_ul]:space-y-0.5 p-0 pb-6"
-      >
-        {% if current_user.is_admin %}
-        <li class="w-full space-y-0.5">
-          <button
-            type="button"
-            class="collapse-toggle w-full flex items-center gap-2 px-4 py-2 collapse-open:bg-base-content/10"
-            id="admin-collapse"
-            aria-expanded="false"
-            aria-controls="admin-collapse-content"
-            data-collapse="#admin-collapse-content"
-          >
-            <span class="icon-[tabler--shield-lock] size-5 shrink-0"></span>
-            <span class="truncate flex-1">Admin</span>
-            <span
-              class="icon-[tabler--chevron-down] collapse-open:rotate-180 size-4 shrink-0 transition-transform duration-300"
-            ></span>
-          </button>
-          <div
-            id="admin-collapse-content"
-            class="collapse hidden w-full overflow-hidden transition-[height] duration-300"
-            aria-labelledby="admin-collapse"
-          >
-            <div>
-              <ul class="menu space-y-0.5 w-full">
-                <li class="w-full">
-                  <a
-                    href="{{ url_for('list', collection='user') }}"
-                    class="text-xs w-full px-4 py-2 hover:bg-base-200 flex items-center gap-2 rounded-lg"
-                  >
-                    <span class="icon-[tabler--users] size-3.5 shrink-0"></span>
-                    <span class="truncate">Manage Users</span>
-                  </a>
-                </li>
-              </ul>
-            </div>
-          </div>
-        </li>
-        {% endif %}
-        <li class="w-full space-y-0.5">
-          <button
-            type="button"
-            class="collapse-toggle w-full flex items-center gap-2 px-4 py-2 collapse-open:bg-base-content/10"
-            id="prompts-collapse"
-            aria-expanded="false"
-            aria-controls="prompts-collapse-content"
-            data-collapse="#prompts-collapse-content"
-          >
-            <span class="icon-[tabler--app-window] size-5 shrink-0"></span>
-            <span class="truncate flex-1">Prompts</span>
-            <span
-              class="icon-[tabler--chevron-down] collapse-open:rotate-180 size-4 shrink-0 transition-transform duration-300"
-            ></span>
-          </button>
-          <div
-            id="prompts-collapse-content"
-            class="collapse hidden w-full overflow-hidden transition-[height] duration-300"
-            aria-labelledby="prompts-collapse"
-          >
-            <div>
-              <ul class="menu space-y-0.5 w-full" id="prompts-list">
-                <li class="w-full">
-                  <a
-                    href="{{ url_for('list', collection='prompts') }}"
-                    class="text-xs view-all w-full px-4 py-2 hover:bg-base-200 flex items-center rounded-lg"
-                  >
-                    <span class="truncate">View All Prompts</span>
-                  </a>
-                </li>
-                <li class="w-full">
-                  <a
-                    href="{{ url_for('doc', name='prompt') }}"
-                    class="text-xs w-full px-4 py-2 hover:bg-base-200 flex items-center gap-2 text-primary rounded-lg group"
-                  >
-                    <span class="icon-[tabler--plus] size-3.5 shrink-0"></span>
-                    <span class="truncate">New Prompt</span>
-                  </a>
-                </li>
-                <li class="w-full border-t border-base-200 my-1"></li>
-                {% for prompt in prompts %}
-                <li class="w-full">
-                  <div
-                    class="flex items-center gap-2 w-full px-4 py-2 hover:bg-base-200 group rounded-lg"
-                  >
-                    <a
-                      href="{{ url_for('chat.prompt', id=prompt.id) }}"
-                      class="flex-1 min-w-0"
-                      title="{{ prompt.name }}"
+      <li>
+        <a
+          class="dropdown-item"
+          href="{{collection_url}}?start=0&limit=5&search={{search}}&filter={{filter}}"
+        >
+          5 Items
+        </a>
+      </li>
+      <li>
+        <a
+          class="dropdown-item"
+          href="{{collection_url}}?start=0&limit=10&search={{search}}&filter={{filter}}"
+        >
+          10 Items
+        </a>
+      </li>
+      <li>
+        <a
+          class="dropdown-item"
+          href="{{collection_url}}?start=0&limit=20&search={{search}}&filter={{filter}}"
+        >
+          20 Items
+        </a>
+      </li>
+      <li>
+        <a
+          class="dropdown-item"
+          href="{{collection_url}}?start=0&limit=50&search={{search}}&filter={{filter}}"
+        >
+          50 Items
+        </a>
+      </li>
+    </ul>
+  </div>
+</div>
+{% endif %}
+```
+
+## base/collection/collection.html
+
+```
+<!doctype html>
+<html lang="en" class="overflow-y-scroll">
+  {% include('/main/header.html') %}
+  <body class="bg-gray-50 min-h-screen">
+    {% include('/main/nav.html') %}
+
+    <section class="p-4 sm:p-6 flex items-center lg:ml-64">
+      <div class="max-w-screen-xl mx-auto px-2 sm:px-4 lg:px-12 w-full">
+        <div
+          class="relative bg-white shadow-md dark:bg-gray-800 sm:rounded-lg p-3 sm:p-4"
+        >
+          <div class="flex flex-col gap-4">
+            <div
+              class="flex flex-row justify-between items-center gap-2 sm:gap-4"
+            >
+              <div class="flex-1">
+                <form
+                  method="GET"
+                  action="{{ url_for('list', collection=collection_name, start=start, limit=limit, filter=filter) }}"
+                >
+                  <div class="relative">
+                    <div
+                      class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none"
                     >
-                      <span class="truncate text-xs block"
-                        >{{ prompt.name }}</span
+                      <svg
+                        class="w-4 h-4 text-gray-500"
+                        fill="currentColor"
+                        viewBox="0 0 20 20"
                       >
-                    </a>
-                    <span
-                      class="text-[10px] text-gray-500 whitespace-nowrap shrink-0"
-                      >{{ format_time_ago(prompt.modified_date) }}</span
-                    >
-                    <a
-                      href="{{ url_for('prompt.edit', id=prompt.id) }}"
-                      class="shrink-0 opacity-0 group-hover:opacity-100 transition-opacity"
-                      aria-label="Edit prompt"
-                      title="Edit prompt"
-                    >
-                      <span
-                        class="icon-[tabler--edit] size-3.5 text-primary"
-                      ></span>
-                    </a>
+                        <path
+                          fill-rule="evenodd"
+                          d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z"
+                          clip-rule="evenodd"
+                        ></path>
+                      </svg>
+                    </div>
+                    <input
+                      type="text"
+                      name="search"
+                      class="w-full max-w-md pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"
+                      placeholder="Search"
+                      value="{{ search }}"
+                    />
                   </div>
-                </li>
-                {% endfor %}
-              </ul>
+                </form>
+              </div>
+
+              <div class="flex-none">
+                {% if show_new_button %}
+                <a
+                  href="{{ url_for('doc',name = collection_name) }}"
+                  class="btn btn-primary whitespace-nowrap"
+                >
+                  New
+                </a>
+                {% endif %}
+              </div>
             </div>
+
+            {% include('/base/collection/table.html') %}
           </div>
-        </li>
-        <li class="w-full space-y-0.5">
+        </div>
+      </div>
+    </section>
+
+    <!-- Delete Modal -->
+    <div
+      id="deleteModal"
+      tabindex="-1"
+      class="hidden overflow-y-auto overflow-x-hidden bg-gray-600 bg-opacity-65 backdrop-blur-sm fixed top-0 right-0 left-0 z-50 flex justify-center items-center w-full h-full"
+    >
+      <div id="modalContent" class="relative p-4 w-full max-w-md max-h-full">
+        <div class="relative bg-white rounded-lg shadow">
           <button
             type="button"
-            class="collapse-toggle w-full flex items-center gap-2 px-4 py-2 collapse-open:bg-base-content/10"
-            id="history-collapse"
-            aria-expanded="false"
-            aria-controls="history-collapse-content"
-            data-collapse="#history-collapse-content"
+            class="absolute top-3 right-2.5 text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center"
+            id="closeModal"
           >
-            <span class="icon-[tabler--clock] size-5 shrink-0"></span>
-            <span class="truncate flex-1">History</span>
-            <span
-              class="icon-[tabler--chevron-down] collapse-open:rotate-180 size-4 shrink-0 transition-transform duration-300"
-            ></span>
+            <svg
+              class="w-3 h-3"
+              aria-hidden="true"
+              xmlns="http://www.w3.org/2000/svg"
+              fill="none"
+              viewBox="0 0 14 14"
+            >
+              <path
+                stroke="currentColor"
+                stroke-linecap="round"
+                stroke-linejoin="round"
+                stroke-width="2"
+                d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"
+              />
+            </svg>
+            <span class="sr-only">Close modal</span>
           </button>
-          <div
-            id="history-collapse-content"
-            class="collapse hidden w-full overflow-hidden transition-[height] duration-300"
-            aria-labelledby="history-collapse"
-          >
-            <div>
-              <ul class="menu space-y-0.5 w-full" id="history-list">
-                <li class="w-full">
-                  <a
-                    href="{{ url_for('list', collection='history') }}"
-                    class="text-xs view-all w-full px-4 py-2 hover:bg-base-200 flex items-center rounded-lg"
-                  >
-                    <span class="truncate">View All History</span>
-                  </a>
-                </li>
-                <li class="w-full">
-                  <button
-                    type="button"
-                    class="text-xs w-full px-4 py-2 hover:bg-base-200 flex items-center gap-2 text-error rounded-lg group"
-                    onclick="handleDeleteHistory()"
-                  >
-                    <span class="icon-[tabler--trash] size-3.5 shrink-0"></span>
-                    <span class="truncate">Delete Documents</span>
-                  </button>
-                </li>
-                <li class="w-full border-t border-base-200 my-1"></li>
-                {% for item in history %}
-                <li class="w-full">
-                  <a
-                    href="{{ url_for('chat.history', id=item.id) }}"
-                    class="flex items-center gap-2 w-full px-4 py-2 hover:bg-base-200 rounded-lg"
-                    title="{{ item.first_message or 'Untitled Chat' }}"
-                  >
-                    <span class="truncate flex-1 text-xs"
-                      >{{ item.first_message or "Untitled Chat" }}</span
-                    >
-                    <span
-                      class="text-[10px] text-gray-500 whitespace-nowrap shrink-0"
-                      >{{ format_time_ago(item.modified_date) }}</span
-                    >
-                  </a>
-                </li>
-                {% endfor %}
-              </ul>
-            </div>
+          <div class="p-4 md:p-5 text-center">
+            <svg
+              class="mx-auto mb-4 text-gray-400 w-12 h-12"
+              aria-hidden="true"
+              xmlns="http://www.w3.org/2000/svg"
+              fill="none"
+              viewBox="0 0 20 20"
+            >
+              <path
+                stroke="currentColor"
+                stroke-linecap="round"
+                stroke-linejoin="round"
+                stroke-width="2"
+                d="M10 11V6m0 8h.01M19 10a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z"
+              />
+            </svg>
+            <h3 class="mb-5 text-lg font-normal text-gray-500">
+              Are you sure?
+            </h3>
+            <button
+              id="confirmDelete"
+              type="button"
+              class="text-white bg-red-600 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 font-medium rounded-lg text-sm inline-flex items-center px-5 py-2.5 text-center"
+            >
+              Yes, I'm sure
+            </button>
+            <button
+              id="cancelDelete"
+              type="button"
+              class="py-2.5 px-5 ms-3 text-sm font-medium text-gray-900 focus:outline-none bg-white rounded-lg border border-gray-200 hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-4 focus:ring-gray-100"
+            >
+              No, cancel
+            </button>
           </div>
-        </li>
-      </ul>
-    </div>
-
-    <!-- Fixed Footer Section -->
-    <div class="flex-none border-t border-base-200 px-2 pt-4 pb-2 lg:hidden">
-      <form action="{{ url_for('logout') }}" method="post" class="w-full">
-        <input type="hidden" name="csrf_token" value="{{ csrf_token() }}" />
-        <button
-          type="submit"
-          class="btn btn-ghost w-full justify-start gap-2 text-error"
-        >
-          <span class="icon-[tabler--logout-2] size-5 shrink-0"></span>
-          <span class="truncate">Sign Out</span>
-        </button>
-      </form>
+        </div>
+      </div>
     </div>
-  </div>
-</aside>
 
-<script>
-  // Add error notification function
-  function showErrorNotification(message) {
-    console.error(message);
-  }
-
-  // Function to format date
-  function formatDate(dateString) {
-    let date;
-    if (typeof dateString === "string") {
-      // Try to parse the formatted date string from mongoToJson (DD.MM.YYYY HH:MM)
-      const parts = dateString.split(" ");
-      if (parts.length === 2) {
-        const [datePart, timePart] = parts;
-        const [day, month, year] = datePart.split(".");
-        const [hours, minutes] = timePart.split(":");
-        date = new Date(year, month - 1, day, hours, minutes);
-      } else {
-        date = new Date(dateString);
-      }
-    } else if (dateString?.$date) {
-      // Handle MongoDB ISODate format
-      date = new Date(dateString.$date);
-    } else {
-      return "";
-    }
+    <script src="{{ url_for('static', filename='js/lib/flyonui.js') }}"></script>
+    <script>
+      document.querySelectorAll(".delete-btn").forEach((button) => {
+        button.addEventListener("click", function () {
+          const id = this.dataset.id;
+          const type = this.dataset.type;
+          const modal = document.getElementById("deleteModal");
+          const modalContent = document.getElementById("modalContent");
+          const confirmDelete = document.getElementById("confirmDelete");
+          const cancelDelete = document.getElementById("cancelDelete");
+          const closeButton = document.getElementById("closeModal");
 
-    const now = new Date();
-    const diffMs = now - date;
-    const diffMins = Math.floor(diffMs / 60000);
-    const diffHours = Math.floor(diffMins / 60);
-    const diffDays = Math.floor(diffHours / 24);
+          // Show modal
+          modal.classList.remove("hidden");
 
-    if (diffMins < 1) {
-      return "just now";
-    } else if (diffMins < 60) {
-      return `${diffMins}m ago`;
-    } else if (diffHours < 24) {
-      return `${diffHours}h ago`;
-    } else if (diffDays === 1) {
-      return "yesterday";
-    } else if (diffDays < 7) {
-      return `${diffDays}d ago`;
-    } else {
-      return date.toLocaleDateString();
-    }
-  }
+          // Handle delete confirmation
+          const handleDelete = () => {
+            const url = "{{ url_for('delete_document') }}";
 
-  // Function to fetch and update nav items with improved error handling
-  async function updateNavItems() {
-    try {
-      const response = await fetch("{{ url_for('dms_chat.get_nav_items') }}");
-      if (!response.ok) {
-        throw new Error(`Failed to fetch nav items: ${response.status}`);
-      }
+            fetch(url + "?id=" + id + "&type=" + type, {
+              method: "GET",
+              headers: {
+                "X-CSRFToken": "{{ csrf_token() }}",
+              },
+            })
+              .then((response) => response.json())
+              .then((result) => {
+                if (result.status === "ok") {
+                  // Remove the row from the table
+                  const row = button.closest("tr");
+                  row.remove();
 
-      const data = await response.json();
-      console.log("Total history items received:", data.history.length);
+                  // Show success notification
+                  const notification = document.createElement("div");
+                  notification.className =
+                    "fixed bottom-4 right-4 bg-green-500 text-white px-6 py-3 rounded shadow-lg z-50";
+                  notification.textContent = "Document deleted successfully";
+                  document.body.appendChild(notification);
+                  setTimeout(() => notification.remove(), 3000);
+                } else {
+                  // Show error notification
+                  const notification = document.createElement("div");
+                  notification.className =
+                    "fixed bottom-4 right-4 bg-red-500 text-white px-6 py-3 rounded shadow-lg z-50";
+                  notification.textContent =
+                    "Error deleting document: " + result.message;
+                  document.body.appendChild(notification);
+                  setTimeout(() => notification.remove(), 3000);
+                }
+              })
+              .catch((error) => {
+                console.error("Error:", error);
+                // Show error notification
+                const notification = document.createElement("div");
+                notification.className =
+                  "fixed bottom-4 right-4 bg-red-500 text-white px-6 py-3 rounded shadow-lg z-50";
+                notification.textContent = "Error deleting document";
+                document.body.appendChild(notification);
+                setTimeout(() => notification.remove(), 3000);
+              })
+              .finally(() => {
+                modal.classList.add("hidden");
+                cleanup();
+              });
+          };
 
-      // Validate data structure
-      if (
-        !data ||
-        !Array.isArray(data.prompts) ||
-        !Array.isArray(data.history)
-      ) {
-        throw new Error("Invalid navigation data structure");
-      }
+          // Handle modal close
+          const handleClose = () => {
+            modal.classList.add("hidden");
+            cleanup();
+          };
 
-      // Update prompts list
-      const promptsList = document.getElementById("prompts-list");
-      if (promptsList) {
-        // Keep the view all and new prompt links
-        const staticLinks = promptsList.querySelectorAll("li:nth-child(-n+3)");
-        promptsList.innerHTML = "";
-        staticLinks.forEach((link) =>
-          promptsList.appendChild(link.cloneNode(true)),
-        );
+          // Cleanup event listeners
+          const cleanup = () => {
+            confirmDelete.removeEventListener("click", handleDelete);
+            cancelDelete.removeEventListener("click", handleClose);
+            closeButton.removeEventListener("click", handleClose);
+            modal.removeEventListener("click", handleOutsideClick);
+          };
 
-        // Add prompts with error handling
-        data.prompts.forEach((prompt) => {
-          try {
-            if (!prompt?._id?.$oid || !prompt?.name) {
-              console.warn("Invalid prompt data:", prompt);
-              return;
+          // Handle click outside modal
+          const handleOutsideClick = (event) => {
+            if (!modalContent.contains(event.target)) {
+              handleClose();
             }
+          };
 
-            console.log("Prompt modified date:", prompt.modified_date);
-            const formattedDate = formatDate(prompt.modified_date);
-            console.log("Formatted date:", formattedDate);
-
-            const li = document.createElement("li");
-            li.className = "w-full";
-            li.innerHTML = `
-              <div class="flex items-center gap-2 w-full px-4 py-2 hover:bg-base-200 group rounded-lg">
-                <a href="/chat/prompt/${prompt._id.$oid}" class="flex-1 min-w-0" title="${prompt.name}">
-                  <span class="truncate text-xs block">${prompt.name}</span>
-                </a>
-                <span class="text-[10px] text-gray-500 whitespace-nowrap shrink-0">${formattedDate}</span>
-                <a href="/d/prompt/${prompt._id.$oid}" class="shrink-0 opacity-0 group-hover:opacity-100 transition-opacity" aria-label="Edit prompt" title="Edit prompt">
-                  <span class="icon-[tabler--edit] size-3.5 text-primary"></span>
-                </a>
-              </div>
-            `;
-            promptsList.appendChild(li);
-          } catch (itemError) {
-            console.warn("Error adding prompt item:", itemError);
-          }
+          // Add event listeners
+          confirmDelete.addEventListener("click", handleDelete);
+          cancelDelete.addEventListener("click", handleClose);
+          closeButton.addEventListener("click", handleClose);
+          modal.addEventListener("click", handleOutsideClick);
         });
-      }
-
-      // Update history list
-      const historyList = document.getElementById("history-list");
-      if (historyList) {
-        // Keep the view all link and delete button
-        const staticLinks = historyList.querySelectorAll("li:nth-child(-n+3)");
-        historyList.innerHTML = "";
-        staticLinks.forEach((link) =>
-          historyList.appendChild(link.cloneNode(true)),
-        );
+      });
+    </script>
+  </body>
+</html>
+```
 
-        let addedCount = 0;
-        // Add history items with error handling
-        data.history.forEach((item) => {
-          try {
-            if (!item?._id?.$oid) {
-              return;
-            }
+## base/collection/table.html
 
-            const li = document.createElement("li");
-            li.className = "w-full";
-            li.innerHTML = `
-              <a href="/chat/history/${item._id.$oid}" 
-                 class="flex items-center gap-2 w-full px-4 py-2 hover:bg-base-200 rounded-lg"
-                 title="${item.first_message || "Untitled Chat"}">
-                <span class="truncate flex-1 text-xs">${item.first_message || "Untitled Chat"}</span>
-                <span class="text-[10px] text-gray-500 whitespace-nowrap shrink-0">${formatDate(item.modified_date)}</span>
+```
+<div class="flex flex-col gap-4">
+  {% include('/base/collection/pagination.html') %}
+  <div
+    class="overflow-x-auto rounded-lg border border-slate-200 dark:border-slate-700"
+  >
+    <table class="table border-collapse w-full">
+      <thead>
+        <tr>
+          {% for header in table_header %}
+          <th
+            class="font-bold {{header.class}} px-4 py-3 border-b border-r border-slate-200 dark:border-slate-700 last:border-r-0"
+          >
+            {{header.label}}
+          </th>
+          {% endfor %}
+          <th
+            class="w-16 px-4 py-3 text-right border-b border-r border-slate-200 dark:border-slate-700 last:border-r-0 sticky right-0 bg-white z-10"
+          >
+            Actions
+          </th>
+        </tr>
+      </thead>
+      <tbody>
+        {% for document in table_content %}
+        <tr
+          class="{% if not loop.last %}border-b border-slate-200 dark:border-slate-700{% endif %}"
+        >
+          {% for field in document %}
+          <td
+            class="font-normal leading-normal px-4 py-2 border-r border-slate-200 dark:border-slate-700 last:border-r-0"
+          >
+            {% if field.type == 'ButtonField' %}
+            <div class="flex justify-start items-center">
+              <a href="{{field.link}}/{{field.id}}" class="w-full">
+                <button
+                  type="button"
+                  class="btn btn-primary btn-outline btn-sm {{field.class}} truncate"
+                >
+                  {{field.label}}
+                </button>
               </a>
-            `;
-            historyList.appendChild(li);
-            addedCount++;
-          } catch (itemError) {
-            console.warn("Error adding history item:", itemError);
-          }
-        });
-        console.log("Actually added history items:", addedCount);
-      }
-    } catch (error) {
-      console.error("Error updating navigation:", error);
-      showErrorNotification(
-        "Failed to update navigation. Please refresh the page.",
-      );
-    }
-  }
+            </div>
+            {% else %} {{field.value}} {% endif %}
+          </td>
+          {% endfor %}
+          <td class="w-16 px-4 py-2 text-right sticky right-0 bg-white">
+            <div class="flex gap-2 justify-end">
+              <a
+                href="{{document_url}}/{{document[0].id}}"
+                class="btn btn-primary btn-sm btn-outline"
+              >
+                <span class="icon-[tabler--edit] size-4"></span>
+              </a>
+              <button
+                type="button"
+                class="btn btn-error btn-sm btn-outline delete-btn"
+                data-id="{{document[0].id}}"
+                data-type="{{collection_name}}"
+              >
+                <span class="icon-[tabler--trash] size-4"></span>
+              </button>
+            </div>
+          </td>
+        </tr>
+        {% endfor %}
+      </tbody>
+    </table>
+  </div>
+  {% include('/base/collection/pagination.html') %}
+</div>
+```
 
-  // Function to handle history deletion
-  async function handleDeleteHistory() {
-    if (
-      !confirm(
-        "Are you sure you want to delete all history documents? This action cannot be undone.",
-      )
-    ) {
-      return;
-    }
+## testing/create_users.py
 
-    try {
-      const response = await fetch(
-        "{{ url_for('dms_chat.delete_all_history') }}",
-        {
-          method: "POST",
-          headers: {
-            "X-CSRFToken": "{{ csrf_token() }}",
-          },
-        },
-      );
+```
+import sys
+import os
 
-      if (!response.ok) {
-        throw new Error("Failed to delete history");
-      }
+# Add the project root directory to Python path
+sys.path.append(os.path.dirname(os.path.dirname(os.path.dirname(__file__))))
 
-      const result = await response.json();
+from core.db_user import create_user
 
-      // Check if we're on a history page or list history page
-      const currentPath = window.location.pathname;
-      if (
-        currentPath.includes("/chat/history/") ||
-        currentPath.includes("/list/history")
-      ) {
-        // Redirect to index page
-        window.location.href = "/";
-        return;
-      }
+for i in range(1, 20):
+    username = f"User{i}"
+    name = f"Name{i}"
+    email = f"user{i}.name@gmail.com"
+    password = '12345'
 
-      // Update the navigation items
-      await updateNavItems();
-    } catch (error) {
-      console.error("Error deleting history:", error);
-      showErrorNotification("Failed to delete history. Please try again.");
-    }
-  }
+    # Create user with generated data
+    create_user(username, name, email, password, role='user')
+```
 
-  // Initialize nav items when the page loads
-  document.addEventListener("DOMContentLoaded", updateNavItems);
+## chat/chat_messages_rendered.html
 
-  // Update nav items periodically with a debounce
-  let updateTimeout = null;
-  function debouncedUpdate() {
-    if (updateTimeout) {
-      clearTimeout(updateTimeout);
-    }
-    updateTimeout = setTimeout(updateNavItems, 500);
-  }
+```
+<div
+  id="chat_messages"
+  class="ml-2 mr-2 mt-3 mb-2 md:ml-16 md:mr-16 md:mt-6 overflow-auto flex flex-col space-y-2"
+>
+  {% for message in config.messages %} {% if message.role =='user' %}
+  <div class="flex space-x-4 mb-4">
+    <div
+      class="flex justify-center items-center w-10 h-10 bg-gray-500 text-white rounded-full"
+    >
+      {{ config.firstname[0] if config.firstname else '' }}{{ config.name[0] if
+      config.name else '' }}
+    </div>
+    <div
+      class="message content bg-neutral-content rounded-lg p-4 flex-1 min-w-0 break-words"
+      id="message-{{ loop.index }}"
+    ></div>
+  </div>
+  {% endif %} {% if message.role =='assistant' %}
+  <div class="flex space-x-4 mb-4">
+    <div
+      class="flex justify-center items-center w-10 h-10 bg-gray-600 text-white rounded-full"
+    >
+      <svg
+        xmlns="http://www.w3.org/2000/svg"
+        fill="none"
+        viewBox="0 0 24 24"
+        stroke-width="1.5"
+        stroke="currentColor"
+        class="w-6 h-6"
+      >
+        <path
+          stroke-linecap="round"
+          stroke-linejoin="round"
+          d="M9.813 15.904 9 18.75l-.813-2.846a4.5 4.5 0 0 0-3.09-3.09L2.25 12l2.846-.813a4.5 4.5 0 0 0 3.09-3.09L9 5.25l.813 2.846a4.5 4.5 0 0 0 3.09 3.09L15.75 12l-2.846.813a4.5 4.5 0 0 0-3.09 3.09ZM18.259 8.715 18 9.75l-.259-1.035a3.375 3.375 0 0 0-2.455-2.456L14.25 6l1.036-.259a3.375 3.375 0 0 0 2.455-2.456L18 2.25l.259 1.035a3.375 3.375 0 0 0 2.456 2.456L21.75 6l-1.035.259a3.375 3.375 0 0 0-2.456 2.456ZM16.894 20.567 16.5 21.75l-.394-1.183a2.25 2.25 0 0 0-1.423-1.423L13.5 18.75l1.183-.394a2.25 2.25 0 0 0 1.423-1.423l.394-1.183.394 1.183a2.25 2.25 0 0 0 1.423 1.423l1.183.394-1.183.394a2.25 2.25 0 0 0-1.423 1.423Z"
+        />
+      </svg>
+    </div>
+    <div
+      class="message content bg-secondary-content rounded-lg p-4 flex-1 min-w-0 break-words"
+      id="message-{{ loop.index }}"
+    ></div>
+  </div>
+  {% endif %} {% endfor %}
+</div>
 
-  // Update every 30 seconds, but use debouncing to prevent overlapping calls
-  setInterval(debouncedUpdate, 30000);
+<script>
+  // Process all messages after the page loads
+  document.addEventListener('DOMContentLoaded', function() {
+    {% for message in config.messages %}
+      const messageContent = {{message.content|tojson}};
+      const container = document.getElementById('message-{{ loop.index }}');
+      if (container) {
+        appendData(messageContent, container);
+      }
+    {% endfor %}
+  });
 </script>
 ```
 
-## base/collection/pagination.html
+## chat/user_message_template.html
 
 ```
-{% if total != null %}
-<div class="flex flex-wrap items-center justify-between gap-2">
-  <div class="flex flex-wrap items-center gap-2 sm:gap-4">
-    <nav class="flex items-center gap-x-1" aria-label="Pagination">
-      {% if prev != null and prev != None %}
-      <a
-        href="{{collection_url}}?start=0&limit={{limit}}&search={{search}}&id={{id}}&filter={{filter}}"
-        class="btn btn-outline btn-primary"
-        aria-label="First"
-      >
-        <span
-          class="icon-[tabler--chevrons-left] size-5 rtl:rotate-180 sm:hidden"
-        ></span>
-        <span class="hidden sm:inline">First</span>
-      </a>
-      <a
-        href="{{collection_url}}?start={{prev}}&limit={{limit}}&search={{search}}&id={{id}}&filter={{filter}}"
-        class="btn btn-outline btn-primary"
-        aria-label="Previous"
-      >
-        <span
-          class="icon-[tabler--chevron-left] size-5 rtl:rotate-180 sm:hidden"
-        ></span>
-        <span class="hidden sm:inline">Previous</span>
-      </a>
-      {% endif %}
+<div class="flex space-x-4 mb-6">
+  <div
+    class="flex justify-center items-center w-10 h-10 bg-gray-500 text-white rounded-full flex-shrink-0"
+  >
+    {{ config.firstname[0] if config.firstname else '' }}{{ config.name[0] if
+    config.name else '' }}
+  </div>
+  <div
+    class="message content bg-neutral-content rounded-lg p-4 flex-1 min-w-0 break-words"
+  ></div>
+</div>
+```
 
-      <div class="flex items-center gap-x-1">
-        <!-- Page numbers would go here -->
+## chat/code_block_template.html
+
+```
+<div class="flex flex-col w-full">
+    <div class="h-8 bg-gray-800 w-full flex rounded-t justify-between items-center px-4">
+      <!-- Language Info Placeholder -->
+      <span class="text-sm text-white language-info"></span>
+
+      <div class="flex flex-row items-center gap-2">
+        <span class="copied hidden text-sm font-extralight text-green-400">copied!</span>
+        <!-- Copy Button -->
+      <button class="h-4 w-4 copy-btn flex items-center justify-center text-white hover:text-green-400">
+        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
+          <path stroke-linecap="round" stroke-linejoin="round" d="M15.666 3.888A2.25 2.25 0 0 0 13.5 2.25h-3c-1.03 0-1.9.693-2.166 1.638m7.332 0c.055.194.084.4.084.612v0a.75.75 0 0 1-.75.75H9a.75.75 0 0 1-.75-.75v0c0-.212.03-.418.084-.612m7.332 0c.646.049 1.288.11 1.927.184 1.1.128 1.907 1.077 1.907 2.185V19.5a2.25 2.25 0 0 1-2.25 2.25H6.75A2.25 2.25 0 0 1 4.5 19.5V6.257c0-1.108.806-2.057 1.907-2.185a48.208 48.208 0 0 1 1.927-.184" />
+        </svg>
+      </button>
       </div>
+      
+    </div>
+    <div class="w-full">
+      <pre class="bg-gray-700 text-sm text-white rounded-b p-2 overflow-x-auto whitespace-pre-wrap">
+      </pre>
+    </div>
+  </div>
+```
 
-      {% if next %}
-      <a
-        href="{{collection_url}}?start={{next}}&limit={{limit}}&search={{search}}&id={{id}}&filter={{filter}}"
-        class="btn btn-outline btn-primary"
-        aria-label="Next"
+## chat/chat_prompts.html
+
+```
+{% if config.messages | length == 0 %}
+<div
+  id="prompts"
+  class="ml-2 mr-2 mb-2 md:ml-16 md:mr-16 flex flex-col gap-4 mt-8"
+>
+  {% if config.history %}
+  <h3
+    class="text-center text-xl font-semibold text-gray-700 dark:text-gray-300"
+  >
+    Last Chats
+  </h3>
+  <div class="flex flex-row flex-wrap justify-center gap-4">
+    {% for item in config.history %}
+    <a href="/chat/history/{{ item.id }}" class="no-underline">
+      <div
+        id="history_{{ loop.index }}"
+        class="relative h-12 w-64 flex items-center justify-center bg-indigo-500 hover:bg-indigo-700 text-white rounded-xl cursor-pointer px-4"
       >
-        <span class="hidden sm:inline">Next</span>
-        <span
-          class="icon-[tabler--chevron-right] size-5 rtl:rotate-180 sm:hidden"
-        ></span>
-      </a>
-      {% endif %} {% if last != null and last != None %}
-      <a
-        href="{{collection_url}}?start={{last}}&limit={{limit}}&search={{search}}&id={{id}}&filter={{filter}}"
-        class="btn btn-outline btn-primary"
-        aria-label="Last"
+        <span class="truncate">{{ item.first_message }}</span>
+      </div>
+    </a>
+    {% endfor %}
+  </div>
+  <hr class="h-px my-2 bg-gray-200 border-0 dark:bg-gray-700" />
+  {% endif %} {% if config.latest_prompts %}
+  <h3
+    class="text-center text-xl font-semibold text-gray-700 dark:text-gray-300"
+  >
+    Latest Prompts
+  </h3>
+  <div class="flex flex-row flex-wrap justify-center gap-4">
+    {% for prompt in config.latest_prompts %}
+    <a href="/chat/prompt/{{ prompt.id }}" class="no-underline">
+      <div
+        id="prompt_{{ loop.index }}"
+        class="relative h-12 w-64 flex items-center justify-center bg-indigo-500 hover:bg-indigo-700 text-white rounded-xl cursor-pointer px-4"
       >
-        <span class="hidden sm:inline">Last</span>
-        <span
-          class="icon-[tabler--chevrons-right] size-5 rtl:rotate-180 sm:hidden"
-        ></span>
-      </a>
-      {% endif %}
-    </nav>
-
-    <div class="text-sm text-gray-500">
-      {% if total != None and total > 0 %} Showing
-      <span class="font-medium">{{start}}</span>
-      to
-      <span class="font-medium">{{end}}</span>
-      of
-      <span class="font-medium">{{total}}</span>
-      results {% else %} No results found {% endif %}
+        <span class="truncate">{{ prompt.name }}</span>
+      </div>
+    </a>
+    {% endfor %}
+  </div>
+  {% endif %} {% if not config.history and not config.latest_prompts %}
+  <div class="flex flex-row flex-wrap justify-center gap-4">
+    <div
+      class="prompt relative h-12 w-64 flex items-center justify-center bg-indigo-500 hover:bg-indigo-700 text-white rounded-xl cursor-pointer px-4"
+    >
+      <span class="truncate">Wer war Ada Lovelace?</span>
+    </div>
+    <div
+      class="group relative prompt h-12 w-64 flex items-center justify-center bg-indigo-500 hover:bg-indigo-700 text-white rounded-xl cursor-pointer px-4"
+    >
+      <span class="truncate">Schreibe eine index.html</span>
     </div>
   </div>
+  {% endif %}
+</div>
+{% endif %}
+```
 
-  <!-- Limit dropdown -->
-  <div class="dropdown relative inline-flex rtl:[--placement:bottom-end]">
-    <button
-      id="dropdown-default"
-      type="button"
-      class="dropdown-toggle btn btn-primary btn-outline"
-      aria-haspopup="menu"
-      aria-expanded="false"
-      aria-label="Limit"
-    >
-      Limit
-      <span
-        class="icon-[tabler--chevron-down] dropdown-open:rotate-180 size-4"
-      ></span>
-    </button>
-    <ul
-      aria-labelledby="dropdown-default"
-      aria-orientation="vertical"
-      class="dropdown-menu dropdown-open:opacity-100 hidden min-w-60"
-      role="menu"
+## chat/bot_message_template.html
+
+```
+<div class="flex space-x-4 mb-6">
+  <div
+    class="flex justify-center items-center w-10 h-10 bg-gray-600 text-white rounded-full flex-shrink-0"
+  >
+    <svg
+      xmlns="http://www.w3.org/2000/svg"
+      fill="none"
+      viewBox="0 0 24 24"
+      stroke-width="1.5"
+      stroke="currentColor"
+      class="w-6 h-6"
     >
-      <li>
-        <a
-          class="dropdown-item"
-          href="{{collection_url}}?start=0&limit=5&search={{search}}&filter={{filter}}"
-        >
-          5 Items
-        </a>
-      </li>
-      <li>
-        <a
-          class="dropdown-item"
-          href="{{collection_url}}?start=0&limit=10&search={{search}}&filter={{filter}}"
-        >
-          10 Items
-        </a>
-      </li>
-      <li>
-        <a
-          class="dropdown-item"
-          href="{{collection_url}}?start=0&limit=20&search={{search}}&filter={{filter}}"
+      <path
+        stroke-linecap="round"
+        stroke-linejoin="round"
+        d="M9.813 15.904 9 18.75l-.813-2.846a4.5 4.5 0 0 0-3.09-3.09L2.25 12l2.846-.813a4.5 4.5 0 0 0 3.09-3.09L9 5.25l.813 2.846a4.5 4.5 0 0 0 3.09 3.09L15.75 12l-2.846.813a4.5 4.5 0 0 0-3.09 3.09ZM18.259 8.715 18 9.75l-.259-1.035a3.375 3.375 0 0 0-2.455-2.456L14.25 6l1.036-.259a3.375 3.375 0 0 0 2.455-2.456L18 2.25l.259 1.035a3.375 3.375 0 0 0 2.456 2.456L21.75 6l-1.035.259a3.375 3.375 0 0 0-2.456 2.456ZM16.894 20.567 16.5 21.75l-.394-1.183a2.25 2.25 0 0 0-1.423-1.423L13.5 18.75l1.183-.394a2.25 2.25 0 0 0 1.423-1.423l.394-1.183.394 1.183a2.25 2.25 0 0 0 1.423 1.423l1.183.394-1.183.394a2.25 2.25 0 0 0-1.423 1.423Z"
+      />
+    </svg>
+  </div>
+  <div class="flex-1 min-w-0">
+    <div
+      class="message content bg-secondary-content rounded-lg p-4 break-words"
+    ></div>
+    <div class="flex justify-start mt-2">
+      <button
+        class="copy-btn flex items-center gap-1 text-sm text-gray-500 hover:text-gray-700 active:scale-95 transition-all duration-100 rounded px-2 py-1 hover:bg-gray-100"
+      >
+        <svg
+          class="w-4 h-4 copy-icon"
+          xmlns="http://www.w3.org/2000/svg"
+          fill="none"
+          viewBox="0 0 24 24"
+          stroke-width="1.5"
+          stroke="currentColor"
         >
-          20 Items
-        </a>
-      </li>
-      <li>
-        <a
-          class="dropdown-item"
-          href="{{collection_url}}?start=0&limit=50&search={{search}}&filter={{filter}}"
+          <path
+            stroke-linecap="round"
+            stroke-linejoin="round"
+            d="M15.666 3.888A2.25 2.25 0 0013.5 2.25h-3c-1.03 0-1.9.693-2.166 1.638m7.332 0c.055.194.084.4.084.612v0a.75.75 0 01-.75.75H9a.75.75 0 01-.75-.75v0c0-.212.03-.418.084-.612m7.332 0c.646.049 1.288.11 1.927.184 1.1.128 1.907 1.077 1.907 2.185V19.5a2.25 2.25 0 01-2.25 2.25H6.75A2.25 2.25 0 014.5 19.5V6.257c0-1.108.806-2.057 1.907-2.185a48.208 48.208 0 011.927-.184"
+          />
+        </svg>
+        <svg
+          class="w-4 h-4 check-icon hidden"
+          xmlns="http://www.w3.org/2000/svg"
+          fill="none"
+          viewBox="0 0 24 24"
+          stroke-width="1.5"
+          stroke="currentColor"
         >
-          50 Items
-        </a>
-      </li>
-    </ul>
+          <path
+            stroke-linecap="round"
+            stroke-linejoin="round"
+            d="M4.5 12.75l6 6 9-13.5"
+          />
+        </svg>
+        <span class="copy-text">Copy</span>
+        <span class="check-text hidden">Copied!</span>
+      </button>
+    </div>
   </div>
 </div>
-{% endif %}
 ```
 
-## base/collection/collection.html
+## chat/chat_messages.html
 
 ```
-<!doctype html>
-<html lang="en" class="overflow-y-scroll">
-  {% include('/main/header.html') %}
-  <body class="bg-gray-50 min-h-screen">
-    {% include('/main/nav.html') %}
+<div
+  id="chat_messages"
+  class="mt-4 mb-4 overflow-auto flex flex-col min-h-[200px]"
+></div>
+```
 
-    <section class="p-4 sm:p-6 flex items-center lg:ml-64">
-      <div class="max-w-screen-xl mx-auto px-2 sm:px-4 lg:px-12 w-full">
+## chat/chat_ui.html
+
+```
+<div
+  id="chat_ui"
+  class="fixed bottom-0 left-0 lg:left-64 lg:w-[calc(100%-16rem)] w-full h-40 bg-base-100"
+>
+  <div
+    class="flex flex-col absolute bottom-0 left-0 right-0 h-32 ml-2 mr-2 mb-2 md:ml-10 md:mr-10 md:mb-4 rounded-xl bg-white shadow-[0_-2px_15px_-3px_rgba(0,0,0,0.1)] border border-gray-100"
+  >
+    <div class="p-3 pr-16 overflow-hidden">
+      <textarea
+        id="chat_input"
+        placeholder="Type your message and press Command or Strg + Enter"
+        rows="3"
+        class="border-none ring-0 w-full rounded-lg focus:outline-none focus:ring-0 resize-none"
+      ></textarea>
+    </div>
+    <div class="ml-6 mb-4 flex items-center gap-2">
+      <div
+        class="dropdown relative inline-flex [--placement:top]"
+        data-dropdown
+      >
+        <button
+          id="modelSelectorButton"
+          class="badge badge-outline badge-primary dropdown-toggle"
+          data-dropdown-toggle
+        >
+          <span id="selected_model"></span>
+        </button>
         <div
-          class="relative bg-white shadow-md dark:bg-gray-800 sm:rounded-lg p-3 sm:p-4"
+          class="dropdown-menu min-w-44 dropdown-open:opacity-100 hidden"
+          role="menu"
+          aria-orientation="vertical"
+          aria-labelledby="modelSelectorButton"
         >
-          <div class="flex flex-col gap-4">
-            <div
-              class="flex flex-row justify-between items-center gap-2 sm:gap-4"
-            >
-              <div class="flex-1">
-                <form
-                  method="GET"
-                  action="{{ url_for('list', collection=collection_name, start=start, limit=limit, filter=filter) }}"
-                >
-                  <div class="relative">
-                    <div
-                      class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none"
-                    >
-                      <svg
-                        class="w-4 h-4 text-gray-500"
-                        fill="currentColor"
-                        viewBox="0 0 20 20"
-                      >
-                        <path
-                          fill-rule="evenodd"
-                          d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z"
-                          clip-rule="evenodd"
-                        ></path>
-                      </svg>
-                    </div>
-                    <input
-                      type="text"
-                      name="search"
-                      class="w-full max-w-md pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500"
-                      placeholder="Search"
-                      value="{{ search }}"
-                    />
-                  </div>
-                </form>
-              </div>
-
-              <div class="flex-none">
-                <a
-                  href="{{ url_for('doc',name = collection_name) }}"
-                  class="btn btn-primary whitespace-nowrap"
-                >
-                  New
-                </a>
-              </div>
-            </div>
-
-            {% include('/base/collection/table.html') %}
-          </div>
-        </div>
-      </div>
-    </section>
-
-    <!-- Delete Modal -->
-    <div
-      id="deleteModal"
-      tabindex="-1"
-      class="hidden overflow-y-auto overflow-x-hidden bg-gray-600 bg-opacity-65 backdrop-blur-sm fixed top-0 right-0 left-0 z-50 flex justify-center items-center w-full h-full"
-    >
-      <div id="modalContent" class="relative p-4 w-full max-w-md max-h-full">
-        <div class="relative bg-white rounded-lg shadow">
+          {% for model in config.models %}
           <button
-            type="button"
-            class="absolute top-3 right-2.5 text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center"
-            id="closeModal"
+            id="{{ model.model }}"
+            data-name="{{ model.name }}"
+            class="model dropdown-item w-full text-left px-4 py-2 hover:bg-gray-100"
           >
-            <svg
-              class="w-3 h-3"
-              aria-hidden="true"
-              xmlns="http://www.w3.org/2000/svg"
-              fill="none"
-              viewBox="0 0 14 14"
-            >
-              <path
-                stroke="currentColor"
-                stroke-linecap="round"
-                stroke-linejoin="round"
-                stroke-width="2"
-                d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"
-              />
-            </svg>
-            <span class="sr-only">Close modal</span>
+            {{ model.name }}
           </button>
-          <div class="p-4 md:p-5 text-center">
-            <svg
-              class="mx-auto mb-4 text-gray-400 w-12 h-12"
-              aria-hidden="true"
-              xmlns="http://www.w3.org/2000/svg"
-              fill="none"
-              viewBox="0 0 20 20"
-            >
-              <path
-                stroke="currentColor"
-                stroke-linecap="round"
-                stroke-linejoin="round"
-                stroke-width="2"
-                d="M10 11V6m0 8h.01M19 10a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z"
-              />
-            </svg>
-            <h3 class="mb-5 text-lg font-normal text-gray-500">
-              Are you sure?
-            </h3>
-            <button
-              id="confirmDelete"
-              type="button"
-              class="text-white bg-red-600 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 font-medium rounded-lg text-sm inline-flex items-center px-5 py-2.5 text-center"
-            >
-              Yes, I'm sure
-            </button>
-            <button
-              id="cancelDelete"
-              type="button"
-              class="py-2.5 px-5 ms-3 text-sm font-medium text-gray-900 focus:outline-none bg-white rounded-lg border border-gray-200 hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-4 focus:ring-gray-100"
-            >
-              No, cancel
-            </button>
-          </div>
+          {% endfor %}
         </div>
       </div>
+
+      <label for="file-upload" class="cursor-pointer">
+        <div
+          class="badge badge-outline badge-secondary flex items-center gap-1"
+        >
+          <svg
+            xmlns="http://www.w3.org/2000/svg"
+            fill="none"
+            viewBox="0 0 24 24"
+            stroke-width="1.5"
+            stroke="currentColor"
+            class="w-4 h-4"
+          >
+            <path
+              stroke-linecap="round"
+              stroke-linejoin="round"
+              d="M18.375 12.739l-7.693 7.693a4.5 4.5 0 01-6.364-6.364l10.94-10.94A3 3 0 1119.5 7.372L8.552 18.32m.009-.01l-.01.01m5.699-9.941l-7.81 7.81a1.5 1.5 0 002.112 2.13"
+            />
+          </svg>
+          <span id="file-name-display">Upload</span>
+        </div>
+      </label>
+      <input type="file" id="file-upload" class="hidden" />
     </div>
 
-    <script src="{{ url_for('static', filename='js/lib/flyonui.js') }}"></script>
-    <script>
-      document.querySelectorAll(".delete-btn").forEach((button) => {
-        button.addEventListener("click", function () {
-          const id = this.dataset.id;
-          const type = this.dataset.type;
-          const modal = document.getElementById("deleteModal");
-          const modalContent = document.getElementById("modalContent");
-          const confirmDelete = document.getElementById("confirmDelete");
-          const cancelDelete = document.getElementById("cancelDelete");
-          const closeButton = document.getElementById("closeModal");
+    <div class="absolute bottom-0 right-0 p-3 flex flex-col gap-2">
+      <button
+        id="reset_button"
+        class="bg-slate-800 hover:bg-slate-600 text-white font-extralight p-2.5 rounded"
+      >
+        <svg
+          xmlns="http://www.w3.org/2000/svg"
+          fill="none"
+          viewBox="0 0 24 24"
+          stroke-width="1.5"
+          stroke="currentColor"
+          class="w-6 h-6"
+        >
+          <path
+            stroke-linecap="round"
+            stroke-linejoin="round"
+            d="M12 4.5v15m7.5-7.5h-15"
+          />
+        </svg>
+      </button>
 
-          // Show modal
-          modal.classList.remove("hidden");
+      <button
+        id="chat_button"
+        class="bg-slate-800 hover:bg-slate-600 text-white font-extralight p-2.5 rounded"
+      >
+        <svg
+          xmlns="http://www.w3.org/2000/svg"
+          fill="none"
+          viewBox="0 0 24 24"
+          stroke-width="1.5"
+          stroke="currentColor"
+          class="w-6 h-6"
+        >
+          <path
+            stroke-linecap="round"
+            stroke-linejoin="round"
+            d="M6 12 3.269 3.125A59.769 59.769 0 0 1 21.485 12 59.768 59.768 0 0 1 3.27 20.875L5.999 12Zm0 0h7.5"
+          />
+        </svg>
+      </button>
+      <button
+        id="stop_button"
+        class="hidden bg-red-500 hover:bg-red-400 text-white font-extralight p-2.5 rounded"
+      >
+        <svg
+          xmlns="http://www.w3.org/2000/svg"
+          fill="none"
+          viewBox="0 0 24 24"
+          stroke-width="1.5"
+          stroke="currentColor"
+          class="w-6 h-6"
+        >
+          <path
+            stroke-linecap="round"
+            stroke-linejoin="round"
+            d="M5.25 7.5A2.25 2.25 0 0 1 7.5 5.25h9a2.25 2.25 0 0 1 2.25 2.25v9a2.25 2.25 0 0 1-2.25 2.25h-9a2.25 2.25 0 0 1-2.25-2.25v-9Z"
+          />
+        </svg>
+      </button>
+    </div>
+  </div>
+</div>
+```
 
-          // Handle delete confirmation
-          const handleDelete = () => {
-            const url = "{{ url_for('delete_document') }}";
+## chat/chat.html
 
-            fetch(url + "?id=" + id + "&type=" + type, {
-              method: "GET",
-              headers: {
-                "X-CSRFToken": "{{ csrf_token() }}",
-              },
-            })
-              .then((response) => response.json())
-              .then((result) => {
-                if (result.status === "ok") {
-                  // Remove the row from the table
-                  const row = button.closest("tr");
-                  row.remove();
+```
+<!doctype html>
+<html lang="en" class="h-full">
+  {% include('/main/header.html') %}
+  <head>
+    <meta charset="UTF-8" />
+    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+    <meta name="csrf-token" content="{{ csrf_token() }}" />
+    <title>Chat</title>
+  </head>
+  <body class="min-h-full flex flex-col bg-base-100">
+    {% include('/main/nav.html') %}
 
-                  // Show success notification
-                  const notification = document.createElement("div");
-                  notification.className =
-                    "fixed bottom-4 right-4 bg-green-500 text-white px-6 py-3 rounded shadow-lg z-50";
-                  notification.textContent = "Document deleted successfully";
-                  document.body.appendChild(notification);
-                  setTimeout(() => notification.remove(), 3000);
-                } else {
-                  // Show error notification
-                  const notification = document.createElement("div");
-                  notification.className =
-                    "fixed bottom-4 right-4 bg-red-500 text-white px-6 py-3 rounded shadow-lg z-50";
-                  notification.textContent =
-                    "Error deleting document: " + result.message;
-                  document.body.appendChild(notification);
-                  setTimeout(() => notification.remove(), 3000);
-                }
-              })
-              .catch((error) => {
-                console.error("Error:", error);
-                // Show error notification
-                const notification = document.createElement("div");
-                notification.className =
-                  "fixed bottom-4 right-4 bg-red-500 text-white px-6 py-3 rounded shadow-lg z-50";
-                notification.textContent = "Error deleting document";
-                document.body.appendChild(notification);
-                setTimeout(() => notification.remove(), 3000);
-              })
-              .finally(() => {
-                modal.classList.add("hidden");
-                cleanup();
-              });
-          };
+    <section class="flex-1 flex items-start overflow-y-auto lg:ml-64">
+      <div class="px-4 md:px-10 w-full">
+        <div class="relative min-h-[calc(100vh-8rem)] pb-32">
+          <main id="main" class="flex flex-col h-full">
+            {% if config.messages|length == 0 %}
+            <!-- Show prompts and history first in a fresh chat -->
+            <div id="selected_prompts_container" class="flex-1">
+              {% include '/chat/chat_prompts.html' %}
+            </div>
+            <div id="chat_messages_container" class="pb-40">
+              {% include '/chat/chat_messages.html' %}
+            </div>
+            {% else %}
+            <!-- Show messages first in an existing chat -->
+            <div id="chat_messages_container" class="pb-40">
+              {% include '/chat/chat_messages.html' %}
+            </div>
+            <div id="selected_prompts_container">
+              {% include '/chat/chat_prompts.html' %}
+            </div>
+            {% endif %}
 
-          // Handle modal close
-          const handleClose = () => {
-            modal.classList.add("hidden");
-            cleanup();
-          };
+            <div id="chat_history_container" class="hidden"></div>
+            <div id="prompts_container" class="hidden"></div>
+            <div id="create_prompt_container" class="hidden"></div>
+            <div id="chat_ui_container">{% include '/chat/chat_ui.html' %}</div>
+          </main>
 
-          // Cleanup event listeners
-          const cleanup = () => {
-            confirmDelete.removeEventListener("click", handleDelete);
-            cancelDelete.removeEventListener("click", handleClose);
-            closeButton.removeEventListener("click", handleClose);
-            modal.removeEventListener("click", handleOutsideClick);
-          };
+          <!-- Bot Message Template -->
+          <template id="bot-message-template">
+            {% include '/chat/bot_message_template.html' %}
+          </template>
 
-          // Handle click outside modal
-          const handleOutsideClick = (event) => {
-            if (!modalContent.contains(event.target)) {
-              handleClose();
-            }
-          };
+          <!-- User Message Template -->
+          <template id="user-message-template">
+            {% include '/chat/user_message_template.html' %}
+          </template>
 
-          // Add event listeners
-          confirmDelete.addEventListener("click", handleDelete);
-          cancelDelete.addEventListener("click", handleClose);
-          closeButton.addEventListener("click", handleClose);
-          modal.addEventListener("click", handleOutsideClick);
-        });
+          <!-- File Banner Template -->
+          <template id="file-banner-template">
+            <div class="mb-6">
+              <div class="bg-blue-50 border-l-4 border-blue-400 p-4">
+                <div class="flex">
+                  <div class="flex-shrink-0">
+                    <svg
+                      class="h-5 w-5 text-blue-400"
+                      viewBox="0 0 20 20"
+                      fill="currentColor"
+                    >
+                      <path
+                        fill-rule="evenodd"
+                        d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z"
+                        clip-rule="evenodd"
+                      />
+                    </svg>
+                  </div>
+                  <div class="ml-3 flex items-center gap-3">
+                    <p class="text-sm text-blue-700">
+                      Using context from file: <span class="filename"></span>
+                    </p>
+                    <a
+                      href="#"
+                      class="download-link text-blue-700 hover:text-blue-900"
+                    >
+                      <svg
+                        class="w-4 h-4"
+                        xmlns="http://www.w3.org/2000/svg"
+                        fill="none"
+                        viewBox="0 0 24 24"
+                        stroke-width="1.5"
+                        stroke="currentColor"
+                      >
+                        <path
+                          stroke-linecap="round"
+                          stroke-linejoin="round"
+                          d="M3 16.5v2.25A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75V16.5M16.5 12L12 16.5m0 0L7.5 12m4.5 4.5V3"
+                        />
+                      </svg>
+                    </a>
+                  </div>
+                </div>
+              </div>
+            </div>
+          </template>
+
+          <template id="code_template">
+            {% include '/chat/code_block_template.html' %}
+          </template>
+        </div>
+      </div>
+    </section>
+
+    <script>
+      // Global variables
+      const messages = {{ config.messages | tojson | safe }};
+      const systemMessage = {{ config.system_message|tojson }};
+      const welcomeMessage = {{ config.welcome_message|tojson }};
+      const models = {{ config.models | tojson | safe}};
+      const use_prompt_template = {{ config.use_prompt_template|tojson }};
+      const username = {{ config.username|tojson }};
+      const chat_started = {{ config.chat_started|tojson }};
+
+      // Model selection
+      var selected_model = models[0]['model'];
+      var selected_model_name = models[0]['name'];
+      var selectedModelElement = document.getElementById('selected_model');
+
+      // Check localStorage for saved model
+      if (localStorage.getItem('selected_model') !== null) {
+        selected_model = localStorage.getItem('selected_model');
+        const model = models.find(m => m.model === selected_model);
+        if (model) {
+          selected_model_name = model.name;
+        }
+      }
+
+      selectedModelElement.innerText = selected_model_name;
+
+      document.addEventListener('click', function (e) {
+        if (e.target.closest('#prompts .prompt')) {
+          var chatInput = document.getElementById('chat_input');
+          if (chatInput) {
+            chatInput.value = e.target.textContent;
+          }
+
+          var chatButton = document.getElementById('chat_button');
+          if (chatButton) {
+            chatButton.click();
+          }
+
+          var promptsDiv = document.getElementById('prompts');
+          if (promptsDiv) {
+            promptsDiv.remove();
+          }
+        }
+
+        if (event.target.classList.contains('model')) {
+          selected_model = event.target.id;
+          selected_model_name = event.target.dataset.name;
+          localStorage.setItem('selected_model', selected_model);
+          selectedModelElement.innerText = selected_model_name;
+          const modelSelectorButton = document.getElementById('modelSelectorButton');
+          if (modelSelectorButton) {
+            modelSelectorButton.click();
+          }
+        }
       });
     </script>
+
+    <script src="{{ url_for('static', filename='/chat/chat_core.js') }}"></script>
+    <script src="{{ url_for('static', filename='js/lib/flyonui.js') }}"></script>
   </body>
 </html>
 ```
 
-## base/collection/table.html
+## main/header.html
 
 ```
-<div class="flex flex-col gap-4">
-  {% include('/base/collection/pagination.html') %}
-  <div
-    class="overflow-x-auto rounded-lg border border-slate-200 dark:border-slate-700"
-  >
-    <table class="table border-collapse w-full">
-      <thead>
-        <tr>
-          {% for header in table_header %}
-          <th
-            class="font-bold {{header.class}} px-4 py-3 border-b border-r border-slate-200 dark:border-slate-700 last:border-r-0"
-          >
-            {{header.label}}
-          </th>
-          {% endfor %}
-          <th
-            class="w-16 px-4 py-3 text-right border-b border-r border-slate-200 dark:border-slate-700 last:border-r-0 sticky right-0 bg-white z-10"
-          >
-            Actions
-          </th>
-        </tr>
-      </thead>
-      <tbody>
-        {% for document in table_content %}
-        <tr
-          class="{% if not loop.last %}border-b border-slate-200 dark:border-slate-700{% endif %}"
-        >
-          {% for field in document %}
-          <td
-            class="font-normal leading-normal px-4 py-2 border-r border-slate-200 dark:border-slate-700 last:border-r-0"
-          >
-            {% if field.type == 'ButtonField' %}
-            <div class="flex justify-start items-center">
-              <a href="{{field.link}}/{{field.id}}" class="w-full">
-                <button
-                  type="button"
-                  class="btn btn-primary btn-outline btn-sm {{field.class}} truncate"
-                >
-                  {{field.label}}
-                </button>
-              </a>
-            </div>
-            {% else %} {{field.value}} {% endif %}
-          </td>
-          {% endfor %}
-          <td class="w-16 px-4 py-2 text-right sticky right-0 bg-white">
-            <div class="flex gap-2 justify-end">
-              <a
-                href="{{document_url}}/{{document[0].id}}"
-                class="btn btn-primary btn-sm btn-outline"
-              >
-                <span class="icon-[tabler--edit] size-4"></span>
-              </a>
-              <button
-                type="button"
-                class="btn btn-error btn-sm btn-outline delete-btn"
-                data-id="{{document[0].id}}"
-                data-type="{{collection_name}}"
-              >
-                <span class="icon-[tabler--trash] size-4"></span>
-              </button>
-            </div>
-          </td>
-        </tr>
-        {% endfor %}
-      </tbody>
-    </table>
-  </div>
-  {% include('/base/collection/pagination.html') %}
-</div>
-```
-
-## base/document/form.html
-
-```
-<!doctype html>
-<html lang="en" class="overflow-y-scroll">
-  {% include('/main/header.html') %}
-  <body class="bg-gray-50 min-h-screen">
-    {% include('/main/nav.html') %}
-
-    <section class="p-6 flex items-center lg:ml-64">
-      <div class="max-w-screen-xl mx-auto px-4 lg:px-12 w-full">
-        <!-- Start coding here -->
-        <div class="relative bg-white shadow-md dark:bg-gray-800 sm:rounded-lg">
-          <div class="flex items-center justify-center pt-4 px-4">
-            <form
-              method="POST"
-              enctype="multipart/form-data"
-              id="documentForm"
-              class="w-full max-w-lg"
-            >
-              <input
-                type="hidden"
-                name="csrf_token"
-                value="{{ csrf_token() }}"
-              />
-              <input type="hidden" name="id" value="{{document.id}}" />
-
-              <h1 class="text-2xl font-bold">{{page.title}}</h1>
-              <hr class="my-4" />
-              <div class="flex flex-wrap -mx-3 mb-6">
-                {% include('/base/document/form_elements.html') %}
-              </div>
-
-              <!-- Save and Delete Buttons -->
-              <div class="flex flex-wrap -mx-3 mb-6">
-                <div
-                  class="w-full px-3 mb-6 md:mb-0 flex justify-between space-x-3"
-                >
-                  <button
-                    type="submit"
-                    class="btn btn-primary w-1/2"
-                    id="saveButton"
-                  >
-                    Save
-                  </button>
-                  <button
-                    type="button"
-                    class="btn btn-error w-1/2"
-                    id="deleteButton"
-                  >
-                    Delete
-                  </button>
-                </div>
-              </div>
-            </form>
-
-            <div
-              id="deleteModal"
-              tabindex="-1"
-              class="hidden overflow-y-auto overflow-x-hidden bg-gray-600 bg-opacity-65 backdrop-blur-sm fixed top-0 right-0 left-0 z-50 flex justify-center items-center w-full h-full"
-            >
-              <div
-                id="modalContent"
-                class="relative p-4 w-full max-w-md max-h-full"
-              >
-                <div class="relative bg-white rounded-lg shadow">
-                  <button
-                    type="button"
-                    class="absolute top-3 right-2.5 text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ms-auto inline-flex justify-center items-center"
-                    id="closeModal"
-                  >
-                    <svg
-                      class="w-3 h-3"
-                      aria-hidden="true"
-                      xmlns="http://www.w3.org/2000/svg"
-                      fill="none"
-                      viewBox="0 0 14 14"
-                    >
-                      <path
-                        stroke="currentColor"
-                        stroke-linecap="round"
-                        stroke-linejoin="round"
-                        stroke-width="2"
-                        d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"
-                      />
-                    </svg>
-                    <span class="sr-only">Close modal</span>
-                  </button>
-                  <div class="p-4 md:p-5 text-center">
-                    <svg
-                      class="mx-auto mb-4 text-gray-400 w-12 h-12"
-                      aria-hidden="true"
-                      xmlns="http://www.w3.org/2000/svg"
-                      fill="none"
-                      viewBox="0 0 20 20"
-                    >
-                      <path
-                        stroke="currentColor"
-                        stroke-linecap="round"
-                        stroke-linejoin="round"
-                        stroke-width="2"
-                        d="M10 11V6m0 8h.01M19 10a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z"
-                      />
-                    </svg>
-                    <h3 class="mb-5 text-lg font-normal text-gray-500">
-                      Are you sure?
-                    </h3>
-                    <button
-                      id="confirmDelete"
-                      type="button"
-                      class="text-white bg-red-600 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 font-medium rounded-lg text-sm inline-flex items-center px-5 py-2.5 text-center"
-                    >
-                      Yes, I'm sure
-                    </button>
-                    <button
-                      id="cancelDelete"
-                      type="button"
-                      class="py-2.5 px-5 ms-3 text-sm font-medium text-gray-900 focus:outline-none bg-white rounded-lg border border-gray-200 hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-4 focus:ring-gray-100"
-                    >
-                      No, cancel
-                    </button>
-                  </div>
-                </div>
-              </div>
-            </div>
-          </div>
-        </div>
-      </div>
-    </section>
-    <script>
-      window.addEventListener("load", function () {
-        // Basic
-        flatpickr("#flatpickr-date", {
-          monthSelectorType: "static",
-          locale: "de",
-          dateFormat: "d.m.Y",
-        });
-      });
-    </script>
-    <script>
-      document.addEventListener('DOMContentLoaded', function() {
-
-        {% include 'base/document/js/delete_document.js' %}
-        {% include 'base/document/js/search_field.js' %}
-
-      });
-    </script>
-    <script src="{{ url_for('static', filename='js/lib/flyonui.js') }}"></script>
-    <script src="{{ url_for('static', filename='js/lib/flatpickr.min.js') }}"></script>
-  </body>
-</html>
+<head>
+  <meta charset="UTF-8" />
+  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
+  <title>Fireworks</title>
+  <link
+    rel="stylesheet"
+    href="{{ url_for('static', filename='css/output.css') }}"
+  />
+  <link
+    rel="stylesheet"
+    href="{{ url_for('static', filename='css/flatpickr.min.css') }}"
+  />
+</head>
 ```
 
-## base/document/form_elements.html
+## main/nav.html
 
 ```
-{% for element in elements %}
-<div
-  class="{{ 'w-full' if element.full_width else 'w-full md:w-1/2' }} px-3 mb-6 md:mb-0"
+<!-- Sticky Navigation -->
+<nav
+  class="navbar bg-base-100 flex items-center justify-between p-4 sticky top-0 z-[60] shadow-sm"
 >
-  <label
-    for="{{ element.id }}"
-    class="label label-text"
-  >
-    {{ element.label }}
-  </label>
-
-  {% if element.type == 'ButtonField' %}
-  <a href="{{element.link}}/{{document.id}}"
-    ><button
-      type="button"
-      class="btn btn-primary"
+  <div class="navbar-start">
+    <a
+      href="{{ url_for('index') }}"
+      class="link text-base-content/90 text-xl font-semibold no-underline flex items-center gap-2"
     >
-      {{element.label}}
-    </button></a
-  >
-  {% endif %} {% if element.type == 'FileField' %}
-  <input
-    class="input max-w-sm"
-    id="{{element.id}}"
-    type="file"
-    name="files_{{element.id}}"
-    multiple
-  />
-  {% for file in element.value %} {% if file.element_id == element.id %}
-  <div id="{{file.document_id}}" class="flex items-center justify-between mt-2">
-    <span class="mt-1 text-sm text-gray-600">
-      <a
-        href="{{url_for('download_file',file_id=file.id)}}"
-        class="text-blue-600 hover:text-blue-500"
-        target="_blank"
+      Fireworks
+    </a>
+  </div>
+  <div class="navbar-end flex items-center gap-2">
+    <!-- User Avatar Dropdown for Desktop -->
+    <div
+      class="dropdown relative inline-flex max-lg:hidden [--auto-close:inside] [--offset:8] [--placement:bottom-end]"
+    >
+      <button
+        type="button"
+        class="dropdown-toggle avatar placeholder"
+        aria-haspopup="menu"
+        aria-expanded="false"
+        aria-label="User menu"
       >
-        {{ file.name }}
-      </a>
-    </span>
+        <div class="bg-primary text-primary-content rounded-full w-10">
+          <span class="text-lg"
+            >{{ current_user.firstname[0] }}{{ current_user.name[0] }}</span
+          >
+        </div>
+      </button>
+      <ul
+        class="dropdown-menu dropdown-open:opacity-100 hidden min-w-48"
+        role="menu"
+      >
+        <div class="dropdown-header">
+          <h6 class="text-base-content/90 text-base">
+            {{ current_user.firstname }} {{ current_user.name }}
+          </h6>
+        </div>
+        <a
+          href="{{ url_for('doc', name='user', id=current_user.id) }}"
+          class="dropdown-item"
+        >
+          <span class="icon-[tabler--user] size-5"></span>
+          Edit Profile
+        </a>
+        <form action="{{ url_for('logout') }}" method="post">
+          <input type="hidden" name="csrf_token" value="{{ csrf_token() }}" />
+          <button type="submit" class="dropdown-item w-full text-left">
+            <span class="icon-[tabler--logout-2] size-5"></span>
+            Sign Out
+          </button>
+        </form>
+      </ul>
+    </div>
+    <!-- Mobile Menu Button -->
     <button
-      id="{{file.id}}"
-      document_id="{{file.document_id}}"
-      class="delete_file bg-red-100 text-red-800 text-xs font-medium me-2 px-2.5 py-0.5 rounded"
+      type="button"
+      class="btn btn-text max-lg:btn-square lg:hidden"
+      aria-haspopup="dialog"
+      aria-expanded="false"
+      aria-controls="mobile-menu-overlay"
+      data-overlay="#mobile-menu-overlay"
     >
-      Delete
+      <span class="icon-[tabler--menu-2] size-5"></span>
     </button>
   </div>
-  {% endif %} {% endfor %} {% endif %} {% if element.type=='DocumentField' %}
-  <!-- Search Field -->
-  <input
-    type="hidden"
-    value="{{element.value_id if element.value_id else document.get(element.name + '_id', '')}}"
-    name="{{ element.name }}_hidden"
-    id="{{ element.name }}_hidden"
-  />
-  <input
-    id="{{element.id}}"
-    name="{{element.name}}"
-    value="{{element.value if element.value else document.get(element.name, '')}}"
-    module="{{element.module}}"
-    document_field="{{element.document_field}}"
-    type="text"
-    placeholder="Search..."
-    class="searchField bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5"
-  />
+</nav>
 
-  <!-- Dropdown Menu -->
-  <div
-    id="dropdownMenu"
-    class="z-10 hidden bg-white rounded-lg shadow w-full mt-1 max-h-48 overflow-y-auto"
-  >
-    <ul id="userList" class="py-2 text-gray-700"></ul>
-  </div>
-  {% endif %} {% if element.type == 'IntField' or element.type =='FloatField' %}
+<aside
+  id="mobile-menu-overlay"
+  class="overlay drawer drawer-start w-64 max-w-64 lg:fixed lg:top-[57px] lg:bottom-0 lg:left-0 lg:z-40 lg:flex lg:translate-x-0 overlay-open:translate-x-0 -translate-x-full transition-transform duration-300"
+  tabindex="-1"
+>
+  <div class="drawer-body w-64 bg-white h-full flex flex-col overflow-hidden">
+    <!-- Fixed Header Section -->
+    <div class="px-2 pt-4 pb-2 border-b border-base-200 flex-none">
+      <ul class="menu w-full space-y-0.5 p-0">
+        <li class="w-full">
+          <a
+            href="{{ url_for('index') }}"
+            class="flex items-center gap-2 px-4 py-2 w-full"
+          >
+            <span class="icon-[tabler--dashboard] size-5 shrink-0"></span>
+            <span class="truncate">Dashboard</span>
+          </a>
+        </li>
+        <li class="w-full">
+          <a
+            href="{{ url_for('dms_chat.chat') }}"
+            class="flex items-center gap-2 px-4 py-2 w-full"
+          >
+            <span class="icon-[tabler--message] size-5 shrink-0"></span>
+            <span class="truncate">Chat</span>
+          </a>
+        </li>
+      </ul>
+    </div>
+
+    <!-- Scrollable Content Section -->
+    <div
+      class="flex-1 overflow-y-auto scrollbar-thin scrollbar-thumb-base-300 scrollbar-track-transparent px-2 py-2"
+    >
+      <ul
+        class="menu w-full space-y-0.5 [&_.nested-collapse-wrapper]:space-y-0.5 [&_ul]:space-y-0.5 p-0 pb-6"
+      >
+        {% if current_user.is_admin %}
+        <li class="w-full space-y-0.5">
+          <button
+            type="button"
+            class="collapse-toggle w-full flex items-center gap-2 px-4 py-2 collapse-open:bg-base-content/10"
+            id="admin-collapse"
+            aria-expanded="false"
+            aria-controls="admin-collapse-content"
+            data-collapse="#admin-collapse-content"
+          >
+            <span class="icon-[tabler--shield-lock] size-5 shrink-0"></span>
+            <span class="truncate flex-1">Admin</span>
+            <span
+              class="icon-[tabler--chevron-down] collapse-open:rotate-180 size-4 shrink-0 transition-transform duration-300"
+            ></span>
+          </button>
+          <div
+            id="admin-collapse-content"
+            class="collapse hidden w-full overflow-hidden transition-[height] duration-300"
+            role="menu"
+            aria-labelledby="admin-collapse"
+          >
+            <div>
+              <ul class="menu w-full space-y-0.5">
+                <li class="w-full">
+                  <a
+                    href="{{ url_for('list', collection='user') }}"
+                    class="text-xs w-full px-4 py-2 hover:bg-base-200 flex items-center gap-2 rounded-lg"
+                  >
+                    <span class="icon-[tabler--users] size-5 shrink-0"></span>
+                    <span class="truncate">Manage Users</span>
+                  </a>
+                </li>
+                <li class="w-full">
+                  <a
+                    href="{{ url_for('list', collection='models') }}"
+                    class="text-xs w-full px-4 py-2 hover:bg-base-200 flex items-center gap-2 rounded-lg"
+                  >
+                    <span class="icon-[tabler--brain] size-5 shrink-0"></span>
+                    <span class="truncate">Manage Models</span>
+                  </a>
+                </li>
+              </ul>
+            </div>
+          </div>
+        </li>
+        {% endif %}
+        <li class="w-full space-y-0.5">
+          <button
+            type="button"
+            class="collapse-toggle w-full flex items-center gap-2 px-4 py-2 collapse-open:bg-base-content/10"
+            id="prompts-collapse"
+            aria-expanded="false"
+            aria-controls="prompts-collapse-content"
+            data-collapse="#prompts-collapse-content"
+          >
+            <span class="icon-[tabler--app-window] size-5 shrink-0"></span>
+            <span class="truncate flex-1">Prompts</span>
+            <span
+              class="icon-[tabler--chevron-down] collapse-open:rotate-180 size-4 shrink-0 transition-transform duration-300"
+            ></span>
+          </button>
+          <div
+            id="prompts-collapse-content"
+            class="collapse hidden w-full overflow-hidden transition-[height] duration-300"
+            aria-labelledby="prompts-collapse"
+          >
+            <div>
+              <ul class="menu space-y-0.5 w-full" id="prompts-list">
+                <li class="w-full">
+                  <a
+                    href="{{ url_for('list', collection='prompts') }}"
+                    class="text-xs view-all w-full px-4 py-2 hover:bg-base-200 flex items-center rounded-lg"
+                  >
+                    <span class="truncate">View All Prompts</span>
+                  </a>
+                </li>
+                <li class="w-full">
+                  <a
+                    href="{{ url_for('doc', name='prompt') }}"
+                    class="text-xs w-full px-4 py-2 hover:bg-base-200 flex items-center gap-2 text-primary rounded-lg group"
+                  >
+                    <span class="icon-[tabler--plus] size-3.5 shrink-0"></span>
+                    <span class="truncate">New Prompt</span>
+                  </a>
+                </li>
+                <li class="w-full border-t border-base-200 my-1"></li>
+                {% for prompt in prompts %}
+                <li class="w-full">
+                  <div
+                    class="flex items-center gap-2 w-full px-4 py-2 hover:bg-base-200 group rounded-lg"
+                  >
+                    <a
+                      href="{{ url_for('chat.prompt', id=prompt.id) }}"
+                      class="flex-1 min-w-0"
+                      title="{{ prompt.name }}"
+                    >
+                      <span class="truncate text-xs block"
+                        >{{ prompt.name }}</span
+                      >
+                    </a>
+                    <span
+                      class="text-[10px] text-gray-500 whitespace-nowrap shrink-0"
+                      >{{ format_time_ago(prompt.modified_date) }}</span
+                    >
+                    <a
+                      href="{{ url_for('prompt.edit', id=prompt.id) }}"
+                      class="shrink-0 opacity-0 group-hover:opacity-100 transition-opacity"
+                      aria-label="Edit prompt"
+                      title="Edit prompt"
+                    >
+                      <span
+                        class="icon-[tabler--edit] size-3.5 text-primary"
+                      ></span>
+                    </a>
+                  </div>
+                </li>
+                {% endfor %}
+              </ul>
+            </div>
+          </div>
+        </li>
+        <li class="w-full space-y-0.5">
+          <button
+            type="button"
+            class="collapse-toggle w-full flex items-center gap-2 px-4 py-2 collapse-open:bg-base-content/10"
+            id="history-collapse"
+            aria-expanded="false"
+            aria-controls="history-collapse-content"
+            data-collapse="#history-collapse-content"
+          >
+            <span class="icon-[tabler--clock] size-5 shrink-0"></span>
+            <span class="truncate flex-1">History</span>
+            <span
+              class="icon-[tabler--chevron-down] collapse-open:rotate-180 size-4 shrink-0 transition-transform duration-300"
+            ></span>
+          </button>
+          <div
+            id="history-collapse-content"
+            class="collapse hidden w-full overflow-hidden transition-[height] duration-300"
+            aria-labelledby="history-collapse"
+          >
+            <div>
+              <ul class="menu space-y-0.5 w-full" id="history-list">
+                <li class="w-full">
+                  <a
+                    href="{{ url_for('list', collection='history') }}"
+                    class="text-xs view-all w-full px-4 py-2 hover:bg-base-200 flex items-center rounded-lg"
+                  >
+                    <span class="truncate">View All History</span>
+                  </a>
+                </li>
+                <li class="w-full">
+                  <button
+                    type="button"
+                    class="text-xs w-full px-4 py-2 hover:bg-base-200 flex items-center gap-2 text-error rounded-lg group"
+                    onclick="handleDeleteHistory()"
+                  >
+                    <span class="icon-[tabler--trash] size-3.5 shrink-0"></span>
+                    <span class="truncate">Delete History </span>
+                  </button>
+                </li>
+                <li class="w-full border-t border-base-200 my-1"></li>
+                {% for item in history %}
+                <li class="w-full">
+                  <a
+                    href="{{ url_for('chat.history', id=item.id) }}"
+                    class="flex items-center gap-2 w-full px-4 py-2 hover:bg-base-200 rounded-lg"
+                    title="{{ item.first_message or 'Untitled Chat' }}"
+                  >
+                    <span class="truncate flex-1 text-xs"
+                      >{{ item.first_message or "Untitled Chat" }}</span
+                    >
+                    <span
+                      class="text-[10px] text-gray-500 whitespace-nowrap shrink-0"
+                      >{{ format_time_ago(item.modified_date) }}</span
+                    >
+                  </a>
+                </li>
+                {% endfor %}
+              </ul>
+            </div>
+          </div>
+        </li>
+      </ul>
+    </div>
 
-  <div class="max-w-sm mx-auto">
-    <input
-      type="text"
-      id="{{element.id}}"
-      name="{{element.name}}"
-      value="{{element.value if element.value is not none else ''}}"
-      class="input"
-    />
+    <!-- Fixed Footer Section -->
+    <div class="flex-none border-t border-base-200 px-2 pt-4 pb-2 lg:hidden">
+      <form action="{{ url_for('logout') }}" method="post" class="w-full">
+        <input type="hidden" name="csrf_token" value="{{ csrf_token() }}" />
+        <button
+          type="submit"
+          class="btn btn-ghost w-full justify-start gap-2 text-error"
+        >
+          <span class="icon-[tabler--logout-2] size-5 shrink-0"></span>
+          <span class="truncate">Sign Out</span>
+        </button>
+      </form>
+    </div>
   </div>
+</aside>
 
-  {% endif %} {% if element.type == 'Date' %}
+<script>
+  // Add error notification function
+  function showErrorNotification(message) {
+    console.error(message);
+  }
 
-  <input
-    type="text"
-    class="input max-w-sm"
-    placeholder="DD.MM.YYYY"
-    id="flatpickr-date"
-    name="{{element.name}}"
-    value="{{element.value if element.value is not none else ''}}"
-  />
+  // Function to format date
+  function formatDate(dateString) {
+    let date;
+    if (typeof dateString === "string") {
+      // Try to parse the formatted date string from mongoToJson (DD.MM.YYYY HH:MM)
+      const parts = dateString.split(" ");
+      if (parts.length === 2) {
+        const [datePart, timePart] = parts;
+        const [day, month, year] = datePart.split(".");
+        const [hours, minutes] = timePart.split(":");
+        date = new Date(year, month - 1, day, hours, minutes);
+      } else {
+        date = new Date(dateString);
+      }
+    } else if (dateString?.$date) {
+      // Handle MongoDB ISODate format
+      date = new Date(dateString.$date);
+    } else {
+      return "";
+    }
 
-  {% endif %} {% if element.type == 'CheckBox' %}
-  <label class="inline-flex items-center mb-5 cursor-pointer">
-    <input
-      type="hidden"
-      name="{{ element.name }}_hidden"
-      value="Off"
-    />
-    <input
-      type="checkbox"
-      name="{{ element.name }}"
-      class="switch switch-primary"
-      value="On"
-      {% if element.value == "On" %}checked{% endif %}
-    />
-  </label>
-  {% endif %} {% if element.type =='SimpleListField' %}
-  <select
-    class="select max-w-sm appearance-none"
-    aria-label="select"
-    id="{{element.id}}"
-    name="{{element.name}}"
-  >
-    {% for item in element.SimpleListField %} {% if item.value == element.value %}
-    <option value="{{item.value}}" selected="selected">{{item.name}}</option>
-    {% else %}
-    <option value="{{item.value}}">{{item.name}}</option>
-    {% endif %} {% endfor %}
-  </select>
-  {% endif %} {% if element.type=='AdvancedListField' %}
-  <select class="select max-w-sm appearance-none" aria-label="select" id="{{element.id}}" name="{{element.name}}">
-    {% for item in element.AdvancedListField %} {% if item.value == element.value %}
-    <option value="{{item.value}}" selected="selected">{{item.name}}</option>
-    {% else %}
-    <option value="{{item.value}}">{{item.name}}</option>
-    {% endif %} {% endfor %}
-  </select>
-  {% endif %} {% if element.type == 'SingleLine' %}
-  <input
-    id="{{ element.id }}"
-    name="{{ element.name }}"
-    type="text"
-    value="{{ element.value }}"
-    placeholder="{{ element.label }}"
-    class="input"
-    {% if element.required %}required{% endif %}
-  />
-  {% elif element.type == 'MultiLine' %}
-  <textarea
-    id="{{ element.id }}"
-    name="{{ element.name }}"
-    rows="4"
-    placeholder="{{ element.label }}"
-    class="textarea"
-    {% if element.required %}required{% endif %}
-  >{{ element.value if element.value is not none else '' }}</textarea>
-  {% endif %}
-    <!-- {% if element.required %}
-    <p class="text-red-500 text-xs italic">Please fill out this field.</p>
-    {% endif %} -->
-</div>
-{% endfor %}
-```
+    const now = new Date();
+    const diffMs = now - date;
+    const diffMins = Math.floor(diffMs / 60000);
+    const diffHours = Math.floor(diffMins / 60);
+    const diffDays = Math.floor(diffHours / 24);
 
-## base/document/js/search_field.js
+    if (diffMins < 1) {
+      return "just now";
+    } else if (diffMins < 60) {
+      return `${diffMins}m ago`;
+    } else if (diffHours < 24) {
+      return `${diffHours}h ago`;
+    } else if (diffDays === 1) {
+      return "yesterday";
+    } else if (diffDays < 7) {
+      return `${diffDays}d ago`;
+    } else {
+      return date.toLocaleDateString();
+    }
+  }
 
-```
-document.querySelectorAll(".searchField").forEach((searchField) => {
-  searchField.addEventListener("input", function () {
-    const query = this.value;
-    const module = this.getAttribute("module"); // Get the module attribute value
-    const document_field = this.getAttribute("document_field");
-    const dropdown = this.nextElementSibling;
-    const userList = dropdown.querySelector("#userList");
-    const document_field_hidden = document.getElementById(
-      this.name + "_hidden",
-    );
+  // Function to fetch and update nav items with improved error handling
+  async function updateNavItems() {
+    try {
+      const response = await fetch("{{ url_for('dms_chat.get_nav_items') }}");
+      if (!response.ok) {
+        throw new Error(`Failed to fetch nav items: ${response.status}`);
+      }
 
-    // Clear hidden field if search field is empty
-    if (!query || query.length === 0) {
-      document_field_hidden.value = "";
-      document_field.value = "";
-      dropdown.classList.add("hidden");
-      return;
-    }
+      const data = await response.json();
+      console.log("Total history items received:", data.history.length);
 
-    if (query.length > 3) {
-      // Construct the URL using the module value
-      const url =
-        `{{ url_for("list", collection="__MODULE__", mode="json") }}`.replace(
-          "__MODULE__",
-          module,
+      // Validate data structure
+      if (
+        !data ||
+        !Array.isArray(data.prompts) ||
+        !Array.isArray(data.history)
+      ) {
+        throw new Error("Invalid navigation data structure");
+      }
+
+      // Update prompts list
+      const promptsList = document.getElementById("prompts-list");
+      if (promptsList) {
+        // Keep the view all and new prompt links
+        const staticLinks = promptsList.querySelectorAll("li:nth-child(-n+3)");
+        promptsList.innerHTML = "";
+        staticLinks.forEach((link) =>
+          promptsList.appendChild(link.cloneNode(true)),
         );
 
-      // Fetch users from the server based on the search query
-      fetch(`${url}&search=${encodeURIComponent(query)}&limit=100`)
-        .then((response) => response.json())
-        .then((data) => {
-          if (data.status === "ok" && data.message === "success") {
-            dropdown.classList.remove("hidden");
-            console.log(data); // Log the result
-            userList.innerHTML = ""; // Clear the existing list
+        // Add prompts with error handling
+        data.prompts.forEach((prompt) => {
+          try {
+            if (!prompt?._id?.$oid || !prompt?.name) {
+              console.warn("Invalid prompt data:", prompt);
+              return;
+            }
 
-            // Check if data.data is an array before iterating
-            if (Array.isArray(data.data)) {
-              // Append users to the list
-              data.data.forEach((user) => {
-                const userItem = document.createElement("li");
-                userItem.innerHTML = `
-                                    <a href="#" class="flex items-center px-4 py-2 hover:bg-gray-100">
-                                        ${user[document_field]}
-                                    </a>
-                                `;
-                userItem.addEventListener("click", function (event) {
-                  event.preventDefault();
-                  searchField.value = user[document_field];
-                  document_field_hidden.value = user.id;
-                  dropdown.classList.add("hidden");
-                });
-                userList.appendChild(userItem);
-              });
+            console.log("Prompt modified date:", prompt.modified_date);
+            const formattedDate = formatDate(prompt.modified_date);
+            console.log("Formatted date:", formattedDate);
 
-              // Log the length of the userList to verify
-              console.log(
-                `Number of users appended: ${userList.children.length}`,
-              );
-            } else {
-              console.error("Error: data.data is not an array");
-            }
-          } else {
-            console.error("Error: Unexpected response format");
+            const li = document.createElement("li");
+            li.className = "w-full";
+            li.innerHTML = `
+              <div class="flex items-center gap-2 w-full px-4 py-2 hover:bg-base-200 group rounded-lg">
+                <a href="/chat/prompt/${prompt._id.$oid}" class="flex-1 min-w-0" title="${prompt.name}">
+                  <span class="truncate text-xs block">${prompt.name}</span>
+                </a>
+                <span class="text-[10px] text-gray-500 whitespace-nowrap shrink-0">${formattedDate}</span>
+                <a href="/d/prompt/${prompt._id.$oid}" class="shrink-0 opacity-0 group-hover:opacity-100 transition-opacity" aria-label="Edit prompt" title="Edit prompt">
+                  <span class="icon-[tabler--edit] size-3.5 text-primary"></span>
+                </a>
+              </div>
+            `;
+            promptsList.appendChild(li);
+          } catch (itemError) {
+            console.warn("Error adding prompt item:", itemError);
           }
-        })
-        .catch((error) => {
-          console.error("Error fetching user data:", error); // Log error message
         });
-    } else {
-      dropdown.classList.add("hidden");
-    }
-  });
-});
-```
+      }
 
-## base/document/js/delete_document.js
+      // Update history list
+      const historyList = document.getElementById("history-list");
+      if (historyList) {
+        // Keep the view all link and delete button
+        const staticLinks = historyList.querySelectorAll("li:nth-child(-n+3)");
+        historyList.innerHTML = "";
+        staticLinks.forEach((link) =>
+          historyList.appendChild(link.cloneNode(true)),
+        );
 
-```
-// Function to handle form submission for delete action
-function submitDeleteForm() {
-  var url =
-    "{{url_for('delete_document')}}" +
-    "?id=" +
-    "{{document.id}}&type={{page.document_name}}";
+        let addedCount = 0;
+        // Add history items with error handling
+        data.history.forEach((item) => {
+          try {
+            if (!item?._id?.$oid) {
+              return;
+            }
 
-  fetch(url)
-    .then((response) => response.json())
-    .then((result) => {
-      console.log(result);
-      if (result.status === "ok") {
-        console.log("Document Deleted");
-        window.location.href = "{{ page.collection_url }}";
-      } else {
-        console.log("Document not deleted");
+            const li = document.createElement("li");
+            li.className = "w-full";
+            li.innerHTML = `
+              <a href="/chat/history/${item._id.$oid}" 
+                 class="flex items-center gap-2 w-full px-4 py-2 hover:bg-base-200 rounded-lg"
+                 title="${item.first_message || "Untitled Chat"}">
+                <span class="truncate flex-1 text-xs">${item.first_message || "Untitled Chat"}</span>
+                <span class="text-[10px] text-gray-500 whitespace-nowrap shrink-0">${formatDate(item.modified_date)}</span>
+              </a>
+            `;
+            historyList.appendChild(li);
+            addedCount++;
+          } catch (itemError) {
+            console.warn("Error adding history item:", itemError);
+          }
+        });
+        console.log("Actually added history items:", addedCount);
       }
-    })
-    .catch((error) => {
-      console.error("Error:", error);
-    });
-}
+    } catch (error) {
+      console.error("Error updating navigation:", error);
+      showErrorNotification(
+        "Failed to update navigation. Please refresh the page.",
+      );
+    }
+  }
 
-const modal = document.getElementById("deleteModal");
-const deleteButton = document.getElementById("deleteButton");
-const closeButton = document.getElementById("closeModal");
-const confirmButton = document.getElementById("confirmDelete");
-const cancelButton = document.getElementById("cancelDelete");
-const modalContent = document.getElementById('modalContent');
+  // Function to handle history deletion
+  async function handleDeleteHistory() {
+    if (
+      !confirm(
+        "Are you sure you want to delete all history documents? This action cannot be undone.",
+      )
+    ) {
+      return;
+    }
 
-function showModal() {
-  modal.classList.remove("hidden");
-}
+    try {
+      const response = await fetch(
+        "{{ url_for('dms_chat.delete_all_history') }}",
+        {
+          method: "POST",
+          headers: {
+            "X-CSRFToken": "{{ csrf_token() }}",
+          },
+        },
+      );
 
-function hideModal() {
-  modal.classList.add("hidden");
-}
+      if (!response.ok) {
+        throw new Error("Failed to delete history");
+      }
 
-deleteButton.addEventListener("click", showModal);
-closeButton.addEventListener("click", hideModal);
-cancelButton.addEventListener("click", hideModal);
+      const result = await response.json();
 
-confirmButton.addEventListener("click", function (ev) {
-  ev.preventDefault();
-  submitDeleteForm();
-});
+      // Check if we're on a history page or list history page
+      const currentPath = window.location.pathname;
+      if (
+        currentPath.includes("/chat/history/") ||
+        currentPath.includes("/list/history")
+      ) {
+        // Redirect to index page
+        window.location.href = "/";
+        return;
+      }
 
-modal.addEventListener('click', function(event) {
-  if (!modalContent.contains(event.target)) {
-    hideModal();
+      // Update the navigation items
+      await updateNavItems();
+    } catch (error) {
+      console.error("Error deleting history:", error);
+      showErrorNotification("Failed to delete history. Please try again.");
+    }
   }
-});
-
 
-document.querySelectorAll('.delete_file').forEach(button => {
-    button.addEventListener('click', function (event) {
-        event.preventDefault();
-        const documentId = this.getAttribute('document_id');
-        const fileId = this.id;
+  // Initialize nav items when the page loads
+  document.addEventListener("DOMContentLoaded", updateNavItems);
 
-        const url = "{{ url_for('delete_document') }}" + "?id="+fileId + "&type=files";
-        console.log(url)
+  // Update nav items periodically with a debounce
+  let updateTimeout = null;
+  function debouncedUpdate() {
+    if (updateTimeout) {
+      clearTimeout(updateTimeout);
+    }
+    updateTimeout = setTimeout(updateNavItems, 500);
+  }
 
-        fetch(url)
-        .then(response => response.json())
-        .then(data => {
-            if (data.status=='ok') {
-                const fileElement = document.getElementById(documentId);
-                if (fileElement) {
-                    fileElement.remove();
-                    console.log("File removed!")
-                }
-            } else {
-                console.error('Failed to delete document:', data);
-            }
-        })
-        .catch(error => console.error('Error:', error));
-    });
-});
+  // Update every 30 seconds, but use debouncing to prevent overlapping calls
+  setInterval(debouncedUpdate, 30000);
+</script>
 ```
 
diff --git a/core/db_connect.py b/core/db_connect.py
index 8f69d85..097f23a 100644
--- a/core/db_connect.py
+++ b/core/db_connect.py
@@ -11,12 +11,11 @@ load_dotenv()
 # Retrieve your MongoDB password from an environment variable
 mongodb_pwd = os.getenv('MONGODB_PWD')
 mongodb_user = os.getenv('MONGODB_USER')
-
-# Your MongoDB URI
-mongodb_uri = f"mongodb+srv://{mongodb_user}:{mongodb_pwd}@cluster0.3sguoku.mongodb.net/flyon?retryWrites=true&w=majority&appName=Cluster0"
+mongodb_uri = os.getenv('MONGODB_URI')
 
 # Connect to your MongoDB database with SSL certificate verification
-connect(host=mongodb_uri, tlsCAFile=certifi.where())
+#connect(host=mongodb_uri, tlsCAFile=certifi.where())
+connect(host=mongodb_uri)
 
 # class User(DynamicDocument):
 #   user_name = StringField()
diff --git a/core/db_default.py b/core/db_default.py
index 2e284a5..6970afd 100644
--- a/core/db_default.py
+++ b/core/db_default.py
@@ -63,4 +63,4 @@ def getCounter(name):
             return str(document.value)
     return 0
 
-initDefault()
+#initDefault()
diff --git a/core/db_document.py b/core/db_document.py
index 35f9db8..f027e88 100644
--- a/core/db_document.py
+++ b/core/db_document.py
@@ -129,7 +129,21 @@ def getDefaults(name):
         print("[DEBUG] No defaults found")
         return None
 
-class User(UserMixin, DynamicDocument):
+class AccessControlMixin:
+    def can_access(self, user):
+        """Default access control - allows access to all users"""
+        return True
+        
+    def can_list(self, user):
+        """Default list access control - allows listing to all users"""
+        return True
+        
+    @classmethod
+    def get_list_filter(cls, user):
+        """Default list filter - no filtering"""
+        return None
+
+class User(UserMixin, AccessControlMixin, DynamicDocument):
     firstname = StringField(required=True)
     name = StringField(required=True)
     email = StringField(required=True, unique=True)
@@ -177,19 +191,31 @@ class User(UserMixin, DynamicDocument):
         """Check if user has admin role"""
         return self.role == 'admin'
     
-    def can_view_user(self, user_id):
-        """Check if user has permission to view a specific user profile"""
-        return self.is_admin or str(self.id) == str(user_id)
+    def can_access(self, user):
+        """Check if a user can access this specific user profile"""
+        return user.is_admin or str(user.id) == str(self.id)
+
+    def can_list(self, user):
+        """Only admins can list all users"""
+        return user.is_admin
+        
+    @classmethod
+    def get_list_filter(cls, user):
+        """Regular users can only see themselves"""
+        if not user.is_admin:
+            return {'_id': user.id}
+        return None
 
-class File(AuditMixin, DynamicDocument):
+class File(AccessControlMixin, AuditMixin, DynamicDocument):
     name = StringField(required=True, min_length=4)
-    owner_id = StringField(required=True)  # Add owner_id field
+    owner_id = StringField(required=True)
+    category = StringField(default='')  # 'prompt' or 'history' or other categories
     meta = {'queryset_class': CustomQuerySet}
     
     def searchFields(self):
         return ['name']
     
-    def fields(self, list_order = False):
+    def fields(self, list_order=False):
         name = {'name': 'name', 'label': 'Name', 'class': '', 'type': 'SingleLine', 'required': True, "full_width": False}
         category = {'name': 'category', 'label': 'Kategorie', 'class': 'hidden-xs', 'type': 'TextField', "full_width": False}
         if list_order:
@@ -198,8 +224,37 @@ class File(AuditMixin, DynamicDocument):
     
     def can_access(self, user):
         """Check if a user can access this file"""
-        return user.is_admin or str(user.id) == str(self.owner_id)
+        # Admin can access all files
+        if user.is_admin:
+            return True
+            
+        # If file is part of a prompt, anyone can access
+        if self.category == 'prompt':
+            return True
+            
+        # For history files or other categories, only owner can access
+        return str(user.id) == str(self.owner_id)
     
+    def can_list(self, user):
+        """Users can list files"""
+        return True
+        
+    @classmethod
+    def get_list_filter(cls, user):
+        """Filter logic for file listing"""
+        if user.is_admin:
+            return None  # Admins see all files
+            
+        # Regular users see:
+        # 1. Their own files (including history files)
+        # 2. Files associated with prompts
+        return {
+            '$or': [
+                {'owner_id': str(user.id)},
+                {'category': 'prompt'}
+            ]
+        }
+
     def save(self, *args, **kwargs):
         if not self.owner_id and current_user and current_user.is_authenticated:
             self.owner_id = str(current_user.id)
@@ -208,26 +263,41 @@ class File(AuditMixin, DynamicDocument):
     def to_json(self):
         return mongoToJson(self)
 
-class Filter(AuditMixin, DynamicDocument):
-    name = StringField(required=True,min_length=4)
+class Filter(AccessControlMixin, AuditMixin, DynamicDocument):
+    name = StringField(required=True, min_length=4)
     meta = {'queryset_class': CustomQuerySet}
+    
     def searchFields(self):
         return ['name']
-    def fields(self, list_order = False):
-        name = {'name' :  'name', 'label' : 'Name', 'class' : '', 'type' : 'SingleLine', 'required' : True}
-        category = {'name' :  'category', 'label' : 'Kategorie', 'class' : '', 'type' : 'SingleLine'}
+        
+    def fields(self, list_order=False):
+        name = {'name': 'name', 'label': 'Name', 'class': '', 'type': 'SingleLine', 'required': True}
+        category = {'name': 'category', 'label': 'Kategorie', 'class': '', 'type': 'SingleLine'}
 
-        if list_order != None and list_order == True:
-            #fields in the overview table of the collection
+        if list_order:
             return [name, category]
         return [name, category]
+
+    def can_access(self, user):
+        """Only admins can access filters"""
+        return user.is_admin
+        
+    def can_list(self, user):
+        """Only admins can list filters"""
+        return user.is_admin
+        
+    @classmethod
+    def get_list_filter(cls, user):
+        """No additional filtering needed since access is already admin-only"""
+        return None
+
     def to_json(self):
         return mongoToJson(self)
 
 #example of a DynamicDocument with all available fields
 #fields are then used in the form_elements.html to create the form
 #the fields are then used in the db_crud.py to create the document
-class Example(AuditMixin, DynamicDocument):
+class Example(AccessControlMixin, AuditMixin, DynamicDocument):
     name = StringField(required=True, min_length=1)
     email = StringField(required=True, min_length=1)
     salutation = StringField(default='')
@@ -314,9 +384,22 @@ class Example(AuditMixin, DynamicDocument):
     def to_json(self):
         return mongoToJson(self)
 
+    def can_access(self, user):
+        """Only admins can access examples"""
+        return user.is_admin
+        
+    def can_list(self, user):
+        """Only admins can list examples"""
+        return user.is_admin
+        
+    @classmethod
+    def get_list_filter(cls, user):
+        """No additional filtering needed since access is already admin-only"""
+        return None
+
 #AI Documents
 #AI Chat Bot Code
-class Model(AuditMixin, DynamicDocument):
+class Model(AccessControlMixin, AuditMixin, DynamicDocument):
     provider = StringField(required=True, min_length=1)
     model = StringField(required=True, min_length=1)
     name = StringField(required=True, min_length=1)
@@ -335,35 +418,73 @@ class Model(AuditMixin, DynamicDocument):
             return [name, provider, model]
         return [name, provider, model]
 
+    def can_access(self, user):
+        """Only admins can access models"""
+        return user.is_admin
+        
+    def can_list(self, user):
+        """Only admins can list models"""
+        return user.is_admin
+        
+    @classmethod
+    def get_list_filter(cls, user):
+        """No additional filtering needed since access is already admin-only"""
+        return None
+
     def to_json(self):
         return mongoToJson(self)
 
-class History(AuditMixin, DynamicDocument):
-    user_id = StringField(required=True)  # Store user ID instead of username
+class History(AccessControlMixin, AuditMixin, DynamicDocument):
+    user_id = StringField(required=True)
     chat_started = IntField()
     messages = StringField()
     first_message = StringField()
     link = StringField(default='')
     file_ids = ListField(StringField())
     
+    meta = {'queryset_class': CustomQuerySet}
+    
     def searchFields(self):
-        return ['messages','first_message']
+        return ['messages', 'first_message']
     
     def fields(self, list_order=False):
         user_id = {'name': 'user_id', 'label': 'User ID', 'class': '', 'type': 'SingleLine', 'required': True, 'full_width': False}
-        chat_started = {'name': 'chat_started', 'label': ' Started', 'class': '', 'type': 'IntField', 'required': True, 'full_width': False}
+        created_date = {'name': 'created_date', 'label': 'Date', 'class': '', 'type': 'Date', 'full_width': False}
         first_message = {'name': 'first_message', 'label': 'First Message', 'class': '', 'type': 'SingleLine', 'required': False, 'full_width': True}
         messages = {'name': 'messages', 'label': 'Messages', 'class': '', 'type': 'MultiLine', 'required': False, 'full_width': True}
         link = {'name': 'link', 'label': 'Chat', 'class': '', 'type': 'ButtonField', 'full_width': False, 'link': '/chat/history'}
+        
         if list_order:
-            return [link, first_message]
+            # Show these fields in the list view
+            return [created_date, first_message, link]
+        # Show these fields in the edit form
         return [user_id, first_message, chat_started, messages, link]
     
-    def can_view(self, user):
-        """Check if a user can view this history"""
+    def can_access(self, user):
+        """Check if a user can access this specific history entry"""
         return user.is_admin or str(user.id) == str(self.user_id)
+    
+    def can_list(self, user):
+        """Users can always list their own history"""
+        return True
+        
+    @classmethod
+    def get_list_filter(cls, user):
+        """Filter to only show user's own history"""
+        print(f"[DEBUG] Getting list filter for user {user.id}")
+        filter_dict = {'user_id': str(user.id)}
+        print(f"[DEBUG] Returning filter: {filter_dict}")
+        return filter_dict
+    
+    def save(self, *args, **kwargs):
+        if not self.user_id and current_user and current_user.is_authenticated:
+            self.user_id = str(current_user.id)
+        return super().save(*args, **kwargs)
 
-class Prompt(AuditMixin, DynamicDocument):
+    def to_json(self):
+        return mongoToJson(self)
+
+class Prompt(AccessControlMixin, AuditMixin, DynamicDocument):
     name = StringField(required=True, min_length=1)
     welcome_message = StringField(required=True, min_length=1)
     system_message = StringField(required=True, min_length=1)
@@ -396,5 +517,18 @@ class Prompt(AuditMixin, DynamicDocument):
             return [link, name, prompt]
         return [name, welcome_message, system_message, prompt, files, link]
 
+    def can_access(self, user):
+        """Check if user can access this prompt"""
+        return True  # All users can access prompts
+        
+    def can_list(self, user):
+        """Check if user can list prompts"""
+        return True  # All users can list prompts
+        
+    @classmethod
+    def get_list_filter(cls, user):
+        """No filtering needed for prompts"""
+        return None  # No filtering - everyone sees all prompts
+
     def to_json(self):
         return mongoToJson(self)
diff --git a/core/db_helper.py b/core/db_helper.py
index eabebf4..291914d 100644
--- a/core/db_helper.py
+++ b/core/db_helper.py
@@ -6,70 +6,73 @@ from core.db_document import File, getDefaults, Filter
 import json
 import os
 
-def searchDocuments(collection, searchFields,start = 0, limit = 10, search = '',filter='',product_name='',mode=''):
-    searchAnd = []
-    searchDict={}
+def searchDocuments(collection, searchFields, start=0, limit=10, search='', filter=None, product_name='', mode=''):
+    print(f"[DEBUG] searchDocuments called with filter={filter}")
+    searchDict = {}
 
-    if (search != None and search !=''):
+    # Handle search term if provided
+    if search and search.strip():
         searchArray = []
         for name in searchFields:
-            #search contains string, option i means case insentive
-            searchArray.append({name: {'$regex': search, '$options' : 'i'}})
-
+            searchArray.append({name: {'$regex': search, '$options': 'i'}})
         searchDict = {'$or': searchArray}
 
-        if filter !='':
-            searchAnd = getFilterDict(filter)
-
-        if product_name!='':
-            searchAnd.append({'name' : product_name})
+    # Handle filter
+    if filter:
+        if isinstance(filter, str):
+            # For string filters, use getFilterDict
+            filter_dict = getFilterDict(filter)
+            print(f"[DEBUG] Filter string converted to: {filter_dict}")
+            if filter_dict:
+                if searchDict:
+                    if '$and' not in searchDict:
+                        searchDict = {'$and': [searchDict]}
+                    searchDict['$and'].extend(filter_dict)
+                else:
+                    searchDict = {'$and': filter_dict}
+        else:
+            # For direct dictionary filters (like user_id filter)
+            print(f"[DEBUG] Using direct filter: {filter}")
+            if searchDict:
+                if '$and' not in searchDict:
+                    searchDict = {'$and': [searchDict, filter]}
+                else:
+                    searchDict['$and'].append(filter)
+            else:
+                searchDict.update(filter)
+
+    # Handle product name
+    if product_name:
+        product_filter = {'name': product_name}
+        if searchDict:
+            if '$and' not in searchDict:
+                searchDict = {'$and': [searchDict, product_filter]}
+            else:
+                searchDict['$and'].append(product_filter)
+        else:
+            searchDict = product_filter
 
-        if searchAnd != []:
-            searchDict['$and'] = searchAnd
+    print(f"[DEBUG] Final search dict: {searchDict}")
 
-        if mode =='channels':
+    try:
+        # Test the query first
+        test_count = collection.objects(__raw__=searchDict).count()
+        print(f"[DEBUG] Test query found {test_count} documents")
+        
+        # Apply the query
+        if mode == 'channels':
             recordsTotal = collection.objects(__raw__=searchDict).count()
             documents = collection.objects(__raw__=searchDict).order_by('category_id').skip(start).limit(limit)
         else:
             recordsTotal = collection.objects(__raw__=searchDict).count()
             documents = collection.objects(__raw__=searchDict).skip(start).limit(limit)
-        return processDocuments(documents,recordsTotal,start,limit)
-    else:
-        if filter !='':
-            searchDict = {}
-            searchAnd = getFilterDict(filter)
-            if searchAnd !=[]:
-                if product_name!='':
-                    searchAnd.append({'name' : product_name})
-                searchDict['$and'] = searchAnd
-                if mode =='channels':
-                    recordsTotal = collection.objects(__raw__=searchDict).count()
-                    documents = collection.objects(__raw__=searchDict).order_by('category_id').skip(start).limit(limit)
-                else:
-                    recordsTotal = collection.objects(__raw__=searchDict).count()
-                    documents = collection.objects(__raw__=searchDict).skip(start).limit(limit)
-                return processDocuments(documents,recordsTotal,start,limit)
-            else:
-                return {'status' : 'error', 'message' : 'no filter found' }
-        else:
-            if product_name!='':
-                searchDict['$and'] = [{'name' : product_name}]
-                if mode =='channels':
-                    recordsTotal = collection.objects(__raw__=searchDict).count()
-                    documents = collection.objects(__raw__=searchDict).order_by('category_id').skip(start).limit(limit)
-                else:
-                    recordsTotal = collection.objects(__raw__=searchDict).count()
-                    documents = collection.objects(__raw__=searchDict).skip(start).limit(limit)
-                return processDocuments(documents,recordsTotal,start,limit)
-            else:
-                if mode=='channels':
-                    recordsTotal = collection.objects().count()
-                    documents = collection.objects.order_by('category_id').skip(start).limit(limit)
 
-                else:
-                    recordsTotal = collection.objects().count()
-                    documents = collection.objects.skip(start).limit(limit)
-                return processDocuments(documents,recordsTotal,start,limit)
+        return processDocuments(documents, recordsTotal, start, limit)
+    except Exception as e:
+        print(f"[DEBUG] Error in searchDocuments: {str(e)}")
+        print(f"[DEBUG] Collection: {collection}")
+        print(f"[DEBUG] Search dict: {searchDict}")
+        return {'status': 'error', 'message': str(e)}
 
 
 
@@ -158,8 +161,8 @@ def getFilter(category):
 def processDocuments(documents, recordsTotal, start, limit):
     print('processDocuments')
     
-    # Handle case where documents is None or recordsTotal is not defined
-    if documents is None or recordsTotal is None:
+    # Handle case where documents is None
+    if documents is None:
         return {'status': 'error', 'message': 'no documents found'}
 
     # Calculate pagination values
@@ -171,6 +174,7 @@ def processDocuments(documents, recordsTotal, start, limit):
     end = min(start + limit, recordsTotal)
     display_start = start + 1 if recordsTotal > 0 else start
 
+    # Return successful response even if no documents found (empty list is valid)
     return {
         'status': 'ok',
         'message': '',
diff --git a/core/helper.py b/core/helper.py
index eda758a..da9550f 100644
--- a/core/helper.py
+++ b/core/helper.py
@@ -95,8 +95,16 @@ def loadData(mydata):
     return None
 
 def getList(name, request, filter=None, return_json=False):
+    print(f"[DEBUG] getList called for {name}")
     default = getDefaults(name)
     if default == None:
+        print("[DEBUG] No defaults found")
+        return redirect(url_for('index'))
+        
+    # Check if user can list this collection
+    if not default.document.can_list(current_user):
+        print("[DEBUG] User cannot list this collection")
+        flash('Access denied.', 'error')
         return redirect(url_for('index'))
         
     data, prev, next, last, recordsTotal = initData()
@@ -104,25 +112,34 @@ def getList(name, request, filter=None, return_json=False):
     
     filter_data = getFilter(default.document_name)
     mode = default.collection_name
-
-    # Determine if we should show the new button - hide for user collection
-    show_new_button = name != 'user'
-
-    # Handle combined filters for user permissions and existing filters
+    
+    # Get access control filter for this document type
+    access_filter = default.document.get_list_filter(current_user)
+    print(f"[DEBUG] Access filter: {access_filter}")
+    
+    # Combine all filters
+    combined_filter = {}
+    if access_filter:
+        combined_filter.update(access_filter)
     if filter:
-        if filter_param:
-            filter_dict = getFilterDict(filter_param)
-            filter.update(filter_dict)
-        mydata = searchDocuments(default.collection, default.document.searchFields(), 
-                               start, limit, search, filter, product_name, mode)
-    else:
-        mydata = searchDocuments(default.collection, default.document.searchFields(),
-                               start, limit, search, filter_param, product_name, mode)
+        combined_filter.update(filter)
+    if filter_param:
+        filter_dict = getFilterDict(filter_param)
+        combined_filter.update(filter_dict)
+    
+    print(f"[DEBUG] Combined filter: {combined_filter}")
 
-    processedData = loadData(mydata)
+    # Process the search query with combined filters
+    # Pass empty dict if no filter to avoid "no filter found" error
+    filter_to_use = combined_filter if combined_filter else {}
+    mydata = searchDocuments(default.collection, default.document.searchFields(), 
+                           start, limit, search, filter_to_use, product_name, mode)
+    print(f"[DEBUG] Search results: {mydata}")
 
+    processedData = loadData(mydata)
     if processedData:
         data, start, end, prev, next, recordsTotal, last = processedData
+        print(f"[DEBUG] Found {recordsTotal} records")
         recordsTotal = int(recordsTotal) if recordsTotal is not None else 0
         if return_json:
             return jsonify({
@@ -165,7 +182,7 @@ def getList(name, request, filter=None, return_json=False):
                                  table_content=table_content,
                                  filter=filter_param,
                                  filter_data=filter_data,
-                                 show_new_button=show_new_button,
+                                 show_new_button=True,
                                  product_name=product_name)
     except:
         pass
@@ -192,38 +209,35 @@ def getList(name, request, filter=None, return_json=False):
                          table_content=table_content,
                          filter=filter_param,
                          filter_data=filter_data,
-                         show_new_button=show_new_button,
+                         show_new_button=True,
                          product_name=product_name)
 
 def handleDocument(name, id, request, return_json=False):
     try:
-        print(f"[DEBUG] Starting handleDocument with name={name}, id={id}")
-        print(f"[DEBUG] Request method: {request.method}")
-        print(f"[DEBUG] Request form data: {request.form}")
         default = getDefaults(name)
-        print(f"[DEBUG] getDefaults result: {default}")
-
         if default is None:
-            print(f"[DEBUG] No defaults found for name: {name}")
             flash('Invalid document type', 'error')
             return redirect(url_for('index'))
 
-        # Add permission check for user documents
-        if name == 'user' and id:
-            if not current_user.can_view_user(id):
-                flash('Access denied. You can only view your own profile.', 'error')
-                return redirect(url_for('list', collection='user'))
+        # For existing documents, verify access
+        if id:
+            doc = default.collection.objects(_id=ObjectId(id)).first()
+            if not doc or not doc.can_access(current_user):
+                flash('Access denied.', 'error')
+                return redirect(url_for('list', collection=default.collection_name))
+
+        # For new documents
+        else:
+            # Check if user can list (create new) documents of this type
+            if not default.document.can_list(current_user):
+                flash('Access denied.', 'error')
+                return redirect(url_for('index'))
                 
-        # Add permission check for history documents
-        if name == 'history' and id:
-            try:
-                history_doc = default.collection.objects(_id=ObjectId(id)).first()
-                if history_doc and not history_doc.can_view(current_user):
-                    flash('Access denied. You can only view your own history.', 'error')
-                    return redirect(url_for('list', collection='history'))
-            except Exception as e:
-                print(f"[DEBUG] Error checking history access: {str(e)}")
-                return redirect(url_for('list', collection='history'))
+            # Set user_id for new documents if they use it
+            if request.method == 'POST' and hasattr(default.document, 'user_id'):
+                form_data = htmlFormToDict(request.form)
+                form_data['user_id'] = str(current_user.id)
+                request.form = form_data
 
         print(f"[DEBUG] Got defaults: document_name={default.document_name}, collection_name={default.collection_name}")
         mode = default.document_name
@@ -239,6 +253,9 @@ def handleDocument(name, id, request, return_json=False):
                     raise Exception("Failed to get document instance")
                 data = json.loads(doc.to_json())
                 data['id'] = ''  # Empty ID for new document
+                # Set user_id for new history documents
+                if name == 'history':
+                    data['user_id'] = str(current_user.id)
             except Exception as e:
                 print(f"[DEBUG] Error initializing new document: {str(e)}")
                 flash('Error creating new document', 'error')
@@ -351,27 +368,53 @@ def deleteDocument(request):
         return {'status': 'error', 'message': data.get('message', 'document not deleted')}
 
 def tableContent(documents, table_header):
-    tableContent=[]
+    print(f"[DEBUG] Creating table content for {len(documents)} documents")
+    tableContent = []
 
     for document in documents:
+        print(f"[DEBUG] Processing document: {document}")
         tableRow = []
         for field in table_header:
             if field['name'] in document.keys() and 'id' in document.keys():
-                if field['name'].find('_date') !=-1:
-           
-                    date= document[field['name']]['$date']
-                    document[field['name']] = datetime.datetime.fromtimestamp(date/1000).strftime('%d.%m.%Y')
-                if 'link' in field.keys():
-                    tableRow.append({'name': field['name'], 'value' : document[field['name']], 'class' : field['class'], 'id' : document['id'],'type':field['type'],'link':field['link'],'label':field['label']})
+                value = document[field['name']]
+                
+                # Handle date fields
+                if field['name'].find('_date') != -1:
+                    if isinstance(value, dict) and '$date' in value:
+                        date = value['$date']
+                        value = datetime.datetime.fromtimestamp(date/1000).strftime('%d.%m.%Y')
+                
+                # Handle link fields for history
+                if field['type'] == 'ButtonField' and field.get('link') == '/chat/history':
+                    link = f"{field['link']}/{document['id']}"
+                    tableRow.append({
+                        'name': field['name'],
+                        'value': value,
+                        'class': field['class'],
+                        'id': document['id'],
+                        'type': field['type'],
+                        'link': link,
+                        'label': field['label']
+                    })
                 else:
-                    tableRow.append({'name': field['name'], 'value' : document[field['name']], 'class' : field['class'], 'id' : document['id'],'type':field['type'],'label':field['label']})
-                    
-
+                    tableRow.append({
+                        'name': field['name'],
+                        'value': value,
+                        'class': field['class'],
+                        'id': document['id'],
+                        'type': field['type'],
+                        'label': field.get('label', field['name'])
+                    })
             else:
+                print(f"[DEBUG] Field {field['name']} not found in document or no id")
                 tableRow.append('')
-        tableContent.append(tableRow)
-
+        
+        if tableRow:  # Only add rows that have content
+            tableContent.append(tableRow)
+            
+    print(f"[DEBUG] Created {len(tableContent)} table rows")
     return tableContent
+
 def getElements(data, document):
     elements=[]
     fields = document.fields()
@@ -485,7 +528,7 @@ def upload_files(request, category='', document_id=''):
                             file_type=file_type, 
                             document_id=document_id, 
                             element_id=element_id,
-                            owner_id=str(current_user.id)  # Set the owner_id to current user's ID
+                            user_id=str(current_user.id)  # Set the user_id to current user's ID
                         )
                         fileDB.save()
                         fileID = getDocumentID(fileDB)
@@ -545,63 +588,106 @@ def prepFilterData(form_data):
 #only pdf/txt files are supported for now
 def prepare_context_from_files(files):
     result = {
-        "status": "",
+        "status": "error",
         "data": "",
         "character_count": 0
     }
-    combined_text = ""
+    
+    print(f"[DEBUG] prepare_context_from_files called with {len(files)} files")
+    
+    if not files:
+        print("[DEBUG] No files provided")
+        result["status"] = "error"
+        result["data"] = "No files provided"
+        return result
+
     try:
+        combined_text = []
+        base_path = os.path.dirname(os.path.dirname(os.path.realpath(__file__)))
+        print(f"[DEBUG] Base path for file reading: {base_path}")
+        
         for file in files:
-            # Convert MongoDB document to dict if needed
-            if hasattr(file, 'to_mongo'):
-                file = file.to_mongo()
-                file_id = str(file['_id'])
-            else:
-                file_id = file['_id']['$oid']
-
-            file_path = os.path.join(file['path'], f"{file_id}.{file['file_type'].lower()}")
+            try:
+                print(f"[DEBUG] Processing file: {file.get('name', 'Unknown')}")
+                # Convert MongoDB document to dict if needed
+                if hasattr(file, 'to_mongo'):
+                    file = file.to_mongo().to_dict()
+                    print("[DEBUG] Converted MongoDB document to dict")
+                
+                # Get file ID consistently
+                if isinstance(file.get('_id'), dict) and '$oid' in file['_id']:
+                    file_id = file['_id']['$oid']
+                elif isinstance(file.get('_id'), str):
+                    file_id = file['_id']
+                else:
+                    file_id = str(file['_id'])
+                print(f"[DEBUG] File ID: {file_id}")
+                
+                # Build full file path
+                file_path = os.path.join(base_path, file['path'], f"{file_id}.{file['file_type'].lower()}")
+                print(f"[DEBUG] Full file path: {file_path}")
+                
+                if not os.path.exists(file_path):
+                    print(f"[DEBUG] File not found at path: {file_path}")
+                    continue
+                
+                print(f"[DEBUG] Reading file: {file['name']}")
+                file_content = f"\nContent of File: {file['name']}\n{'='*50}\n"
+                
+                if file['file_type'].lower() == 'pdf':
+                    try:
+                        with open(file_path, 'rb') as pdf_file:
+                            pdf_reader = PdfReader(pdf_file)
+                            print(f"[DEBUG] PDF has {len(pdf_reader.pages)} pages")
+                            for page_num in range(len(pdf_reader.pages)):
+                                page = pdf_reader.pages[page_num]
+                                text = page.extract_text()
+                                if text:
+                                    print(f"[DEBUG] Extracted text from page {page_num + 1}")
+                                    text = ' '.join(text.split())
+                                    text = text.replace(' .', '.').replace(' ,', ',')
+                                    paragraphs = text.split('\n')
+                                    formatted_text = '\n\n'.join(p.strip() for p in paragraphs if p.strip())
+                                    file_content += formatted_text + "\n\n"
+                                else:
+                                    print(f"[DEBUG] No text found on page {page_num + 1}")
+                                    file_content += "[No text found on this page]\n\n"
+                    except Exception as e:
+                        print(f"[DEBUG] Error reading PDF {file['name']}: {str(e)}")
+                        continue
+                        
+                elif file['file_type'].lower() == 'txt':
+                    try:
+                        with open(file_path, 'r', encoding='utf-8') as txt_file:
+                            text = txt_file.read()
+                            print(f"[DEBUG] Read {len(text)} characters from text file")
+                            file_content += text
+                    except Exception as e:
+                        print(f"[DEBUG] Error reading TXT {file['name']}: {str(e)}")
+                        continue
+                        
+                file_content += f"\n{'='*50}\n"
+                print(f"[DEBUG] Added {len(file_content)} characters of content")
+                combined_text.append(file_content)
+                
+            except Exception as e:
+                print(f"[DEBUG] Error processing file: {str(e)}")
+                continue
+            
+        if combined_text:
+            result["status"] = "ok"
+            result["data"] = "\n".join(combined_text)
+            result["character_count"] = len(result["data"])
+            print(f"[DEBUG] Successfully combined {len(combined_text)} files with total {result['character_count']} characters")
+        else:
+            print("[DEBUG] No content could be extracted from files")
+            result["status"] = "error"
+            result["data"] = "No content could be extracted from files"
             
-            if file['file_type'].lower() == 'pdf':
-                try:
-                    with open(file_path, 'rb') as pdf_file:
-                        pdf_reader = PdfReader(pdf_file)
-                        combined_text += f"Content of File: {file['name']}\n"
-                        combined_text += "-" * 50 + "\n"
-                        for page_num in range(len(pdf_reader.pages)):
-                            page = pdf_reader.pages[page_num]
-                            text = page.extract_text()
-                            if text:
-                                text = ' '.join(text.split())
-                                text = text.replace(' .', '.').replace(' ,', ',')
-                                paragraphs = text.split('\n')
-                                formatted_text = '\n\n'.join(p.strip() for p in paragraphs if p.strip())
-                                combined_text += formatted_text
-                            else:
-                                combined_text += "[No text found on this page]\n"
-                            combined_text += "\n\n"
-                        combined_text += "-" * 50 + "\n\n"
-                except Exception as e:
-                    result["status"] = "error"
-                    result["data"] = f"Error reading {file['name']}: {e}"
-                    return result
-            elif file['file_type'].lower() == 'txt':
-                try:
-                    with open(file_path, 'r', encoding='utf-8') as txt_file:
-                        text = txt_file.read()
-                        combined_text += f"Content of File: {file['name']}\n"
-                        combined_text += "-" * 50 + "\n"
-                        combined_text += text
-                        combined_text += "\n\n" + "-" * 50 + "\n\n"
-                except Exception as e:
-                    result["status"] = "error"
-                    result["data"] = f"Error reading {file['name']}: {e}"
-                    return result
-        result["status"] = "ok"
-        result["data"] = combined_text
-        result["character_count"] = len(combined_text)
     except Exception as e:
+        print(f"[DEBUG] Error in prepare_context_from_files: {str(e)}")
         result["status"] = "error"
-        result["data"] = str(e)
+        result["data"] = f"Error processing files: {str(e)}"
 
     return result
 
@@ -660,13 +746,13 @@ def upload_file(file, category='history'):
             
         fileDB = File(
             name=filename,
-            path=relative_path,  # Store relative path for consistent deletion
+            path=relative_path,
             category=category,
             file_type=file_type,
-            owner_id=str(current_user.id)  # Set the owner_id to current user's ID
+            user_id=str(current_user.id)
         )
         fileDB.save()
-        fileID = str(fileDB.id)  # Ensure we're using string ID consistently
+        fileID = str(fileDB.id)
         
         file_save_path = os.path.join(absolute_path, f"{fileID}.{file_type}")
         print(f"[DEBUG] Saving file to: {file_save_path}")
@@ -675,24 +761,37 @@ def upload_file(file, category='history'):
         response = {
             'status': 'ok',
             'file_id': fileID,
-            'filename': filename,  # Keep original name for frontend
-            'name': filename,      # Also include as name for consistency
-            'file_type': file_type,  # Keep original file_type for frontend
-            'type': file_type,       # Also include as type for consistency
+            'filename': filename,
+            'name': filename,
+            'file_type': file_type,
+            'type': file_type,
             'path': relative_path
         }
         
-        # Add context for text-based files
+        # Always get context for text-based files
         if file_type in ['pdf', 'txt']:
             try:
-                context = prepare_context_from_files([fileDB])
+                # Convert fileDB to dict format expected by prepare_context_from_files
+                file_dict = {
+                    '_id': fileID,
+                    'name': filename,
+                    'path': relative_path,
+                    'file_type': file_type
+                }
+                
+                print(f"[DEBUG] Getting context for file: {file_dict}")
+                context = prepare_context_from_files([file_dict])
+                
                 if context['status'] == 'ok':
+                    print(f"[DEBUG] Successfully extracted context with {context['character_count']} characters")
                     response['content'] = context['data']
                     response['character_count'] = context['character_count']
+                else:
+                    print(f"[DEBUG] Context extraction failed: {context['data']}")
+                    response['content'] = f"[Error extracting content from {filename}]"
             except Exception as e:
                 print(f"[DEBUG] Error getting file context: {str(e)}")
-                # Don't fail the upload if context extraction fails
-                pass
+                response['content'] = f"[Error processing {filename}: {str(e)}]"
                 
         # Add base64 for images
         elif file_type in ['jpeg', 'jpg', 'png']:
@@ -700,8 +799,7 @@ def upload_file(file, category='history'):
                 response['base64_image'] = encode_image(file_save_path)
             except Exception as e:
                 print(f"[DEBUG] Error encoding image: {str(e)}")
-                # Don't fail the upload if image encoding fails
-                pass
+                response['base64_image'] = None
                 
         print(f"[DEBUG] Upload successful, returning response: {response}")
         return response
diff --git a/package.json b/package.json
index d77ae23..19e25c8 100644
--- a/package.json
+++ b/package.json
@@ -1,5 +1,7 @@
 {
   "devDependencies": {
+    "@iconify/json": "^2.2.310",
+    "@iconify/tailwind": "^1.2.0",
     "browser-sync": "^2.29.3",
     "tailwindcss": "^3.4.17"
   },
@@ -10,7 +12,7 @@
   "dependencies": {
     "@tailwindcss/typography": "^0.5.15",
     "flatpickr": "^4.6.13",
-    "flyonui": "^1.2.0",
+    "flyonui": "^1.3.0",
     "prettier": "^3.3.3",
     "prettier-plugin-tailwindcss": "^0.6.6",
     "tailwindcss-motion": "^1.0.0"
diff --git a/static/css/flatpickr.min.css b/static/css/flatpickr.min.css
old mode 100644
new mode 100755
diff --git a/static/css/output.css b/static/css/output.css
old mode 100644
new mode 100755
index 34f057f..2be2ffe
--- a/static/css/output.css
+++ b/static/css/output.css
@@ -1 +1 @@
-*,:after,:before{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: ;--tw-contain-size: ;--tw-contain-layout: ;--tw-contain-paint: ;--tw-contain-style: }::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: ;--tw-contain-size: ;--tw-contain-layout: ;--tw-contain-paint: ;--tw-contain-style: }/*! tailwindcss v3.4.17 | MIT License | https://tailwindcss.com*/*,:after,:before{box-sizing:border-box;border:0 solid #e5e7eb}:after,:before{--tw-content:""}:host,html{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;-o-tab-size:4;tab-size:4;font-family:ui-sans-serif,system-ui,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;font-feature-settings:normal;font-variation-settings:normal;-webkit-tap-highlight-color:transparent}body{margin:0;line-height:inherit}hr{height:0;color:inherit;border-top-width:1px}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;font-feature-settings:normal;font-variation-settings:normal;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit;border-collapse:collapse}button,input,optgroup,select,textarea{font-family:inherit;font-feature-settings:inherit;font-variation-settings:inherit;font-size:100%;font-weight:inherit;line-height:inherit;letter-spacing:inherit;color:inherit;margin:0;padding:0}button,select{text-transform:none}button,input:where([type=button]),input:where([type=reset]),input:where([type=submit]){-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dd,dl,figure,h1,h2,h3,h4,h5,h6,hr,p,pre{margin:0}fieldset{margin:0}fieldset,legend{padding:0}menu,ol,ul{list-style:none;margin:0;padding:0}dialog{padding:0}textarea{resize:vertical}input::-moz-placeholder,textarea::-moz-placeholder{opacity:1;color:#9ca3af}input::placeholder,textarea::placeholder{opacity:1;color:#9ca3af}[role=button],button{cursor:pointer}:disabled{cursor:default}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{max-width:100%;height:auto}[hidden]:where(:not([hidden=until-found])){display:none}:root,[data-theme]{background-color:var(--fallback-b1,oklch(var(--b1)/1));color:var(--fallback-bc,oklch(var(--bc)/1))}@supports not (color:oklch(0 0 0)){:root{color-scheme:light;--fallback-p:#491eff;--fallback-pc:#d4dbff;--fallback-s:#ff41c7;--fallback-sc:#fff9fc;--fallback-a:#00cfbd;--fallback-ac:#00100d;--fallback-n:#2b3440;--fallback-nc:#d7dde4;--fallback-b1:#fff;--fallback-b2:#e5e6e6;--fallback-b3:#e5e6e6;--fallback-bc:#1f2937;--fallback-bs:#1f2937;--fallback-in:#00b3f0;--fallback-inc:#000;--fallback-su:#00ca92;--fallback-suc:#000;--fallback-wa:#ffc22d;--fallback-wac:#000;--fallback-er:#ff6f70;--fallback-erc:#000}@media (prefers-color-scheme:dark){:root{color-scheme:dark;--fallback-p:#7582ff;--fallback-pc:#050617;--fallback-s:#ff71cf;--fallback-sc:#190211;--fallback-a:#00c7b5;--fallback-ac:#000e0c;--fallback-n:#2a323c;--fallback-nc:#a6adbb;--fallback-b1:#1d232a;--fallback-b2:#191e24;--fallback-b3:#15191e;--fallback-bc:#a6adbb;--fallback-bs:#989eab;--fallback-in:#00b3f0;--fallback-inc:#000;--fallback-su:#00ca92;--fallback-suc:#000;--fallback-wa:#ffc22d;--fallback-wac:#000;--fallback-er:#ff6f70;--fallback-erc:#000}}}html{-webkit-tap-highlight-color:transparent}[class*="icon-[tabler--"]{display:inline-block;width:1rem;height:1rem;background-color:currentColor;-webkit-mask-image:var(--svg);mask-image:var(--svg);-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%}.icon-\[tabler--app-window\]{--svg:url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24'%3E%3Cpath fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M3 7a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2zm3 1h.01M9 8h.01'/%3E%3C/svg%3E")}.icon-\[tabler--check\]{--svg:url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24'%3E%3Cpath fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m5 12 5 5L20 7'/%3E%3C/svg%3E")}.icon-\[tabler--chevron-down\]{--svg:url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24'%3E%3Cpath fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m6 9 6 6 6-6'/%3E%3C/svg%3E")}.icon-\[tabler--chevron-left\]{--svg:url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24'%3E%3Cpath fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m15 6-6 6 6 6'/%3E%3C/svg%3E")}.icon-\[tabler--chevron-right\]{--svg:url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24'%3E%3Cpath fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m9 6 6 6-6 6'/%3E%3C/svg%3E")}.icon-\[tabler--chevrons-left\]{--svg:url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24'%3E%3Cpath fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m11 7-5 5 5 5m6-10-5 5 5 5'/%3E%3C/svg%3E")}.icon-\[tabler--chevrons-right\]{--svg:url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24'%3E%3Cpath fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m7 7 5 5-5 5m6-10 5 5-5 5'/%3E%3C/svg%3E")}.icon-\[tabler--clock\]{--svg:url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24'%3E%3Cg fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M3 12a9 9 0 1 0 18 0 9 9 0 0 0-18 0'/%3E%3Cpath d='M12 7v5l3 3'/%3E%3C/g%3E%3C/svg%3E")}.icon-\[tabler--dashboard\]{--svg:url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24'%3E%3Cg fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M10 13a2 2 0 1 0 4 0 2 2 0 1 0-4 0m3.45-1.45L15.5 9.5'/%3E%3Cpath d='M6.4 20a9 9 0 1 1 11.2 0z'/%3E%3C/g%3E%3C/svg%3E")}.icon-\[tabler--edit\]{--svg:url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24'%3E%3Cg fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M7 7H6a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2h9a2 2 0 0 0 2-2v-1'/%3E%3Cpath d='M20.385 6.585a2.1 2.1 0 0 0-2.97-2.97L9 12v3h3zM16 5l3 3'/%3E%3C/g%3E%3C/svg%3E")}.icon-\[tabler--logout-2\]{--svg:url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24'%3E%3Cg fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M10 8V6a2 2 0 0 1 2-2h7a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2h-7a2 2 0 0 1-2-2v-2'/%3E%3Cpath d='M15 12H3l3-3m0 6-3-3'/%3E%3C/g%3E%3C/svg%3E")}.icon-\[tabler--menu-2\]{--svg:url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24'%3E%3Cpath fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 6h16M4 12h16M4 18h16'/%3E%3C/svg%3E")}.icon-\[tabler--message\]{--svg:url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24'%3E%3Cpath fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M8 9h8m-8 4h6m4-9a3 3 0 0 1 3 3v8a3 3 0 0 1-3 3h-5l-5 3v-3H6a3 3 0 0 1-3-3V7a3 3 0 0 1 3-3z'/%3E%3C/svg%3E")}.icon-\[tabler--plus\]{--svg:url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24'%3E%3Cpath fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 5v14m-7-7h14'/%3E%3C/svg%3E")}.icon-\[tabler--shield-lock\]{--svg:url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24'%3E%3Cg fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M12 3a12 12 0 0 0 8.5 3A12 12 0 0 1 12 21 12 12 0 0 1 3.5 6 12 12 0 0 0 12 3'/%3E%3Cpath d='M11 11a1 1 0 1 0 2 0 1 1 0 1 0-2 0m1 1v2.5'/%3E%3C/g%3E%3C/svg%3E")}.icon-\[tabler--trash\]{--svg:url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24'%3E%3Cpath fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 7h16m-10 4v6m4-6v6M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2l1-12M9 7V4a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v3'/%3E%3C/svg%3E")}.icon-\[tabler--trending-down\]{--svg:url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24'%3E%3Cg fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='m3 7 6 6 4-4 8 8'/%3E%3Cpath d='M21 10v7h-7'/%3E%3C/g%3E%3C/svg%3E")}.icon-\[tabler--trending-up\]{--svg:url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24'%3E%3Cg fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='m3 17 6-6 4 4 8-8'/%3E%3Cpath d='M14 7h7v7'/%3E%3C/g%3E%3C/svg%3E")}.icon-\[tabler--user\]{--svg:url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24'%3E%3Cpath fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M8 7a4 4 0 1 0 8 0 4 4 0 0 0-8 0M6 21v-2a4 4 0 0 1 4-4h4a4 4 0 0 1 4 4v2'/%3E%3C/svg%3E")}.icon-\[tabler--users\]{--svg:url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24'%3E%3Cpath fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M5 7a4 4 0 1 0 8 0 4 4 0 1 0-8 0M3 21v-2a4 4 0 0 1 4-4h4a4 4 0 0 1 4 4v2m1-17.87a4 4 0 0 1 0 7.75M21 21v-2a4 4 0 0 0-3-3.85'/%3E%3C/svg%3E")}:root{color-scheme:light;--rounded-box:0.5rem;--rounded-btn:0.375rem;--rounded-tooltip:0.25rem;--animation-btn:0.25s;--animation-input:.2s;--btn-focus-scale:0.95;--border-btn:1px;--tab-border:1px;--tab-radius:0.5rem;--p:57.5934% 0.247012 287.240256;--pc:93.7482% 0.032368 291.504163;--s:55.7871% 0.022138 301.905408;--sc:95.0453% 0.002858 308.427423;--a:62.3083% 0.188015 259.814527;--ac:93.1918% 0.031591 255.585479;--n:40.6559% 0.025056 282.210785;--nc:97.6419% 0.001323 286.375536;--b1:100% 0 0;--b2:94.7244% 0.005338 286.297402;--b3:88.6277% 0.008239 278.622785;--bc:37.567% 0.022158 281.800147;--bs:37.567% 0.022158 281.800147;--in:71.4837% 0.125737 215.220903;--inc:95.6262% 0.044329 203.387778;--su:73.1062% 0.216656 147.043973;--suc:96.444% 0.02867 172.082912;--wa:79.8713% 0.164239 73.09399;--wac:98.4165% 0.02418 94.061776;--er:65.3932% 0.222085 25.863858;--erc:97.5752% 0.015143 61.349242}@media (prefers-color-scheme:dark){:root{color-scheme:dark;--rounded-box:0.5rem;--rounded-btn:0.375rem;--rounded-tooltip:0.25rem;--animation-btn:0.25s;--animation-input:.2s;--btn-focus-scale:0.95;--border-btn:1px;--tab-border:1px;--tab-radius:0.5rem;--p:57.5934% 0.247012 287.240256;--pc:93.7482% 0.032368 291.504163;--s:55.7871% 0.022138 301.905408;--sc:100% 0 0;--a:62.3083% 0.188015 259.814527;--ac:93.1918% 0.031591 255.585479;--n:65.7482% 0.022235 294.952787;--nc:18.5128% 0.016696 301.919165;--b1:26.8442% 0.028285 299.769973;--b2:22.6865% 0.023344 295.952775;--b3:39.9632% 0.030791 300.243852;--bc:78.094% 0.014175 295.24394;--bs:18.5128% 0.016696 301.919165;--in:71.4837% 0.125737 215.220903;--inc:95.6262% 0.044329 203.387778;--su:73.1062% 0.216656 147.043973;--suc:96.444% 0.02867 172.082912;--wa:79.8713% 0.164239 73.09399;--wac:98.4165% 0.02418 94.061776;--er:65.3932% 0.222085 25.863858;--erc:97.5752% 0.015143 61.349242}}[data-theme=light]{color-scheme:light;--rounded-box:0.5rem;--rounded-btn:0.375rem;--rounded-tooltip:0.25rem;--animation-btn:0.25s;--animation-input:.2s;--btn-focus-scale:0.95;--border-btn:1px;--tab-border:1px;--tab-radius:0.5rem;--p:57.5934% 0.247012 287.240256;--pc:93.7482% 0.032368 291.504163;--s:55.7871% 0.022138 301.905408;--sc:95.0453% 0.002858 308.427423;--a:62.3083% 0.188015 259.814527;--ac:93.1918% 0.031591 255.585479;--n:40.6559% 0.025056 282.210785;--nc:97.6419% 0.001323 286.375536;--b1:100% 0 0;--b2:94.7244% 0.005338 286.297402;--b3:88.6277% 0.008239 278.622785;--bc:37.567% 0.022158 281.800147;--bs:37.567% 0.022158 281.800147;--in:71.4837% 0.125737 215.220903;--inc:95.6262% 0.044329 203.387778;--su:73.1062% 0.216656 147.043973;--suc:96.444% 0.02867 172.082912;--wa:79.8713% 0.164239 73.09399;--wac:98.4165% 0.02418 94.061776;--er:65.3932% 0.222085 25.863858;--erc:97.5752% 0.015143 61.349242}[data-theme=dark]{color-scheme:dark;--rounded-box:0.5rem;--rounded-btn:0.375rem;--rounded-tooltip:0.25rem;--animation-btn:0.25s;--animation-input:.2s;--btn-focus-scale:0.95;--border-btn:1px;--tab-border:1px;--tab-radius:0.5rem;--p:57.5934% 0.247012 287.240256;--pc:93.7482% 0.032368 291.504163;--s:55.7871% 0.022138 301.905408;--sc:100% 0 0;--a:62.3083% 0.188015 259.814527;--ac:93.1918% 0.031591 255.585479;--n:65.7482% 0.022235 294.952787;--nc:18.5128% 0.016696 301.919165;--b1:26.8442% 0.028285 299.769973;--b2:22.6865% 0.023344 295.952775;--b3:39.9632% 0.030791 300.243852;--bc:78.094% 0.014175 295.24394;--bs:18.5128% 0.016696 301.919165;--in:71.4837% 0.125737 215.220903;--inc:95.6262% 0.044329 203.387778;--su:73.1062% 0.216656 147.043973;--suc:96.444% 0.02867 172.082912;--wa:79.8713% 0.164239 73.09399;--wac:98.4165% 0.02418 94.061776;--er:65.3932% 0.222085 25.863858;--erc:97.5752% 0.015143 61.349242}[data-theme=gourmet]{color-scheme:light;--sc:91.1574% 0.004428 301.905408;--animation-btn:0.25s;--animation-input:.2s;--btn-focus-scale:0.95;--border-btn:1px;--tab-border:1px;font-family:Rubik,system-ui,sans-serif;--p:70.4871% 0.186721 47.604421;--pc:95.4204% 0.037154 75.164359;--s:55.7871% 0.022138 301.905408;--a:65.592% 0.211773 354.308441;--ac:94.8201% 0.027645 342.258493;--n:32.3845% 0.008993 67.502158;--nc:99.453% 0.001702 67.802975;--b1:99.453% 0.001702 67.802975;--b2:93.0967% 0.029776 59.291554;--b3:91.6072% 0.029032 57.355304;--bc:32.3845% 0.008993 67.502158;--bs:35.8367% 0.057512 54.314944;--in:68.4687% 0.147869 237.322518;--inc:95.1419% 0.025032 236.824184;--su:69.5873% 0.149074 162.479602;--suc:95.0457% 0.050741 163.050803;--wa:57.5934% 0.247012 287.240256;--wac:93.7482% 0.032368 291.504163;--er:65.3932% 0.222085 25.863858;--erc:97.5752% 0.015143 61.349242;--rounded-box:0.75rem;--rounded-btn:1.75rem;--rounded-tooltip:0.5rem;--tab-radius:0.75rem}:root{--motion-default-timing:cubic-bezier(.165,.84,.44,1);--motion-bounce:linear(0,0.004,0.016,0.035,0.063,0.098,0.141 13.6%,0.25,0.391,0.563,0.765,1,0.891 40.9%,0.848,0.813,0.785,0.766,0.754,0.75,0.754,0.766,0.785,0.813,0.848,0.891 68.2%,1 72.7%,0.973,0.953,0.941,0.938,0.941,0.953,0.973,1,0.988,0.984,0.988,1);--motion-spring-smooth:linear(0,0.001 0.44%,0.0045 0.94%,0.0195 2.03%,0.0446 3.19%,0.0811 4.5%,0.1598 6.82%,0.3685 12.34%,0.4693 15.17%,0.5663,0.6498 21.27%,0.7215 24.39%,0.7532 25.98%,0.7829 27.65%,0.8105,0.8349 31.14%,0.8573 32.95%,0.8776 34.84%,0.8964 36.87%,0.9136 39.05%,0.929 41.37%,0.9421 43.77%,0.9537 46.38%,0.9636 49.14%,0.9789 55.31%,0.9888 62.35%,0.9949 71.06%,0.9982 82.52%,0.9997 99.94%);--motion-spring-snappy:linear(0,0.0014,0.0053 1.02%,0.0126,0.0227 2.18%,0.0517 3.41%,0.094 4.79%,0.1865 7.26%,0.4182 12.77%,0.5246 15.46%,0.6249,0.7112,0.7831 23.95%,0.8146 25.4%,0.844,0.8699 28.45%,0.8935,0.9139 31.64%,0.932,0.9473,0.9601 36.65%,0.9714 38.47%,0.9808 40.35%,0.9948 44.49%,1.0031 49.43%,1.0057 53.35%,1.0063 58.14%,1.0014 80.78%,1.0001 99.94%);--motion-spring-bouncy:linear(0,0.0018,0.0069,0.0151 1.74%,0.0277 2.4%,0.062 3.7%,0.1115 5.15%,0.2211 7.77%,0.4778 13.21%,0.5912 15.75%,0.6987 18.44%,0.7862 20.98%,0.861 23.59%,0.8926,0.9205,0.945 27.51%,0.9671 28.89%,0.9868,1.003 31.79%,1.0224 34.11%,1.0358 36.58%,1.0436 39.27%,1.046 42.31%,1.0446 44.71%,1.0406 47.47%,1.0118 61.84%,1.0027 69.53%,0.9981 80.49%,0.9991 99.94%);--motion-spring-bouncier:linear(0,0.0023,0.0088,0.0194 1.59%,0.035 2.17%,0.078 3.33%,0.1415 4.64%,0.2054 5.75%,0.2821 6.95%,0.5912 11.45%,0.7205 13.43%,0.8393 15.45%,0.936 17.39%,0.9778,1.015,1.0477,1.0759,1.0998 22.22%,1.1203,1.1364,1.1484 25.26%,1.1586 26.61%,1.1629 28.06%,1.1613 29.56%,1.1537 31.2%,1.1434 32.6%,1.1288 34.19%,1.0508 41.29%,1.0174 44.87%,1.0025 46.89%,0.9911 48.87%,0.9826 50.9%,0.9769 53.03%,0.9735 56.02%,0.9748 59.45%,0.9964 72.64%,1.0031 79.69%,1.0042 86.83%,1.0008 99.97%);--motion-spring-bounciest:linear(0,0.0032,0.0131,0.0294,0.0524,0.0824,0.1192 1.54%,0.2134 2.11%,0.3102 2.59%,0.4297 3.13%,0.8732 4.95%,1.0373,1.1827 6.36%,1.2972 7.01%,1.3444,1.3859,1.4215,1.4504,1.4735,1.4908,1.5024,1.5084 9.5%,1.5091,1.5061,1.4993,1.4886,1.4745,1.4565 11.11%,1.4082 11.7%,1.3585 12.2%,1.295 12.77%,1.0623 14.64%,0.9773,0.9031 16.08%,0.8449 16.73%,0.8014,0.7701 17.95%,0.7587,0.7501,0.7443,0.7412 19.16%,0.7421 19.68%,0.7508 20.21%,0.7672 20.77%,0.7917 21.37%,0.8169 21.87%,0.8492 22.43%,0.9681 24.32%,1.0114,1.0492 25.75%,1.0789 26.41%,1.1008,1.1167,1.1271,1.1317 28.81%,1.1314,1.1271 29.87%,1.1189 30.43%,1.1063 31.03%,1.0769 32.11%,0.9941 34.72%,0.9748 35.43%,0.9597 36.09%,0.9487,0.9407,0.9355,0.933 38.46%,0.9344 39.38%,0.9421 40.38%,0.9566 41.5%,0.9989 44.12%,1.0161 45.37%,1.029 46.75%,1.0341 48.1%,1.0335 49.04%,1.0295 50.05%,1.0221 51.18%,0.992 55.02%,0.9854 56.38%,0.9827 57.72%,0.985 59.73%,1.004 64.67%,1.0088 67.34%,1.0076 69.42%,0.9981 74.28%,0.9956 76.85%,0.9961 79.06%,1.0023 86.46%,0.999 95.22%,0.9994 100%)}*{--motion-origin-scale-x:100%;--motion-origin-scale-y:100%;--motion-origin-translate-x:0%;--motion-origin-translate-y:0%;--motion-origin-rotate:0deg;--motion-origin-blur:0px;--motion-origin-grayscale:0%;--motion-origin-opacity:100%;--motion-origin-background-color: ;--motion-origin-text-color: ;--motion-end-scale-x:100%;--motion-end-scale-y:100%;--motion-end-translate-x:0%;--motion-end-translate-y:0%;--motion-end-rotate:0deg;--motion-end-blur:0px;--motion-end-grayscale:0%;--motion-end-opacity:100%;--motion-end-background-color: ;--motion-end-text-color: ;--motion-loop-scale-x:100%;--motion-loop-scale-y:100%;--motion-loop-translate-x:0%;--motion-loop-translate-y:0%;--motion-loop-rotate:0deg;--motion-loop-blur:0px;--motion-loop-grayscale:0%;--motion-loop-opacity:100%;--motion-loop-background-color: ;--motion-loop-text-color: ;--motion-duration:700ms;--motion-timing:var(--motion-default-timing);--motion-perceptual-duration-multiplier:1;--motion-delay:0ms;--motion-loop-count:infinite;--motion-scale-duration:var(--motion-duration);--motion-scale-timing:var(--motion-timing);--motion-scale-perceptual-duration-multiplier:var(--motion-perceptual-duration-multiplier);--motion-scale-delay:var(--motion-delay);--motion-scale-loop-count:var(--motion-loop-count);--motion-translate-duration:var(--motion-duration);--motion-translate-timing:var(--motion-timing);--motion-translate-perceptual-duration-multiplier:var(--motion-perceptual-duration-multiplier);--motion-translate-delay:var(--motion-delay);--motion-translate-loop-count:var(--motion-loop-count);--motion-rotate-duration:var(--motion-duration);--motion-rotate-timing:var(--motion-timing);--motion-rotate-perceptual-duration-multiplier:var(--motion-perceptual-duration-multiplier);--motion-rotate-delay:var(--motion-delay);--motion-rotate-loop-count:var(--motion-loop-count);--motion-filter-duration:var(--motion-duration);--motion-filter-timing:var(--motion-timing);--motion-filter-perceptual-duration-multiplier:var(--motion-perceptual-duration-multiplier);--motion-filter-delay:var(--motion-delay);--motion-filter-loop-count:var(--motion-loop-count);--motion-opacity-duration:var(--motion-duration);--motion-opacity-timing:var(--motion-timing);--motion-opacity-perceptual-duration-multiplier:var(--motion-perceptual-duration-multiplier);--motion-opacity-delay:var(--motion-delay);--motion-opacity-loop-count:var(--motion-loop-count);--motion-background-color-duration:var(--motion-duration);--motion-background-color-timing:var(--motion-timing);--motion-background-color-perceptual-duration-multiplier:var(--motion-perceptual-duration-multiplier);--motion-background-color-delay:var(--motion-delay);--motion-background-color-loop-count:var(--motion-loop-count);--motion-text-color-duration:var(--motion-duration);--motion-text-color-timing:var(--motion-timing);--motion-text-color-perceptual-duration-multiplier:var(--motion-perceptual-duration-multiplier);--motion-text-color-delay:var(--motion-delay);--motion-text-color-loop-count:var(--motion-loop-count);--motion-scale-in-animation:none;--motion-translate-in-animation:none;--motion-rotate-in-animation:none;--motion-filter-in-animation:none;--motion-opacity-in-animation:none;--motion-background-color-in-animation:none;--motion-text-color-in-animation:none;--motion-scale-out-animation:none;--motion-translate-out-animation:none;--motion-rotate-out-animation:none;--motion-filter-out-animation:none;--motion-opacity-out-animation:none;--motion-background-color-out-animation:none;--motion-text-color-out-animation:none;--motion-scale-loop-animation:none;--motion-translate-loop-animation:none;--motion-rotate-loop-animation:none;--motion-filter-loop-animation:none;--motion-opacity-loop-animation:none;--motion-background-color-loop-animation:none;--motion-text-color-loop-animation:none;--motion-all-enter-animations:var(--motion-scale-in-animation),var(--motion-translate-in-animation),var(--motion-rotate-in-animation),var(--motion-filter-in-animation),var(--motion-opacity-in-animation),var(--motion-background-color-in-animation),var(--motion-text-color-in-animation);--motion-all-exit-animations:var(--motion-scale-out-animation),var(--motion-translate-out-animation),var(--motion-rotate-out-animation),var(--motion-filter-out-animation),var(--motion-opacity-out-animation),var(--motion-background-color-out-animation),var(--motion-text-color-out-animation);--motion-all-loop-animations:var(--motion-scale-loop-animation),var(--motion-translate-loop-animation),var(--motion-rotate-loop-animation),var(--motion-filter-loop-animation),var(--motion-opacity-loop-animation),var(--motion-background-color-loop-animation),var(--motion-text-color-loop-animation);--motion-all-loop-and-enter-animations:var(--motion-all-loop-animations),var(--motion-all-enter-animations)}@media screen and (prefers-reduced-motion:no-preference){@keyframes motion-scale-in{0%{scale:var(--motion-origin-scale-x) var(--motion-origin-scale-y)}to{scale:1 1}}@keyframes motion-scale-out{0%{scale:1 1}to{scale:var(--motion-end-scale-x) var(--motion-end-scale-y)}}@keyframes motion-scale-loop-mirror{0%,to{scale:1 1}50%{scale:var(--motion-loop-scale-x) var(--motion-loop-scale-y)}}@keyframes motion-scale-loop-reset{0%{scale:1 1}to{scale:var(--motion-loop-scale-x) var(--motion-loop-scale-y)}}@keyframes motion-translate-in{0%{translate:var(--motion-origin-translate-x) var(--motion-origin-translate-y)}to{translate:0 0}}@keyframes motion-translate-out{0%{translate:0 0}to{translate:var(--motion-end-translate-x) var(--motion-end-translate-y)}}@keyframes motion-translate-loop-mirror{0%,to{translate:0 0}50%{translate:var(--motion-loop-translate-x) var(--motion-loop-translate-y)}}@keyframes motion-translate-loop-reset{0%{translate:0 0}to{translate:var(--motion-loop-translate-x) var(--motion-loop-translate-y)}}@keyframes motion-rotate-in{0%{rotate:var(--motion-origin-rotate)}to{rotate:0}}@keyframes motion-rotate-out{0%{rotate:0}to{rotate:var(--motion-end-rotate)}}@keyframes motion-rotate-loop-mirror{0%,to{rotate:0deg}50%{rotate:var(--motion-loop-rotate)}}@keyframes motion-rotate-loop-reset{to{rotate:var(--motion-loop-rotate)}}}@keyframes motion-filter-in{0%{filter:blur(var(--motion-origin-blur)) grayscale(var(--motion-origin-grayscale))}to{filter:blur(0) grayscale(0)}}@keyframes motion-filter-out{0%{filter:blur(0) grayscale(0)}to{filter:blur(var(--motion-end-blur)) grayscale(var(--motion-end-grayscale))}}@keyframes motion-filter-loop-mirror{0%,to{filter:blur(0) grayscale(0)}50%{filter:blur(var(--motion-loop-blur)) grayscale(var(--motion-loop-grayscale))}}@keyframes motion-filter-loop-reset{0%{filter:blur(0) grayscale(0)}to{filter:blur(var(--motion-loop-blur)) grayscale(var(--motion-loop-grayscale))}}@keyframes motion-opacity-in{0%{opacity:var(--motion-origin-opacity)}}@keyframes motion-opacity-out{to{opacity:var(--motion-end-opacity)}}@keyframes motion-opacity-loop-mirror{50%{opacity:var(--motion-loop-opacity)}}@keyframes motion-opacity-loop-reset{to{opacity:var(--motion-loop-opacity)}}@keyframes motion-background-color-in{0%{background-color:var(--motion-origin-background-color)}}@keyframes motion-background-color-out{to{background-color:var(--motion-end-background-color)}}@keyframes motion-background-color-loop-mirror{50%{background-color:var(--motion-loop-background-color)}}@keyframes motion-background-color-loop-reset{to{background-color:var(--motion-loop-background-color)}}@keyframes motion-text-color-in{0%{color:var(--motion-origin-text-color)}}@keyframes motion-text-color-out{to{color:var(--motion-end-text-color)}}@keyframes motion-text-color-loop-mirror{50%{color:var(--motion-loop-text-color)}}@keyframes motion-text-color-loop-reset{to{color:var(--motion-loop-text-color)}}.container{width:100%}@media (min-width:640px){.container{max-width:640px}}@media (min-width:768px){.container{max-width:768px}}@media (min-width:1024px){.container{max-width:1024px}}@media (min-width:1280px){.container{max-width:1280px}}@media (min-width:1536px){.container{max-width:1536px}}.advance-select-option{cursor:pointer;padding:.625rem 1rem;border-radius:var(--rounded-btn,.375rem);font-weight:400;--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)))}.advance-select-option,.alert{width:100%;font-size:1rem;line-height:1.375rem}.alert{position:relative;padding:1rem;border-radius:var(--rounded-box,.5rem);--tw-bg-opacity:1;background-color:var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity,1)));color:var(--fallback-bc,oklch(var(--bc)/.8))}.avatar{position:relative;display:inline-flex;font-size:1rem;line-height:1.375rem}.avatar>div{display:block;aspect-ratio:1/1;overflow:hidden}.avatar img{height:100%;width:100%;-o-object-fit:cover;object-fit:cover}.avatar.placeholder>div{display:flex;align-items:center;justify-content:center}.pull-up .avatar{transition-property:all;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-timing-function:cubic-bezier(.4,0,1,1);transition-duration:.15s;transition-duration:.25s}.pull-up .avatar:hover{z-index:30;--tw-translate-y:-0.25rem;--tw-scale-x:1.02;--tw-scale-y:1.02;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));border-radius:9999px;--tw-shadow:0 2px 4px 0 var(--fallback-bs,oklch(var(--bs)/0.26));--tw-shadow-colored:0 2px 4px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.badge{height:1.5rem;gap:.375rem;padding-left:.75rem;padding-right:.75rem;text-align:center;font-size:.875rem;line-height:1.25rem;font-weight:400;width:-moz-fit-content;width:fit-content;--tw-bg-opacity:1;background-color:var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity,1)))}.badge,.btn{display:inline-flex;align-items:center;justify-content:center;border-radius:var(--rounded-btn,.375rem);--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)))}.btn{height:2.375rem;min-height:2.375rem;flex-shrink:0;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;user-select:none;flex-wrap:wrap;padding-left:1rem;padding-right:1rem;font-size:1rem;line-height:1.375rem;font-weight:500;gap:.5rem;border-color:currentColor;border-color:oklch(var(--btn-color,var(--b2))/var(--tw-border-opacity));text-decoration-line:none;transition-duration:.2s;transition-timing-function:cubic-bezier(0,0,.2,1);border-width:var(--border-btn,1px);transition-property:color,background-color,border-color,opacity,box-shadow,transform;--tw-shadow:0 2px 4px 0 var(--fallback-bs,oklch(var(--bs)/0.26));--tw-shadow-colored:0 2px 4px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);outline-color:var(--fallback-bc,oklch(var(--bc)/1));background-color:oklch(var(--btn-color,var(--b2))/var(--tw-bg-opacity));--tw-bg-opacity:1;--tw-border-opacity:1}.btn-disabled,.btn:disabled,.btn[disabled]{pointer-events:none}.btn-circle{height:2.375rem;width:2.375rem;border-radius:9999px;padding:0}:where(.btn:is(input[type=checkbox])),:where(.btn:is(input[type=radio])){width:auto;-webkit-appearance:none;-moz-appearance:none;appearance:none}.btn:is(input[type=checkbox]):after,.btn:is(input[type=radio]):after{--tw-content:attr(aria-label);content:var(--tw-content)}.card{position:relative;display:flex;flex-direction:column;border-radius:var(--rounded-box,.5rem);border-color:var(--fallback-bc,oklch(var(--bc)/.4));--tw-bg-opacity:1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)));color:var(--fallback-bc,oklch(var(--bc)/.8));box-shadow:var(--card-shadow,0 2px 4px 0 oklch(var(--bs)/.26));border-width:var(--card-border,0)}.card:focus{outline:2px solid transparent;outline-offset:2px}.card-body{display:flex;flex:1 1 auto;flex-direction:column;font-size:1rem;line-height:1.375rem;font-weight:400;padding:var(--padding-card,1.5rem)}.card-actions{display:flex;flex-wrap:wrap;align-items:flex-start;gap:.75rem}.card-title{font-size:1.5rem;line-height:2rem;font-weight:600;--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)))}.card figure{display:flex;align-items:center;justify-content:center}.card.image-full{display:grid}.card.image-full:before{position:relative;content:"";z-index:10;border-radius:var(--rounded-box,.5rem);background-image:linear-gradient(0deg,rgba(0,0,0,.58),rgba(0,0,0,.58))}.card.image-full:before,.card.image-full>*{grid-column-start:1;grid-row-start:1}.card.image-full>figure img{height:100%;-o-object-fit:cover;object-fit:cover}.card.image-full>.card-body{position:relative;z-index:20;--tw-text-opacity:1;color:var(--fallback-nc,oklch(var(--nc)/var(--tw-text-opacity,1)))}:where(.card figure>*){width:100%}.card-group>.card{flex:1 0 0%;border-radius:0;--card-shadow:none;--card-border:0}.carousel{position:relative;width:100%;overflow:hidden;border-radius:1rem}.carousel-body{display:flex;flex-wrap:nowrap}.carousel-next,.carousel-prev{position:absolute;top:0;bottom:0;display:inline-flex;height:100%;width:10%;align-items:center;justify-content:center;color:var(--fallback-bc,oklch(var(--bc)/.8))}@media not all and (min-width:640px){.carousel-next,.carousel-prev{width:18%}}.carousel-prev{inset-inline-start:0;border-start-start-radius:1rem;border-end-start-radius:1rem}.carousel-next{inset-inline-end:0;border-start-end-radius:1rem;border-end-end-radius:1rem}.active .carousel-box,.active .carousel-dot,.active.carousel-box,.active.carousel-dot{--tw-bg-opacity:1;background-color:var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity,1)))}.chat{display:grid;grid-template-columns:repeat(2,minmax(0,1fr));-moz-column-gap:1rem;column-gap:1rem;padding-top:.25rem;padding-bottom:.25rem}.checkbox{flex-shrink:0;--chkbg:var(--fallback-n,oklch(var(--n)/1));--chkfg:var(--fallback-nc,oklch(var(--nc)/1));position:relative;width:1.5rem;height:1.5rem;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;border-radius:var(--rounded-btn,.375rem);border-width:1.5px;border-color:var(--fallback-bc,oklch(var(--bc)/.4));--tw-bg-opacity:1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)))}.collapse:not(td):not(tr):not(colgroup){visibility:visible}.diff{position:relative;display:grid;width:100%;overflow:hidden;container-type:inline-size;grid-template-columns:auto 1fr}.drawer{position:fixed;z-index:80;display:flex;width:100%;height:100%;max-width:24rem;flex-direction:column;justify-content:space-between;--tw-bg-opacity:1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)));--tw-shadow:0 4px 6px -1px var(--fallback-bs,oklch(var(--bs)/0.2));--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.drawer-body{flex-grow:1;overflow-y:auto;padding-left:1.5rem;padding-right:1.5rem;font-size:1rem;line-height:1.375rem;overflow-x:hidden}.drawer-body::-webkit-scrollbar{width:.5rem}.drawer-body:last-child{padding-bottom:1.5rem}.dropdown-menu{z-index:10;margin-top:.5rem;text-wrap:nowrap;padding:.5rem;font-size:1rem;line-height:1.375rem;opacity:0;transition-property:opacity,margin;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.3s;border-radius:var(--rounded-box,.5rem);--tw-bg-opacity:1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)));--tw-shadow:0 10px 15px -2px var(--fallback-bs,oklch(var(--bs)/0.34));--tw-shadow-colored:0 10px 15px -2px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.dropdown-item{clear:both;width:100%;-moz-column-gap:.5rem;column-gap:.5rem;text-align:inherit;border-radius:var(--rounded-btn,.375rem);background-color:transparent;--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)));text-decoration-line:none;text-decoration-thickness:0}.dropdown-footer,.dropdown-header,.dropdown-item{display:flex;align-items:center;padding:.625rem 1rem}.dropdown-footer,.dropdown-header{position:static;border-color:var(--fallback-bc,oklch(var(--bc)/.1));color:var(--fallback-bc,oklch(var(--bc)/.8))}.dropdown-header{margin:-.5rem -.5rem .5rem;border-top-left-radius:var(--rounded-box,.5rem);border-top-right-radius:var(--rounded-box,.5rem);border-bottom-width:1px}.label:where(:not(.label-text)){display:flex;align-items:center;justify-content:space-between}.input{height:2.375rem;width:100%;flex-shrink:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;padding-left:.75rem;padding-right:.75rem;font-size:1rem;line-height:1.375rem;font-weight:400;border-radius:var(--rounded-btn,.375rem);border-width:1px;border-color:var(--fallback-bc,oklch(var(--bc)/.4));--tw-bg-opacity:1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)));color:var(--fallback-bc,oklch(var(--bc)/.8));transition:border-color .15s ease-in-out,box-shadow .15s ease-in-out}.input::file-selector-button{margin-inline-end:1rem;display:inline-flex;height:100%;flex-shrink:0;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;user-select:none;flex-wrap:wrap;align-items:center;justify-content:center;padding-left:1rem;padding-right:1rem;text-align:center;font-size:.875rem;line-height:1.25rem;line-height:1em;border-start-start-radius:var(--rounded-btn,.375rem);border-end-start-radius:var(--rounded-btn,.375rem);border-width:0;background-color:var(--fallback-bc,oklch(var(--bc)/.2));font-weight:600;text-transform:uppercase;--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)));text-decoration-line:none}.input[type=number]::-webkit-inner-spin-button{margin-top:-.25rem;margin-bottom:-.25rem;margin-inline-end:-.25rem}.input[type=file]{padding-left:0;padding-right:0}.join{display:inline-flex;align-items:stretch;border-radius:var(--rounded-btn,.375rem)}.join :where(.join-item){border-start-end-radius:0;border-end-end-radius:0;border-end-start-radius:0;border-start-start-radius:0}.join .join-item:not(:first-child):not(:last-child),.join :not(:first-child):not(:last-child) .join-item{border-start-end-radius:0;border-end-end-radius:0;border-end-start-radius:0;border-start-start-radius:0}.join :first-child:not(:last-child) .join-item,.join>.join-item:first-child:not(:last-child){border-start-end-radius:0;border-end-end-radius:0}.join :where(:first-child:not(:last-child) .join-item),.join>:where(.join-item:first-child:not(:last-child)){border-end-start-radius:inherit;border-start-start-radius:inherit}.join :last-child:not(:first-child) .join-item,.join>.join-item:last-child:not(:first-child){border-end-start-radius:0;border-start-start-radius:0}.join :where(:last-child:not(:first-child) .join-item),.join>:where(.join-item:last-child:not(:first-child)){border-start-end-radius:inherit;border-end-end-radius:inherit}@supports not selector(:has(*)){:where(.join *){border-radius:inherit}}@supports selector(:has(*)){:where(.join :has(.join-item)){border-radius:inherit}}.link{display:inline-block;cursor:pointer;text-decoration-line:underline}.link-hover{text-decoration-line:none}@media (hover:hover){.link-hover:hover{text-decoration-line:underline}.label a:hover{--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)))}.menu li:not(.disabled,:disabled,[disabled])>:not(ul,.menu-title,.collapse,.btn).active,.menu li:not(.disabled,:disabled,[disabled])>:not(ul,.menu-title,.collapse,.btn):active{background-color:var(--fallback-p,oklch(var(--p)/.1));--tw-text-opacity:1;color:var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity,1)))}.radio.is-valid:hover,.validate .radio:valid:hover{--tw-border-opacity:1!important;border-color:var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity,1)))!important}.radio.is-invalid:hover,.validate .radio:invalid:hover{--tw-border-opacity:1!important;border-color:var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity,1)))!important}.radio-inset.is-valid:hover,.validate .radio-inset:valid:hover{--tw-border-opacity:1!important;border-color:var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity,1)))!important}.radio-inset.is-invalid:hover,.validate .radio-inset:invalid:hover{--tw-border-opacity:1!important;border-color:var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity,1)))!important}.tabs-bordered>.tab:hover,.tabs-lifted>.tab:hover{border-color:var(--fallback-p,oklch(var(--p)/.3));--tw-text-opacity:1;color:var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity,1)))}.table tr.hover:hover,.table tr.hover:nth-child(2n):hover,.table-striped tr.hover,.table-striped tr.hover:nth-child(2n){background-color:var(--fallback-bc,oklch(var(--bc)/.05))}}.menu{display:flex;flex-direction:column;flex-wrap:wrap;gap:.125rem;border-radius:var(--rounded-box,.5rem);--tw-bg-opacity:1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)));padding:.5rem}.menu :where(li ul){position:relative;white-space:nowrap}.menu :where(li:not(.menu-title)>:not(ul,.collapse,.menu-title,.btn)){display:grid;grid-auto-flow:column;align-content:flex-start;align-items:center;gap:.5rem;grid-auto-columns:minmax(auto,max-content) auto max-content;-webkit-user-select:none;-moz-user-select:none;user-select:none}.menu :where(li>.menu-dropdown:not(.menu-dropdown-show)){display:none}:where(.menu li){position:relative;display:flex;flex-shrink:0;flex-direction:column;flex-wrap:wrap;align-items:stretch}:where(.menu li) .badge{justify-self:end}.modal{pointer-events:none;position:fixed;inset:0;z-index:80;margin:0;display:grid;width:100%;height:100%;justify-items:center;padding:1rem;opacity:0;transition-property:all;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.navbar{display:flex;align-items:center;padding:var(--navbar-padding,.75rem 1.5rem);width:100%;--tw-bg-opacity:1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)))}.navbar-start{display:flex;width:50%;justify-content:flex-start}.navbar-end{display:flex;width:50%;justify-content:flex-end}.pin-input{width:2.375rem;height:2.375rem;text-align:center;font-size:1rem;line-height:1.375rem;border-radius:var(--rounded-btn,.375rem);border-width:1px;border-color:var(--fallback-bc,oklch(var(--bc)/.25));--tw-bg-opacity:1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)));transition:border-color .15s ease-in-out,box-shadow .15s ease-in-out}.progress{height:.375rem;width:100%;--progress-color:var(--fallback-n,oklch(var(--n)/1));background-color:var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity,1)))}.progress,.progress-bar{display:flex;overflow:hidden;border-radius:9999px;--tw-bg-opacity:1}.progress-bar{align-items:center;justify-content:center;white-space:nowrap;font-size:.75rem;line-height:1rem;font-weight:500;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,-webkit-backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter,-webkit-backdrop-filter;transition-duration:.5s;transition-timing-function:cubic-bezier(.4,0,.2,1);background-color:var(--fallback-bc,oklch(var(--bc)/var(--tw-bg-opacity,1)));--tw-text-opacity:1;color:var(--fallback-b1,oklch(var(--b1)/var(--tw-text-opacity,1)))}.range{height:.5rem;width:100%;-moz-appearance:none;appearance:none;-webkit-appearance:none;--range-shdw:var(--fallback-bc,oklch(var(--bc)/1));position:relative;border-radius:9999px;background-color:transparent;transition-property:all;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.range:focus{outline:none}.select{display:inline-flex;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;user-select:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;height:2.375rem;width:100%;padding-left:.75rem;padding-right:.75rem;font-size:1rem;line-height:2;line-height:1.375rem;border-radius:var(--rounded-btn,.375rem);border-width:1px;border-color:var(--fallback-bc,oklch(var(--bc)/.4));--tw-bg-opacity:1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)));color:var(--fallback-bc,oklch(var(--bc)/.8));background-image:url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='1em' height='1em' viewBox='0 0 24 24'><path fill='none' stroke='%239293AE' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m6 9l6 6l6-6'/></svg>");background-size:1.3em;background-position:calc(100% - 1rem);background-repeat:no-repeat}.select[multiple]{height:auto}.select.select-floating.select-lg .select-floating-label{margin-inline-start:.75rem}.select.select-floating.select-lg .select-filled-label{margin-inline-start:1rem}.switch{flex-shrink:0;--tglbg:var(--fallback-b3,oklch(var(--b3)/1));--handleoffset:1.35rem;--handleoffsetcalculator:calc(var(--handleoffset)*-1);--switchhandleborder:0 0;height:1.5rem;width:2.875rem;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;overflow:hidden;border-radius:9999px;background-color:var(--fallback-b1,oklch(var(--b1)/1));transition:background,box-shadow var(--animation-input,.2s) ease-out;box-shadow:var(--handleoffsetcalculator) 0 0 4px var(--tglbg) inset,0 0 0 4px var(--tglbg) inset,var(--switchhandleborder)}.tabs{display:flex;align-items:flex-end}.tabs-lifted:has(.tab-content[class*=" rounded-"]) .tab:first-child:not(.tab-active),.tabs-lifted:has(.tab-content[class^=rounded-]) .tab:first-child:not(.tab-active){border-bottom-color:transparent}.tab{display:inline-flex;height:2.375rem;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;user-select:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;align-items:center;justify-content:center;text-align:center;font-size:1rem;line-height:1.375rem;--tab-padding:1rem;--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)));--tab-bg:var(--fallback-b1,oklch(var(--b1)/1));--tab-border-color:var(--fallback-bc,oklch(var(--bc)/0.1));padding-inline-start:var(--tab-padding,1rem);padding-inline-end:var(--tab-padding,1rem)}.tab,.table{position:relative}.table{width:100%;border-radius:var(--rounded-box,.5rem);text-align:left;font-size:.875rem;line-height:1.25rem;overflow-y:auto;overflow-x:hidden}.table :where(.table-pin-rows thead tr){position:sticky;top:0;z-index:1;--tw-bg-opacity:1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)))}.table :where(.table-pin-rows tfoot tr){position:sticky;bottom:0;z-index:1;--tw-bg-opacity:1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)))}.table :where(.table-pin-cols tr th){position:sticky;inset-inline-end:0;inset-inline-start:0;--tw-bg-opacity:1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)))}.textarea{display:block;min-height:5rem;width:100%;flex-shrink:1;resize:none;padding:.5rem 1rem;font-size:1rem;line-height:1.375rem;border-radius:var(--rounded-box,.5rem);border-width:1px;border-color:var(--fallback-bc,oklch(var(--bc)/.4));color:var(--fallback-bc,oklch(var(--bc)/.8));overflow-y:auto;overflow-x:hidden}.tooltip{display:inline-block;text-align:center}.tooltip-content{visibility:hidden;position:absolute;display:inline-block;padding:.5rem;opacity:0;width:-moz-max-content;width:max-content;z-index:20;transition-property:opacity;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.accordion-toggle{width:100%;cursor:pointer;padding:1rem 1.25rem;font-size:1.125rem;line-height:1.5rem;font-weight:500;--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)))}.accordion-toggle:disabled{pointer-events:none;opacity:.5}.accordion-shadow :where(.accordion-item){margin-top:.5rem;margin-bottom:.5rem;border-radius:var(--rounded-box,.5rem);--tw-bg-opacity:1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)));--tw-shadow:0 4px 6px -1px var(--fallback-bs,oklch(var(--bs)/0.2));--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.accordion-shadow :where(.accordion-item) .accordion-item:first-of-type{margin-top:0}.accordion-shadow :where(.accordion-item) .accordion-item:last-of-type{margin-bottom:0}.accordion-shadow :where(.accordion-item)>:first-child{border-top-left-radius:var(--rounded-box,.5rem);border-top-right-radius:var(--rounded-box,.5rem)}.accordion-shadow :where(.accordion-item)>:last-child{border-bottom-right-radius:var(--rounded-box,.5rem);border-bottom-left-radius:var(--rounded-box,.5rem)}.accordion:where(.accordion-bordered)>:not([hidden])~:not([hidden]){--tw-divide-y-reverse:0;border-top-width:calc(1px*(1 - var(--tw-divide-y-reverse)));border-bottom-width:calc(1px*var(--tw-divide-y-reverse));border-color:var(--fallback-bc,oklch(var(--bc)/.25))}.accordion:where(.accordion-bordered){border-radius:var(--rounded-box,.5rem);border-width:1px;border-color:var(--fallback-bc,oklch(var(--bc)/.25));--tw-bg-opacity:1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)))}.disabled .advance-select-toggle,.disabled.advance-select-toggle{pointer-events:none;border-width:0;background-color:var(--fallback-n,oklch(var(--n)/.1));padding-top:.5rem;padding-bottom:.5rem;color:var(--fallback-n,oklch(var(--n)/.5))}.advance-select-option:focus,.advance-select-option:hover{background-color:var(--fallback-n,oklch(var(--n)/.1))}.advance-select-option:focus{outline:2px solid transparent;outline-offset:2px}.advance-select-option.active,.advance-select-option:active{background-color:var(--fallback-p,oklch(var(--p)/.1));--tw-text-opacity:1;color:var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity,1)))}.advance-select-tag:has(>.is-valid),.validate select:has(~*>.selected)+.advance-select-toggle,select.is-valid+.advance-select-toggle{--tw-border-opacity:1;border-color:var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity,1)))}.advance-select-tag:has(>.is-valid):focus,.advance-select-tag:has(>.is-valid):focus-within,.validate select:has(~*>.selected)+.advance-select-toggle:focus,.validate select:has(~*>.selected)+.advance-select-toggle:focus-within,select.is-valid+.advance-select-toggle:focus,select.is-valid+.advance-select-toggle:focus-within{--tw-border-opacity:1;border-color:var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity,1)));--tw-shadow:0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));--tw-shadow:var(--tw-shadow-colored);--tw-shadow-colored:0 1px 2px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);--tw-shadow-color:var(--fallback-su,oklch(var(--su)/0.22));--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);--tw-ring-opacity:1;--tw-ring-color:var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity,1)))}.advance-select-tag:has(>.is-invalid),.validate select:not(:has(~*>.selected))+.advance-select-toggle,select.is-invalid+.advance-select-toggle{--tw-border-opacity:1;border-color:var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity,1)))}.advance-select-tag:has(>.is-invalid):focus,.advance-select-tag:has(>.is-invalid):focus-within,.validate select:not(:has(~*>.selected))+.advance-select-toggle:focus,.validate select:not(:has(~*>.selected))+.advance-select-toggle:focus-within,select.is-invalid+.advance-select-toggle:focus,select.is-invalid+.advance-select-toggle:focus-within{--tw-border-opacity:1;border-color:var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity,1)));--tw-shadow:0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));--tw-shadow:var(--tw-shadow-colored);--tw-shadow-colored:0 1px 2px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);--tw-shadow-color:var(--fallback-er,oklch(var(--er)/0.22));--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);--tw-ring-opacity:1;--tw-ring-color:var(--fallback-er,oklch(var(--er)/var(--tw-ring-opacity,1)))}.validate .advance-select:has(>select:valid)~.label,.validate .advance-select:has(>select:valid)~.label .label-text,.validate .advance-select:has(>select:valid)~.label-text,.validate .label-text:has(~.advance-select>select:valid),.validate .label:has(~.advance-select>select:valid)>*{--tw-text-opacity:1;color:var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity,1)))}.validate .advance-select:has(>select:invalid)~.label,.validate .advance-select:has(>select:invalid)~.label .label-text,.validate .advance-select:has(>select:invalid)~.label-text,.validate .label-text:has(~*>select:invalid),.validate .label:has(~*>select:invalid)>*{--tw-text-opacity:1;color:var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity,1)))}.validate .advance-select:has(>select:valid)~*>.success-message,.validate .advance-select:has(>select:valid)~.success-message,.validate .label~:has(>select:valid)~*>.success-message{display:block}.validate .advance-select:has(>select:invalid)~*>.error-message,.validate .advance-select:has(>select:invalid)~.error-message,.validate .label~:has(>select:invalid)~*>.error-message{display:block}.alert-error{--tw-bg-opacity:1;background-color:var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity,1)));--tw-text-opacity:1;color:var(--fallback-erc,oklch(var(--erc)/var(--tw-text-opacity,1)))}.alert-soft.alert-error{background-color:var(--fallback-er,oklch(var(--er)/.2))}.alert-outline.alert-error,.alert-soft.alert-error{--tw-text-opacity:1;color:var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity,1)))}.avatar-group :where(.avatar) img{height:100%;width:100%;border-radius:9999px;border-width:2px;--tw-border-opacity:1;border-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-border-opacity,1)));-o-object-fit:cover;object-fit:cover}.avatar-group :where(.avatar).placeholder>div{border-radius:9999px;border-width:2px;--tw-border-opacity:1;border-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-border-opacity,1)))}.badge-primary{background-color:var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity,1)));color:var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity,1)))}.badge-primary,.badge-secondary{--tw-bg-opacity:1;--tw-text-opacity:1}.badge-secondary{background-color:var(--fallback-s,oklch(var(--s)/var(--tw-bg-opacity,1)));color:var(--fallback-sc,oklch(var(--sc)/var(--tw-text-opacity,1)))}.badge-soft.badge-primary{background-color:var(--fallback-p,oklch(var(--p)/.2));--tw-text-opacity:1;color:var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity,1)))}.badge-soft.badge-secondary{background-color:var(--fallback-s,oklch(var(--s)/.2));--tw-text-opacity:1;color:var(--fallback-s,oklch(var(--s)/var(--tw-text-opacity,1)))}.badge-outline{border-width:1px;border-color:currentColor;background-color:transparent}.badge-outline.badge-neutral{--tw-text-opacity:1;color:var(--fallback-n,oklch(var(--n)/var(--tw-text-opacity,1)))}.badge-outline.badge-primary{--tw-text-opacity:1;color:var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity,1)))}.badge-outline.badge-secondary{--tw-text-opacity:1;color:var(--fallback-s,oklch(var(--s)/var(--tw-text-opacity,1)))}.badge-outline.badge-accent{--tw-text-opacity:1;color:var(--fallback-a,oklch(var(--a)/var(--tw-text-opacity,1)))}.badge-outline.badge-info{--tw-text-opacity:1;color:var(--fallback-in,oklch(var(--in)/var(--tw-text-opacity,1)))}.badge-outline.badge-success{--tw-text-opacity:1;color:var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity,1)))}.badge-outline.badge-warning{--tw-text-opacity:1;color:var(--fallback-wa,oklch(var(--wa)/var(--tw-text-opacity,1)))}.badge-outline.badge-error{--tw-text-opacity:1;color:var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity,1)))}@media (prefers-reduced-motion:no-preference){.btn{animation:button-pop var(--animation-btn,.25s) ease-out}}.btn:active:focus,.btn:active:hover{animation:button-pop 0s ease-out;transform:scale(var(--btn-focus-scale,.97))}@supports not (color:oklch(0% 0 0)){.btn{background-color:var(--btn-color,var(--fallback-b2));border-color:var(--btn-color,var(--fallback-b2))}.btn:focus-visible{background-color:var(--btn-color,var(--fallback-b2));border-color:var(--btn-color,var(--fallback-b2))}.btn-primary{--btn-color:var(--fallback-p)}.btn-error{--btn-color:var(--fallback-er)}}@media (hover:hover){.btn:hover{--tw-shadow:0 4px 6px -1px var(--fallback-bs,oklch(var(--bs)/0.2));--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}@supports (color:color-mix(in oklab,black,black)){.btn:hover{background-color:color-mix(in oklab,oklch(var(--btn-color,var(--b2))/var(--tw-bg-opacity,1)) 90%,#000);border-color:color-mix(in oklab,oklch(var(--btn-color,var(--b2))/var(--tw-border-opacity,1)) 90%,#000)}}@supports not (color:oklch(0% 0 0)){.btn:hover{background-color:var(--btn-color,var(--fallback-b2));border-color:var(--btn-color,var(--fallback-b2))}}.btn.glass:hover{--glass-opacity:25%;--glass-border-opacity:15%}.btn-soft:hover{background-color:var(--fallback-n,oklch(var(--n)/.3))}.btn-soft.btn-primary:hover{background-color:var(--fallback-p,oklch(var(--p)/.3))}.btn-soft.btn-secondary:hover{background-color:var(--fallback-s,oklch(var(--s)/.3))}.btn-soft.btn-accent:hover{background-color:var(--fallback-a,oklch(var(--a)/.3))}.btn-soft.btn-success:hover{background-color:var(--fallback-su,oklch(var(--su)/.3))}.btn-soft.btn-info:hover{background-color:var(--fallback-in,oklch(var(--in)/.3))}.btn-soft.btn-warning:hover{background-color:var(--fallback-wa,oklch(var(--wa)/.3))}.btn-soft.btn-error:hover{background-color:var(--fallback-er,oklch(var(--er)/.3))}.btn-outline:hover{--tw-border-opacity:1;border-color:var(--fallback-bc,oklch(var(--bc)/var(--tw-border-opacity,1)));background-color:var(--fallback-bc,oklch(var(--bc)/.1))}.btn-outline.btn-primary:hover{--tw-border-opacity:1;border-color:var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity,1)));background-color:var(--fallback-p,oklch(var(--p)/.1))}.btn-outline.btn-secondary:hover{--tw-border-opacity:1;border-color:var(--fallback-s,oklch(var(--s)/var(--tw-border-opacity,1)));background-color:var(--fallback-s,oklch(var(--s)/.1))}.btn-outline.btn-accent:hover{--tw-border-opacity:1;border-color:var(--fallback-a,oklch(var(--a)/var(--tw-border-opacity,1)));background-color:var(--fallback-a,oklch(var(--a)/.1))}.btn-outline.btn-success:hover{--tw-border-opacity:1;border-color:var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity,1)));background-color:var(--fallback-su,oklch(var(--su)/.1))}.btn-outline.btn-info:hover{--tw-border-opacity:1;border-color:var(--fallback-in,oklch(var(--in)/var(--tw-border-opacity,1)));background-color:var(--fallback-in,oklch(var(--in)/.1))}.btn-outline.btn-warning:hover{--tw-border-opacity:1;border-color:var(--fallback-wa,oklch(var(--wa)/var(--tw-border-opacity,1)));background-color:var(--fallback-wa,oklch(var(--wa)/.1))}.btn-outline.btn-error:hover{--tw-border-opacity:1;border-color:var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity,1)));background-color:var(--fallback-er,oklch(var(--er)/.1))}.btn-text:hover{border-color:transparent;background-color:var(--fallback-bc,oklch(var(--bc)/.1))}.btn-text.btn-primary:hover{background-color:var(--fallback-p,oklch(var(--p)/.1))}.btn-text.btn-secondary:hover{background-color:var(--fallback-s,oklch(var(--s)/.1))}.btn-text.btn-accent:hover{background-color:var(--fallback-a,oklch(var(--a)/.1))}.btn-text.btn-success:hover{background-color:var(--fallback-su,oklch(var(--su)/.1))}.btn-text.btn-info:hover{background-color:var(--fallback-in,oklch(var(--in)/.1))}.btn-text.btn-warning:hover{background-color:var(--fallback-wa,oklch(var(--wa)/.1))}.btn-text.btn-error:hover{background-color:var(--fallback-er,oklch(var(--er)/.1))}.btn-disabled:hover,.btn.disabled:hover,.btn:disabled:hover,.btn[disabled]:hover{opacity:.5;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}@supports (color:color-mix(in oklab,black,black)){.btn:is(input[type=checkbox]:checked):hover,.btn:is(input[type=radio]:checked):hover{background-color:color-mix(in oklab,var(--fallback-p,oklch(var(--p)/1)) 90%,#000);border-color:color-mix(in oklab,var(--fallback-p,oklch(var(--p)/1)) 90%,#000)}}:where(.menu li:not(.menu-title,.disabled,[disabled],:disabled)>:not(ul,.collapse,.menu-title)):not(.active,.btn,.disabled,:disabled,[disabled]):hover{cursor:pointer;outline:2px solid transparent;outline-offset:2px}@supports (color:oklch(0 0 0)){:where(.menu li:not(.menu-title,.disabled,[disabled],:disabled)>:not(ul,.collapse,.menu-title)):not(.active,.btn,.disabled,:disabled,[disabled]):hover{background-color:var(--fallback-n,oklch(var(--n)/.1))}}.tab[disabled]:hover{pointer-events:none;border-color:var(--fallback-bc,oklch(var(--bc)/.1));color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)));--tw-text-opacity:0.4}}@supports (color:color-mix(in oklab,black,black)){.btn:focus-visible{background-color:color-mix(in oklab,oklch(var(--btn-color,var(--b2))/var(--tw-bg-opacity,1)) 90%,#000);border-color:color-mix(in oklab,oklch(var(--btn-color,var(--b2))/var(--tw-border-opacity,1)) 90%,#000)}}.btn:focus-visible{outline-style:solid;outline-width:2px;outline-offset:0}.btn-primary{--tw-text-opacity:1;color:var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity,1)));outline-color:var(--fallback-p,oklch(var(--p)/.3))}@supports (color:oklch(0% 0 0)){.btn-primary{--btn-color:var(--p)}.btn-error{--btn-color:var(--er)}.btn-gradient.btn-primary{--light-shade:var(--p)}.btn-gradient.btn-error{--light-shade:var(--er)}}.btn-error{--tw-text-opacity:1;color:var(--fallback-erc,oklch(var(--erc)/var(--tw-text-opacity,1)));outline-color:var(--fallback-er,oklch(var(--er)/.3))}.btn.glass{outline-color:currentColor}.btn.glass,.btn.glass:hover{--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.btn.glass.btn-active{--glass-opacity:25%;--glass-border-opacity:15%}.btn-soft{border-style:none;background-color:var(--fallback-n,oklch(var(--n)/.2));--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)))}.btn-soft,.btn-soft:hover{--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.btn-soft.btn-active{background-color:var(--fallback-n,oklch(var(--n)/.3))}.btn-soft:focus-visible{background-color:var(--fallback-n,oklch(var(--n)/.3));outline-color:var(--fallback-n,oklch(var(--n)/.5))}.btn-soft.btn-primary{background-color:var(--fallback-p,oklch(var(--p)/.2));--tw-text-opacity:1;color:var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity,1)));outline-color:var(--fallback-p,oklch(var(--p)/.5))}.btn-soft.btn-primary.btn-active{background-color:var(--fallback-p,oklch(var(--p)/.3))}.btn-soft.btn-primary:focus-visible{background-color:var(--fallback-p,oklch(var(--p)/.3));outline-color:var(--fallback-p,oklch(var(--p)/.5))}.btn-soft.btn-secondary{background-color:var(--fallback-s,oklch(var(--s)/.2));--tw-text-opacity:1;color:var(--fallback-s,oklch(var(--s)/var(--tw-text-opacity,1)));outline-color:var(--fallback-s,oklch(var(--s)/.5))}.btn-soft.btn-secondary.btn-active{background-color:var(--fallback-s,oklch(var(--s)/.3))}.btn-soft.btn-secondary:focus-visible{background-color:var(--fallback-s,oklch(var(--s)/.3));outline-color:var(--fallback-s,oklch(var(--s)/.5))}.btn-soft.btn-accent{background-color:var(--fallback-a,oklch(var(--a)/.2));--tw-text-opacity:1;color:var(--fallback-a,oklch(var(--a)/var(--tw-text-opacity,1)));outline-color:var(--fallback-a,oklch(var(--a)/.5))}.btn-soft.btn-accent.btn-active{background-color:var(--fallback-a,oklch(var(--a)/.3))}.btn-soft.btn-accent:focus-visible{background-color:var(--fallback-a,oklch(var(--a)/.3));outline-color:var(--fallback-a,oklch(var(--a)/.5))}.btn-soft.btn-success{background-color:var(--fallback-su,oklch(var(--su)/.2));--tw-text-opacity:1;color:var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity,1)));outline-color:var(--fallback-su,oklch(var(--su)/.5))}.btn-soft.btn-success.btn-active{background-color:var(--fallback-su,oklch(var(--su)/.3))}.btn-soft.btn-success:focus-visible{background-color:var(--fallback-su,oklch(var(--su)/.3));outline-color:var(--fallback-su,oklch(var(--su)/.5))}.btn-soft.btn-info{background-color:var(--fallback-in,oklch(var(--in)/.2));--tw-text-opacity:1;color:var(--fallback-in,oklch(var(--in)/var(--tw-text-opacity,1)));outline-color:var(--fallback-in,oklch(var(--in)/.5))}.btn-soft.btn-info.btn-active{background-color:var(--fallback-in,oklch(var(--in)/.3))}.btn-soft.btn-info:focus-visible{background-color:var(--fallback-in,oklch(var(--in)/.3));outline-color:var(--fallback-in,oklch(var(--in)/.5))}.btn-soft.btn-warning{background-color:var(--fallback-wa,oklch(var(--wa)/.2));--tw-text-opacity:1;color:var(--fallback-wa,oklch(var(--wa)/var(--tw-text-opacity,1)));outline-color:var(--fallback-wa,oklch(var(--wa)/.5))}.btn-soft.btn-warning.btn-active{background-color:var(--fallback-wa,oklch(var(--wa)/.3))}.btn-soft.btn-warning:focus-visible{background-color:var(--fallback-wa,oklch(var(--wa)/.3));outline-color:var(--fallback-wa,oklch(var(--wa)/.5))}.btn-soft.btn-error{background-color:var(--fallback-er,oklch(var(--er)/.2));--tw-text-opacity:1;color:var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity,1)));outline-color:var(--fallback-er,oklch(var(--er)/.5))}.btn-soft.btn-error.btn-active{background-color:var(--fallback-er,oklch(var(--er)/.3))}.btn-soft.btn-error:focus-visible{background-color:var(--fallback-er,oklch(var(--er)/.3));outline-color:var(--fallback-er,oklch(var(--er)/.5))}.btn-outline{border-style:solid;border-color:currentColor;background-color:transparent;--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)))}.btn-outline,.btn-outline:hover{--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.btn-outline.btn-active{--tw-border-opacity:1;border-color:var(--fallback-bc,oklch(var(--bc)/var(--tw-border-opacity,1)));background-color:var(--fallback-bc,oklch(var(--bc)/.1))}.btn-outline:focus-visible{background-color:var(--fallback-bc,oklch(var(--bc)/.1));outline-width:1px;outline-color:currentColor}.btn-outline.btn-primary{--tw-text-opacity:1;color:var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity,1)))}.btn-outline.btn-primary.btn-active{--tw-border-opacity:1;border-color:var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity,1)));background-color:var(--fallback-p,oklch(var(--p)/.1))}.btn-outline.btn-primary:focus-visible{background-color:var(--fallback-p,oklch(var(--p)/.1))}.btn-outline.btn-secondary{--tw-text-opacity:1;color:var(--fallback-s,oklch(var(--s)/var(--tw-text-opacity,1)))}.btn-outline.btn-secondary.btn-active{--tw-border-opacity:1;border-color:var(--fallback-s,oklch(var(--s)/var(--tw-border-opacity,1)));background-color:var(--fallback-s,oklch(var(--s)/.1))}.btn-outline.btn-secondary:focus-visible{background-color:var(--fallback-s,oklch(var(--s)/.1))}.btn-outline.btn-accent{--tw-text-opacity:1;color:var(--fallback-a,oklch(var(--a)/var(--tw-text-opacity,1)))}.btn-outline.btn-accent.btn-active{--tw-border-opacity:1;border-color:var(--fallback-a,oklch(var(--a)/var(--tw-border-opacity,1)));background-color:var(--fallback-a,oklch(var(--a)/.1))}.btn-outline.btn-accent:focus-visible{background-color:var(--fallback-a,oklch(var(--a)/.1))}.btn-outline.btn-success{--tw-text-opacity:1;color:var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity,1)))}.btn-outline.btn-success.btn-active{--tw-border-opacity:1;border-color:var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity,1)));background-color:var(--fallback-su,oklch(var(--su)/.1))}.btn-outline.btn-success:focus-visible{background-color:var(--fallback-su,oklch(var(--su)/.1))}.btn-outline.btn-info{--tw-text-opacity:1;color:var(--fallback-in,oklch(var(--in)/var(--tw-text-opacity,1)))}.btn-outline.btn-info.btn-active{--tw-border-opacity:1;border-color:var(--fallback-in,oklch(var(--in)/var(--tw-border-opacity,1)));background-color:var(--fallback-in,oklch(var(--in)/.1))}.btn-outline.btn-info:focus-visible{background-color:var(--fallback-in,oklch(var(--in)/.1))}.btn-outline.btn-warning{--tw-text-opacity:1;color:var(--fallback-wa,oklch(var(--wa)/var(--tw-text-opacity,1)))}.btn-outline.btn-warning.btn-active{--tw-border-opacity:1;border-color:var(--fallback-wa,oklch(var(--wa)/var(--tw-border-opacity,1)));background-color:var(--fallback-wa,oklch(var(--wa)/.1))}.btn-outline.btn-warning:focus-visible{background-color:var(--fallback-wa,oklch(var(--wa)/.1))}.btn-outline.btn-error{--tw-text-opacity:1;color:var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity,1)))}.btn-outline.btn-error.btn-active{--tw-border-opacity:1;border-color:var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity,1)));background-color:var(--fallback-er,oklch(var(--er)/.1))}.btn-outline.btn-error:focus-visible{background-color:var(--fallback-er,oklch(var(--er)/.1))}.btn-text{border-color:transparent;background-color:transparent;--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)))}.btn-text,.btn-text:hover{--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.btn-text.btn-active{border-color:transparent;background-color:var(--fallback-bc,oklch(var(--bc)/.1))}.btn-text:focus-visible{border-color:transparent;background-color:var(--fallback-bc,oklch(var(--bc)/.1));outline-color:currentColor}.btn-text.btn-primary{--tw-text-opacity:1;color:var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity,1)))}.btn-text.btn-primary.btn-active{background-color:var(--fallback-p,oklch(var(--p)/.1))}.btn-text.btn-primary:focus-visible{background-color:var(--fallback-p,oklch(var(--p)/.1))}.btn-text.btn-secondary{--tw-text-opacity:1;color:var(--fallback-s,oklch(var(--s)/var(--tw-text-opacity,1)))}.btn-text.btn-secondary.btn-active{background-color:var(--fallback-s,oklch(var(--s)/.1))}.btn-text.btn-secondary:focus-visible{background-color:var(--fallback-s,oklch(var(--s)/.1))}.btn-text.btn-accent{--tw-text-opacity:1;color:var(--fallback-a,oklch(var(--a)/var(--tw-text-opacity,1)))}.btn-text.btn-accent.btn-active{background-color:var(--fallback-a,oklch(var(--a)/.1))}.btn-text.btn-accent:focus-visible{background-color:var(--fallback-a,oklch(var(--a)/.1))}.btn-text.btn-success{--tw-text-opacity:1;color:var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity,1)))}.btn-text.btn-success.btn-active{background-color:var(--fallback-su,oklch(var(--su)/.1))}.btn-text.btn-success:focus-visible{background-color:var(--fallback-su,oklch(var(--su)/.1))}.btn-text.btn-info{--tw-text-opacity:1;color:var(--fallback-in,oklch(var(--in)/var(--tw-text-opacity,1)))}.btn-text.btn-info.btn-active{background-color:var(--fallback-in,oklch(var(--in)/.1))}.btn-text.btn-info:focus-visible{background-color:var(--fallback-in,oklch(var(--in)/.1))}.btn-text.btn-warning{--tw-text-opacity:1;color:var(--fallback-wa,oklch(var(--wa)/var(--tw-text-opacity,1)))}.btn-text.btn-warning.btn-active{background-color:var(--fallback-wa,oklch(var(--wa)/.1))}.btn-text.btn-warning:focus-visible{background-color:var(--fallback-wa,oklch(var(--wa)/.1))}.btn-text.btn-error{--tw-text-opacity:1;color:var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity,1)))}.btn-text.btn-error.btn-active{background-color:var(--fallback-er,oklch(var(--er)/.1))}.btn-text.btn-error:focus-visible{background-color:var(--fallback-er,oklch(var(--er)/.1))}.btn-gradient.btn-primary{--tw-border-opacity:1;border-color:var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity,1)));--tw-text-opacity:1;color:var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity,1)));--tw-shadow-color:var(--fallback-p,oklch(var(--p)/0.26));--tw-shadow:var(--tw-shadow-colored)}.btn-gradient.btn-primary:hover{--tw-shadow-color:var(--fallback-p,oklch(var(--p)/0.2));--tw-shadow:var(--tw-shadow-colored)}.btn-gradient.btn-primary:focus-visible{outline-color:var(--fallback-p,oklch(var(--p)/.3));border-color:transparent}.btn-gradient.btn-error{--tw-border-opacity:1;border-color:var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity,1)));--tw-text-opacity:1;color:var(--fallback-erc,oklch(var(--erc)/var(--tw-text-opacity,1)));--tw-shadow-color:var(--fallback-er,oklch(var(--er)/0.26));--tw-shadow:var(--tw-shadow-colored)}.btn-gradient.btn-error:hover{--tw-shadow-color:var(--fallback-er,oklch(var(--er)/0.2));--tw-shadow:var(--tw-shadow-colored)}.btn-gradient.btn-error:focus-visible{outline-color:var(--fallback-er,oklch(var(--er)/.3));border-color:transparent}.btn.btn-disabled,.btn.disabled,.btn:disabled,.btn[disabled]{pointer-events:none;opacity:.5;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.btn:is(input[type=checkbox]:checked),.btn:is(input[type=radio]:checked){--tw-border-opacity:1;border-color:var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity,1)));--tw-bg-opacity:1;background-color:var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity,1)));--tw-text-opacity:1;color:var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity,1)))}.btn:is(input[type=checkbox]:checked):focus-visible,.btn:is(input[type=radio]:checked):focus-visible{outline-color:var(--fallback-p,oklch(var(--p)/1))}@keyframes button-pop{0%{transform:scale(var(--btn-focus-scale,.98))}40%{transform:scale(1.02)}to{transform:scale(1)}}.card :where(figure:first-child){overflow:hidden;border-start-start-radius:inherit;border-start-end-radius:inherit;border-end-start-radius:unset;border-end-end-radius:unset}.card :where(figure:last-child){overflow:hidden;border-start-start-radius:unset;border-start-end-radius:unset;border-end-start-radius:inherit;border-end-end-radius:inherit}.card.image-full :where(figure){overflow:hidden;border-radius:inherit}.card .alert{border-radius:0}.card .alert:first-child{border-top-left-radius:var(--rounded-box,.5rem);border-top-right-radius:var(--rounded-box,.5rem)}.card .alert:last-child{border-bottom-right-radius:var(--rounded-box,.5rem);border-bottom-left-radius:var(--rounded-box,.5rem)}:where(.card-header)+.card-body{padding-top:0}:where(.card-body)+.card-footer{padding-top:0}.carousel-body,.carousel-slide{transition-property:transform;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.7s}.carousel-next:hover,.carousel-prev:hover{--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)))}.carousel-next.disabled,.carousel-prev.disabled{pointer-events:none;color:var(--fallback-bc,oklch(var(--bc)/.3))}.checkbox:focus{box-shadow:none}.checkbox:focus-visible{outline-style:solid;outline-width:2px;outline-offset:0;outline-color:var(--fallback-n,oklch(var(--n)/.3))}.checkbox:checked,.checkbox[aria-checked=true],.checkbox[checked=true]{background-repeat:no-repeat;--tw-shadow:0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));--tw-shadow-colored:0 1px 2px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);border-color:var(--chkbg);animation:checkmark var(--animation-input,.2s) ease-out;background-color:var(--chkbg);background-image:linear-gradient(-45deg,transparent 66%,var(--chkbg) 66.99%),linear-gradient(45deg,transparent 77%,var(--chkbg) 77.99%),linear-gradient(-45deg,var(--chkbg) 41%,transparent 41.99%),linear-gradient(45deg,var(--chkbg) 34%,var(--chkfg) 34.99%,var(--chkfg) 40%,transparent 40.99%),linear-gradient(-45deg,var(--chkfg) 47%,var(--chkbg) 47.99%)}.checkbox:indeterminate{background-repeat:no-repeat;--tw-shadow:0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));--tw-shadow-colored:0 1px 2px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);background-color:var(--chkbg);border-color:var(--chkbg);animation:checkmark var(--animation-input,.2s) ease-out;background-image:linear-gradient(90deg,transparent 80%,var(--chkbg) 80%),linear-gradient(-90deg,transparent 80%,var(--chkbg) 80%),linear-gradient(0deg,var(--chkbg) 45%,var(--chkfg) 45%,var(--chkfg) 55%,var(--chkbg) 55%)}.checkbox-primary{--chkbg:var(--fallback-p,oklch(var(--p)/1));--chkfg:var(--fallback-pc,oklch(var(--pc)/1))}.checkbox-primary:checked:focus-visible,.checkbox-primary[aria-checked=true]:focus-visible,.checkbox-primary[checked=true]:focus-visible{outline-color:var(--fallback-p,oklch(var(--p)/.3))}.checkbox.disabled,.checkbox:disabled,.checkbox[disabled]{pointer-events:none;--tw-bg-opacity:1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)));opacity:.4}.checkbox.disabled:not(checked),.checkbox:disabled:not(checked),.checkbox[disabled]:not(checked){--tw-bg-opacity:1;background-color:var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity,1)))}@keyframes checkmark{0%{background-position-y:5px}50%{background-position-y:-2px}to{background-position-y:0}}.checkbox.is-valid,.validate .checkbox:valid{--chkbg:var(--fallback-su,oklch(var(--su)/1));--chkfg:var(--fallback-suc,oklch(var(--suc)/1));--tw-border-opacity:1!important;border-color:var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity,1)))!important}.checkbox.is-valid:focus-visible,.validate .checkbox:valid:focus-visible{outline-color:var(--fallback-su,oklch(var(--su)/.3))!important}.checkbox.is-invalid,.validate .checkbox:invalid{--chkbg:var(--fallback-er,oklch(var(--er)/1));--chkfg:var(--fallback-erc,oklch(var(--erc)/1));--tw-border-opacity:1!important;border-color:var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity,1)))!important}.checkbox.is-invalid:focus-visible,.validate .checkbox:invalid:focus-visible{outline-color:var(--fallback-er,oklch(var(--er)/.3))!important}.validate .checkbox:valid~.label,.validate .checkbox:valid~.label .label-text,.validate .checkbox:valid~.label-text,.validate .label-text:has(+* .checkbox:valid),.validate .label-text:has(~.checkbox:valid),.validate .label:has(+* .checkbox:valid)>*,.validate .label:has(~.checkbox:valid)>*,.validate :has(.checkbox:valid)~.label,.validate :has(.checkbox:valid)~.label .label-text,.validate :has(.checkbox:valid)~.label-text{--tw-text-opacity:1;color:var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity,1)))}.validate .checkbox:invalid~.label,.validate .checkbox:invalid~.label .label-text,.validate .checkbox:invalid~.label-text,.validate .label-text:has(+* .checkbox:invalid),.validate .label-text:has(~.checkbox:invalid),.validate .label:has(+* .checkbox:invalid)>*,.validate .label:has(~.checkbox:invalid)>*,.validate :has(.checkbox:invalid)~.label,.validate :has(.checkbox:invalid)~.label .label-text,.validate :has(.checkbox:invalid)~.label-text{--tw-text-opacity:1;color:var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity,1)))}.validate .checkbox:valid+*>.success-message,.validate .checkbox:valid~.success-message,.validate :has(>.checkbox:valid)>*>.success-message,.validate :has(>.checkbox:valid)~.success-message{display:block}.validate .checkbox:invalid+*>.error-message,.validate .checkbox:invalid~.error-message,.validate :has(>.checkbox:invalid)>*>.error-message,.validate :has(>.checkbox:invalid)~.error-message{display:block}.nested-collapse-wrapper .collapse-toggle.open.nested-collapse,.nested-collapse-wrapper .collapse.open.nested-collapse{background-color:var(--fallback-bc,oklch(var(--bc)/.1))}.nested-collapse-wrapper .collapse-toggle.open>.collapse-icon,.nested-collapse-wrapper .collapse.open>.collapse-icon{--tw-rotate:180deg;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.drawer-body::-webkit-scrollbar-thumb{background-color:var(--fallback-s,oklch(var(--s)/.5))}.drawer-body::-webkit-scrollbar-thumb:hover{background-color:var(--fallback-s,oklch(var(--s)/.8))}.drawer-body::-webkit-scrollbar-track{--tw-bg-opacity:1;background-color:var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity,1)))}.dropdown-menu>:not([hidden])~:not([hidden]){--tw-space-y-reverse:0;margin-top:calc(.125rem*(1 - var(--tw-space-y-reverse)));margin-bottom:calc(.125rem*var(--tw-space-y-reverse))}.dropdown-item:focus,.dropdown-item:focus-visible,.dropdown-item:focus-within,.dropdown-item:hover{background-color:var(--fallback-n,oklch(var(--n)/.1));outline:2px solid transparent;outline-offset:2px}.dropdown-item.active,.dropdown-item:active{background-color:var(--fallback-p,oklch(var(--p)/.1));--tw-text-opacity:1;color:var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity,1)))}.dropdown-item.disabled,.dropdown-item:disabled,.dropdown-item[disabled]{pointer-events:none;background-color:var(--fallback-n,oklch(var(--n)/.05));color:var(--fallback-bc,oklch(var(--bc)/.5))}.dropdown-item>.label{padding-top:.25rem;padding-bottom:.25rem;font-size:1rem;line-height:1.375rem;color:var(--fallback-bc,oklch(var(--bc)/.8))}.dropdown-item>.label-text{--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)))}.label{-webkit-user-select:none;-moz-user-select:none;user-select:none;padding:.25rem;color:var(--fallback-bc,oklch(var(--bc)/.8))}.label-text-alt{font-size:.75rem;line-height:1rem}.label-text{display:block;cursor:pointer;font-size:.875rem;line-height:1.25rem;--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)))}input{background-color:transparent}input:focus{outline-width:0;outline-color:transparent}input:focus-visible{outline:unset}.input::-moz-placeholder{color:var(--fallback-bc,oklch(var(--bc)/.5))}.input::placeholder{color:var(--fallback-bc,oklch(var(--bc)/.5))}.input:hover{border-color:var(--fallback-bc,oklch(var(--bc)/.6))}.input[type=file]:disabled{background-color:var(--fallback-n,oklch(var(--n)/.1))}.input:focus,.input:focus-within{--tw-border-opacity:1;border-color:var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity,1)));--tw-shadow:0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));--tw-shadow:var(--tw-shadow-colored);--tw-shadow-colored:0 1px 2px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);--tw-shadow-color:var(--fallback-p,oklch(var(--p)/0.22));--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);--tw-ring-opacity:1;--tw-ring-color:var(--fallback-p,oklch(var(--p)/var(--tw-ring-opacity,1)))}.input:-webkit-autofill,.input:-webkit-autofill:focus{--tw-bg-opacity:1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)));--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)))}.input[list]::-webkit-calendar-picker-indicator{line-height:1em}.input.disabled,.input:disabled,.input[disabled]{pointer-events:none;border-width:0;border-color:var(--fallback-bc,oklch(var(--bc)/.1));background-color:var(--fallback-n,oklch(var(--n)/.1));color:var(--fallback-bc,oklch(var(--bc)/.5))}.input::-webkit-date-and-time-value{text-align:inherit}.input.input-floating.disabled,.input.input-floating:disabled,.input.input-floating[disabled]{border-width:1px;--tw-bg-opacity:1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)))}.input.input-floating.disabled~.input-floating-label,.input.input-floating:disabled~.input-floating-label,.input.input-floating[disabled]~.input-floating-label{color:var(--fallback-bc,oklch(var(--bc)/.5))}.input.input-filled.disabled,.input.input-filled:disabled,.input.input-filled[disabled]{border-bottom-width:1px}.input.input-filled.disabled~.input-filled-label,.input.input-filled:disabled~.input-filled-label,.input.input-filled[disabled]~.input-filled-label{color:var(--fallback-bc,oklch(var(--bc)/.5))}.input.input-filled.input-sm:not(:-moz-placeholder-shown){padding-top:.5rem}.input.input-filled.input-sm:focus,.input.input-filled.input-sm:not(:placeholder-shown){padding-top:.5rem}.input.input-filled.input-lg:not(:-moz-placeholder-shown),.input.input-filled:not(:-moz-placeholder-shown){padding-top:.75rem}.input.input-filled.input-lg:focus,.input.input-filled.input-lg:not(:placeholder-shown),.input.input-filled:focus,.input.input-filled:not(:placeholder-shown){padding-top:.75rem}.input-group:has(input.disabled),.input-group:has(input:disabled),.input-group:has(input[disabled]){pointer-events:none;border-color:var(--fallback-bc,oklch(var(--bc)/.1));background-color:var(--fallback-n,oklch(var(--n)/.1));color:var(--fallback-bc,oklch(var(--bc)/.5))}.input-group .input{border-width:0;background-color:transparent}.input-group .input:focus,.input-group .input:focus-within{--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)}.input-group .input.disabled,.input-group .input:disabled,.input-group .input[disabled],.input-group-filled .input{background-color:transparent}.input-group-filled .input{border-width:0}.input-group-filled .input.disabled,.input-group-filled .input:disabled,.input-group-filled .input[disabled]{background-color:transparent}.input[type=file].input-floating::file-selector-button{border-inline-end-width:1px;border-color:var(--fallback-bc,oklch(var(--bc)/.25));--tw-bg-opacity:1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)))}.input.is-valid,.validate .input:valid{--tw-border-opacity:1;border-color:var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity,1)))}.input.is-valid:focus,.input.is-valid:focus-within,.validate .input:valid:focus,.validate .input:valid:focus-within{--tw-shadow-color:var(--fallback-su,oklch(var(--su)/0.22));--tw-shadow:var(--tw-shadow-colored);--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);--tw-ring-opacity:1;--tw-ring-color:var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity,1)))}.input.is-valid.input-filled:focus,.input.is-valid.input-filled:focus-within,.validate .input:valid.input-filled:focus,.validate .input:valid.input-filled:focus-within{--tw-border-opacity:1;border-color:var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity,1)));--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)}.input.is-valid~.input-filled-label,.input.is-valid~.input-floating-label,.validate .input:valid~.input-filled-label,.validate .input:valid~.input-floating-label{--tw-text-opacity:1;color:var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity,1)))}.input.is-valid:focus-within~.input-filled-focused,.input.is-valid:focus~.input-filled-focused,.validate .input:valid:focus-within~.input-filled-focused,.validate .input:valid:focus~.input-filled-focused{--tw-scale-x:1;--tw-scale-y:1;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));--tw-bg-opacity:1;background-color:var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity,1)))}.is-valid~.label,.is-valid~.label .label-text,.is-valid~.label-text,.label-text:has(+* .is-valid),.label-text:has(~.is-valid),.label:has(+* .is-valid)>*,.label:has(~.is-valid)>*,.validate .input:valid~.label,.validate .input:valid~.label .label-text,.validate .input:valid~.label.label-text,.validate .label-text:has(+* .input:valid),.validate .label-text:has(~.input:valid),.validate .label:has(+* .input:valid)>*,.validate .label:has(~.input:valid)>*,.validate :has(.input:valid)~.label,.validate :has(.input:valid)~.label .label-text,.validate :has(.input:valid)~.label-text,:has(.is-valid)~.label,:has(.is-valid)~.label .label-text,:has(.is-valid)~.label-text{--tw-text-opacity:1;color:var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity,1)))}.input:focus.is-valid~.input-filled-label,.input:focus.is-valid~.input-floating-label{--tw-text-opacity:1;color:var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity,1)))}.input.is-invalid,.validate .input:invalid{--tw-border-opacity:1;border-color:var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity,1)))}.input.is-invalid:focus,.input.is-invalid:focus-within,.validate .input:invalid:focus,.validate .input:invalid:focus-within{--tw-shadow-color:var(--fallback-er,oklch(var(--er)/0.22));--tw-shadow:var(--tw-shadow-colored);--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);--tw-ring-opacity:1;--tw-ring-color:var(--fallback-er,oklch(var(--er)/var(--tw-ring-opacity,1)))}.input.is-invalid.input-filled:focus,.input.is-invalid.input-filled:focus-within,.validate .input:invalid.input-filled:focus,.validate .input:invalid.input-filled:focus-within{--tw-border-opacity:1;border-color:var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity,1)));--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)}.input.is-invalid~.input-filled-label,.input.is-invalid~.input-floating-label,.validate .input:invalid~.input-filled-label,.validate .input:invalid~.input-floating-label{--tw-text-opacity:1;color:var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity,1)))}.input.is-invalid:focus-within~.input-filled-focused,.input.is-invalid:focus~.input-filled-focused,.validate .input:invalid:focus-within~.input-filled-focused,.validate .input:invalid:focus~.input-filled-focused{--tw-scale-x:1;--tw-scale-y:1;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));--tw-bg-opacity:1;background-color:var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity,1)))}.is-invalid~.label,.is-invalid~.label .label-text,.is-invalid~.label-text,.label-text:has(+* .is-invalid),.label-text:has(~.is-invalid),.label:has(+* .is-invalid)>*,.label:has(~.is-invalid)>*,.validate .input:invalid~.label,.validate .input:invalid~.label .label-text,.validate .input:invalid~.label.label-text,.validate .label-text:has(+* .input:invalid),.validate .label-text:has(~.input:invalid),.validate .label:has(+* .input:invalid)>*,.validate .label:has(~.input:invalid)>*,.validate :has(.input:invalid)~.label,.validate :has(.input:invalid)~.label .label-text,.validate :has(.input:invalid)~.label-text,:has(.is-invalid)~.label,:has(.is-invalid)~.label .label-text,:has(.is-invalid)~.label-text{--tw-text-opacity:1;color:var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity,1)))}.input:focus.is-invalid~.input-filled-label,.input:focus.is-invalid~.input-floating-label{--tw-text-opacity:1;color:var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity,1)))}.validate .input:valid+*>.success-message,.validate .input:valid~.success-message,.validate :has(>.input:valid)>*>.success-message,.validate :has(>.input:valid)~.success-message{display:block}.validate .input:invalid+*>.error-message,.validate .input:invalid~.error-message,.validate :has(>.input:invalid)>*>.error-message,.validate :has(>.input:invalid)~.error-message{display:block}.input-group>*>.input.is-invalid,.input-group>*>.input.is-valid,.input-group>*>.input:invalid,.input-group>*>.input:valid,.input-group>.input.is-invalid,.input-group>.input.is-valid,.input-group>.input:invalid,.input-group>.input:valid,.validate .input-group>*>.input:invalid,.validate .input-group>*>.input:valid,.validate .input-group>.input:invalid,.validate .input-group>.input:valid{border-width:0}.input-group>*>.input.is-invalid:focus-within,.input-group>*>.input.is-valid:focus-within,.input-group>*>.input:invalid:focus-within,.input-group>*>.input:valid:focus-within,.input-group>.input.is-invalid:focus-within,.input-group>.input.is-valid:focus-within,.input-group>.input:invalid:focus-within,.input-group>.input:valid:focus-within,.validate .input-group>*>.input:invalid:focus-within,.validate .input-group>*>.input:valid:focus-within,.validate .input-group>.input:invalid:focus-within,.validate .input-group>.input:valid:focus-within{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.input-group>*>.input.is-invalid:focus,.input-group>*>.input.is-valid:focus,.input-group>*>.input:invalid:focus,.input-group>*>.input:valid:focus,.input-group>.input.is-invalid:focus,.input-group>.input.is-valid:focus,.input-group>.input:invalid:focus,.input-group>.input:valid:focus,.validate .input-group>*>.input:invalid:focus,.validate .input-group>*>.input:valid:focus,.validate .input-group>.input:invalid:focus,.validate .input-group>.input:valid:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.input-group:has(.is-valid),.validate .input-group:has(.input:valid){--tw-border-opacity:1;border-color:var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity,1)))}.input-group:has(.is-valid):has(:focus),.input-group:has(.is-valid):has(:focus-within),.validate .input-group:has(.input:valid):has(:focus),.validate .input-group:has(.input:valid):has(:focus-within){--tw-border-opacity:1;border-color:var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity,1)));--tw-shadow:0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));--tw-shadow:var(--tw-shadow-colored);--tw-shadow-colored:0 1px 2px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);--tw-shadow-color:var(--fallback-su,oklch(var(--su)/0.22));--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);--tw-ring-opacity:1;--tw-ring-color:var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity,1)))}.input-group:has(.is-invalid),.validate .input-group:has(.input:invalid){--tw-border-opacity:1;border-color:var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity,1)))}.input-group:has(.is-invalid):has(:focus),.input-group:has(.is-invalid):has(:focus-within),.validate .input-group:has(.input:invalid):has(:focus),.validate .input-group:has(.input:invalid):has(:focus-within){--tw-border-opacity:1;border-color:var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity,1)));--tw-shadow:0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));--tw-shadow:var(--tw-shadow-colored);--tw-shadow-colored:0 1px 2px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);--tw-shadow-color:var(--fallback-er,oklch(var(--er)/0.22));--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);--tw-ring-opacity:1;--tw-ring-color:var(--fallback-er,oklch(var(--er)/var(--tw-ring-opacity,1)))}.input-group-filled:has(.is-valid),.validate .input-group-filled:has(.input:valid){--tw-border-opacity:1;border-color:var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity,1)))}.input-group-filled:has(.is-valid):focus-within~.input-filled-focused,.input-group-filled:has(.is-valid):focus~.input-filled-focused,.validate .input-group-filled:has(.input:valid):focus-within~.input-filled-focused,.validate .input-group-filled:has(.input:valid):focus~.input-filled-focused{--tw-scale-x:1;--tw-scale-y:1;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));--tw-bg-opacity:1;background-color:var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity,1)))}.input-group-filled:has(.is-invalid),.validate .input-group-filled:has(.input:invalid){--tw-border-opacity:1;border-color:var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity,1)))}.input-group-filled:has(.is-invalid):focus-within~.input-filled-focused,.input-group-filled:has(.is-invalid):focus~.input-filled-focused,.validate .input-group-filled:has(.input:invalid):focus-within~.input-filled-focused,.validate .input-group-filled:has(.input:invalid):focus~.input-filled-focused{--tw-scale-x:1;--tw-scale-y:1;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));--tw-bg-opacity:1;background-color:var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity,1)))}.join .btn{--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.join>:where(:not(:first-child)){margin-top:0;margin-bottom:0;margin-inline-start:-1px}.join>:where(:not(:first-child)):is(.btn){margin-inline-start:calc(var(--border-btn)*-1)}.link:focus{outline:2px solid transparent;outline-offset:2px}.link:focus-visible{outline:2px solid currentColor;outline-offset:2px}.link.disabled,.link:disabled,.link[disabled]{pointer-events:none;opacity:.4}.loading{pointer-events:none;display:inline-block;aspect-ratio:1/1;width:1.5rem;background-color:currentColor;-webkit-mask-size:100%;mask-size:100%;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-position:center;mask-position:center}.loading,.loading-spinner{-webkit-mask-image:url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' stroke='%23000'%3E%3Cstyle%3E@keyframes spinner_zKoa{to{transform:rotate(360deg)}}@keyframes spinner_YpZS{0%25{stroke-dasharray:0 150;stroke-dashoffset:0}47.5%25{stroke-dasharray:42 150;stroke-dashoffset:-16}95%25,to{stroke-dasharray:42 150;stroke-dashoffset:-59}}%3C/style%3E%3Cg style='transform-origin:center;animation:spinner_zKoa 2s linear infinite'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3' class='spinner_V8m1' style='stroke-linecap:round;animation:spinner_YpZS 1.5s ease-out infinite'/%3E%3C/g%3E%3C/svg%3E");mask-image:url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' stroke='%23000'%3E%3Cstyle%3E@keyframes spinner_zKoa{to{transform:rotate(360deg)}}@keyframes spinner_YpZS{0%25{stroke-dasharray:0 150;stroke-dashoffset:0}47.5%25{stroke-dasharray:42 150;stroke-dashoffset:-16}95%25,to{stroke-dasharray:42 150;stroke-dashoffset:-59}}%3C/style%3E%3Cg style='transform-origin:center;animation:spinner_zKoa 2s linear infinite'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3' class='spinner_V8m1' style='stroke-linecap:round;animation:spinner_YpZS 1.5s ease-out infinite'/%3E%3C/g%3E%3C/svg%3E")}:where(.menu li:empty){--tw-bg-opacity:1;background-color:var(--fallback-bc,oklch(var(--bc)/var(--tw-bg-opacity,1)));opacity:.1;margin:.5rem 1rem;height:1px}.menu :where(li:not(.dropdown) ul){margin-inline-start:1rem;padding-inline-start:.5rem}.menu :where(li:not(.dropdown) ul):before{position:absolute;bottom:.6rem;inset-inline-start:0;top:.75rem;width:1px;--tw-bg-opacity:1;background-color:var(--fallback-bc,oklch(var(--bc)/var(--tw-bg-opacity,1)));opacity:.1;content:""}.menu :where(li:not(.menu-title,.tooltip)>:not(ul,.collapse,.menu-title,.btn)){border-radius:var(--rounded-btn,.375rem);padding:.625rem 1rem;text-align:start;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,-webkit-backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter,-webkit-backdrop-filter;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-timing-function:cubic-bezier(0,0,.2,1);transition-duration:.2s;text-wrap:balance}.menu li.tooltip>*{border-radius:var(--rounded-btn,.375rem);padding:.625rem 1rem;text-align:start}:where(.menu li:not(.menu-title,.disabled,[disabled],:disabled)){--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)))}:where(.menu li:not(.menu-title,.disabled,[disabled],:disabled)>:not(ul,.collapse,.menu-title)):not(.active,.btn).focus,:where(.menu li:not(.menu-title,.disabled,[disabled],:disabled)>:not(ul,.collapse,.menu-title)):not(.active,.btn):focus,:where(.menu li:not(.menu-title,.disabled,[disabled],:disabled)>:not(ul,.collapse,.menu-title)):not(.active,.btn):focus-visible{cursor:pointer;background-color:var(--fallback-bc,oklch(var(--bc)/.1));--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)));outline:2px solid transparent;outline-offset:2px}.menu li:not(.disabled,:disabled,[disabled])>:not(ul,.menu-title,.collapse,.btn).active,.menu li:not(.disabled,:disabled,[disabled])>:not(ul,.menu-title,.collapse,.btn):active{background-color:var(--fallback-p,oklch(var(--p)/.1));--tw-text-opacity:1;color:var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity,1)))}.menu li.disabled,.menu li:disabled,.menu li[disabled]{pointer-events:none;-webkit-user-select:none;-moz-user-select:none;user-select:none;opacity:.5}.mockup-phone .display{overflow:hidden;border-radius:40px;margin-top:-25px}.mockup-browser .mockup-browser-toolbar .input{position:relative;margin-left:auto;margin-right:auto;display:block;height:1.75rem;width:24rem;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;padding-inline-start:2rem;padding-top:.125rem}.mockup-browser .mockup-browser-toolbar .input:before{inset-inline-start:.5rem;aspect-ratio:1/1;height:.75rem;--tw-translate-y:-50%;border-radius:9999px;border-width:2px;border-color:currentColor}.mockup-browser .mockup-browser-toolbar .input:after,.mockup-browser .mockup-browser-toolbar .input:before{content:"";position:absolute;top:50%;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));opacity:.6}.mockup-browser .mockup-browser-toolbar .input:after{inset-inline-start:1.25rem;height:.5rem;--tw-translate-y:25%;--tw-rotate:-45deg;border-radius:9999px;border-width:1px;border-color:currentColor}.open .modal,.open.modal{transition-duration:.5s}.modal::-webkit-scrollbar-thumb{background-color:var(--fallback-s,oklch(var(--s)/.5))}.modal::-webkit-scrollbar-thumb:hover{background-color:var(--fallback-s,oklch(var(--s)/.8))}.modal::-webkit-scrollbar-track{--tw-bg-opacity:1;background-color:var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity,1)))}.modal::-webkit-scrollbar{width:.5rem}.open .modal-dialog,.open.modal-dialog{transition-duration:.5s}.pin-input::-moz-placeholder{color:var(--fallback-bc,oklch(var(--bc)/.8))}.pin-input::placeholder{color:var(--fallback-bc,oklch(var(--bc)/.8))}.pin-input:hover{border-color:var(--fallback-bc,oklch(var(--bc)/.6))}.pin-input:focus,.pin-input:focus-within{--tw-border-opacity:1;border-color:var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity,1)));--tw-shadow:0 4px 6px -1px var(--fallback-bs,oklch(var(--bs)/0.2));--tw-shadow:var(--tw-shadow-colored);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);--tw-shadow-color:var(--fallback-p,oklch(var(--p)/0.2));--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);--tw-ring-opacity:1;--tw-ring-color:var(--fallback-p,oklch(var(--p)/var(--tw-ring-opacity,1)))}.pin-input.disabled,.pin-input:disabled,.pin-input[disabled]{pointer-events:none;border-color:var(--fallback-bc,oklch(var(--bc)/.25));background-color:var(--fallback-bc,oklch(var(--bc)/.05));color:var(--fallback-bc,oklch(var(--bc)/.5))}.pin-input.disabled::-moz-placeholder,.pin-input:disabled::-moz-placeholder,.pin-input[disabled]::-moz-placeholder{color:var(--fallback-bc,oklch(var(--bc)/.4));--tw-placeholder-opacity:0.2}.pin-input.disabled::placeholder,.pin-input:disabled::placeholder,.pin-input[disabled]::placeholder{color:var(--fallback-bc,oklch(var(--bc)/.4));--tw-placeholder-opacity:0.2}.progress-primary{--tw-bg-opacity:1;background-color:var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity,1)));--tw-text-opacity:1;color:var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity,1)));--progress-color:var(--fallback-p,oklch(var(--p)/1))}@keyframes indeterminate-progress{0%{background-position-x:-75%}50%{background-position-x:125%}to{background-position-x:-75%}}@keyframes progress-bar-stripes{0%{background-position-x:.75rem}}.radio-inset.disabled,.radio-inset:disabled,.radio-inset[disabled],.radio.disabled,.radio:disabled,.radio[disabled]{pointer-events:none;opacity:.4}.radio-inset.disabled:hover,.radio-inset:disabled:hover,.radio-inset[disabled]:hover,.radio.disabled:hover,.radio:disabled:hover,.radio[disabled]:hover{--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)}@keyframes radiomark{0%{box-shadow:0 0 0 9px var(--basebg) inset,0 0 0 9px var(--basebg) inset}50%{box-shadow:0 0 0 6px var(--basebg) inset,0 0 0 6px var(--basebg) inset}to{box-shadow:0 0 0 3px var(--basebg) inset,0 0 0 3px var(--basebg) inset}}@keyframes radioinsetmark{0%{border-width:2px}50%{border-width:4px}to{border-width:6px}}.custom-label-option .label,.custom-option .label{padding:0;font-size:1rem;line-height:1.375rem}.custom-label-option .label:first-of-type,.custom-option .label:first-of-type{padding-bottom:.25rem}.custom-label-option .label .label-text,.custom-option .label .label-text{font-weight:500;--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)))}.custom-label-option:has(.radio.is-invalid),.custom-option:has(.radio.is-invalid),.validate .custom-label-option:has(.radio:invalid),.validate .custom-option:has(.radio:invalid){--tw-border-opacity:1;border-color:var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity,1)))}.custom-label-option:has(.radio.is-valid),.custom-option:has(.radio.is-valid),.validate .custom-label-option:has(.radio:valid),.validate .custom-option:has(.radio:valid){--tw-border-opacity:1;border-color:var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity,1)))}.custom-option:has(.radio.is-valid):has(:checked),.validate .custom-option:has(.radio:valid):has(:checked){--tw-border-opacity:1;border-color:var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity,1)));--tw-ring-opacity:1;--tw-ring-color:var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity,1)))}.custom-label-option:has(.radio.is-valid),.validate .custom-label-option:has(.radio:valid){background-color:var(--fallback-su,oklch(var(--su)/.2))}.custom-label-option:has(.radio.is-valid):has(:checked),.validate .custom-label-option:has(.radio:valid):has(:checked){--tw-border-opacity:1;border-color:var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity,1)));background-color:var(--fallback-su,oklch(var(--su)/.2));--tw-ring-opacity:1;--tw-ring-color:var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity,1)))}.custom-label-option:has(.radio.is-invalid),.validate .custom-label-option:has(.radio:invalid){background-color:var(--fallback-er,oklch(var(--er)/.2))}.radio.is-valid,.validate .radio:valid{--tw-border-opacity:1!important;border-color:var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity,1)))!important}.radio.is-valid:hover,.validate .radio:valid:hover{--tw-ring-color:var(--fallback-su,oklch(var(--su)/0.1))!important}.radio.is-valid:focus-visible,.validate .radio:valid:focus-visible{outline-color:var(--fallback-su,oklch(var(--su)/.3))!important}.radio.is-valid:checked,.radio.is-valid[aria-checked=true],.validate .radio:valid:checked,.validate .radio:valid[aria-checked=true]{--tw-border-opacity:1!important;border-color:var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity,1)))!important;--tw-bg-opacity:1!important;background-color:var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity,1)))!important}.radio.is-invalid,.validate .radio:invalid{--tw-border-opacity:1!important;border-color:var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity,1)))!important}.radio.is-invalid:hover,.validate .radio:invalid:hover{--tw-ring-color:var(--fallback-er,oklch(var(--er)/0.1))!important}.radio.is-invalid:focus-visible,.validate .radio:invalid:focus-visible{outline-color:var(--fallback-er,oklch(var(--er)/.3))!important}.radio.is-invalid:checked,.radio.is-invalid[aria-checked=true],.validate .radio:invalid:checked,.validate .radio:invalid[aria-checked=true]{--tw-border-opacity:1!important;border-color:var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity,1)))!important;--tw-bg-opacity:1!important;background-color:var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity,1)))!important}.validate .label-text:has(+* .radio:valid),.validate .label-text:has(~.radio:valid),.validate .label:has(+* .radio:valid)>*,.validate .label:has(~.radio:valid)>*,.validate .radio:valid~.label,.validate .radio:valid~.label .label-text,.validate .radio:valid~.label-text,.validate :has(.radio:valid)~.label,.validate :has(.radio:valid)~.label .label-text,.validate :has(.radio:valid)~.label-text{--tw-text-opacity:1;color:var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity,1)))}.validate .label-text:has(+* .radio:invalid),.validate .label-text:has(~.radio:invalid),.validate .label:has(+* .radio:invalid)>*,.validate .label:has(~.radio:invalid)>*,.validate .radio:invalid~.label,.validate .radio:invalid~.label .label-text,.validate .radio:invalid~.label-text,.validate :has(.radio:invalid)~.label,.validate :has(.radio:invalid)~.label .label-text,.validate :has(.radio:invalid)~.label-text{--tw-text-opacity:1;color:var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity,1)))}.radio-inset.is-valid,.validate .radio-inset:valid{--tw-border-opacity:1!important;border-color:var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity,1)))!important}.radio-inset.is-valid:hover,.validate .radio-inset:valid:hover{--tw-ring-color:var(--fallback-su,oklch(var(--su)/0.1))!important}.radio-inset.is-valid:focus-visible,.validate .radio-inset:valid:focus-visible{outline-color:var(--fallback-su,oklch(var(--su)/.3))!important}.radio-inset.is-valid:checked,.radio-inset.is-valid[aria-checked=true],.validate .radio-inset:valid:checked,.validate .radio-inset:valid[aria-checked=true]{--tw-border-opacity:1!important;border-color:var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity,1)))!important}.radio-inset.is-invalid,.validate .radio-inset:invalid{--tw-border-opacity:1!important;border-color:var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity,1)))!important}.radio-inset.is-invalid:hover,.validate .radio-inset:invalid:hover{--tw-ring-color:var(--fallback-er,oklch(var(--er)/0.1))!important}.radio-inset.is-invalid:focus-visible,.validate .radio-inset:invalid:focus-visible{outline-color:var(--fallback-er,oklch(var(--er)/.3))!important}.radio-inset.is-invalid:checked,.radio-inset.is-invalid[aria-checked=true],.validate .radio-inset:invalid:checked,.validate .radio-inset:invalid[aria-checked=true]{--tw-border-opacity:1!important;border-color:var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity,1)))!important}.validate .label:has(+* .radio-inset:valid).label-text,.validate .label:has(+* .radio-inset:valid)>*,.validate .label:has(~.radio-inset:valid).label-text,.validate .label:has(~.radio-inset:valid)>*,.validate .radio-inset:valid~.label,.validate .radio-inset:valid~.label .label-text,.validate .radio-inset:valid~.label.label-text,.validate :has(.radio-inset:valid)~.label,.validate :has(.radio-inset:valid)~.label .label-text,.validate :has(.radio-inset:valid)~.label.label-text{--tw-text-opacity:1;color:var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity,1)))}.validate .label-text:has(+* .radio-inset:invalid),.validate .label-text:has(~.radio-inset:invalid),.validate .label:has(+* .radio-inset:invalid)>*,.validate .label:has(~.radio-inset:invalid)>*,.validate .radio-inset:invalid~.label,.validate .radio-inset:invalid~.label .label-text,.validate .radio-inset:invalid~.label-text,.validate :has(.radio-inset:invalid)~.label,.validate :has(.radio-inset:invalid)~.label .label-text,.validate :has(.radio-inset:invalid)~.label-text{--tw-text-opacity:1;color:var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity,1)))}.range::-webkit-slider-runnable-track{height:.5rem;width:100%;border-radius:9999px;background-color:var(--fallback-n,oklch(var(--n)/.1))}.range::-moz-range-track{height:.5rem;width:100%;border-radius:9999px;background-color:var(--fallback-n,oklch(var(--n)/.1))}.range::-webkit-slider-thumb{position:relative;top:50%;width:1rem;height:1rem;--tw-translate-y:-50%;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));border-radius:9999px;--tw-bg-opacity:1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)));--tw-shadow:0 2px 4px 0 var(--fallback-bs,oklch(var(--bs)/0.26));--tw-shadow-colored:0 2px 4px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);-webkit-transition-property:all;transition-property:all;transition-duration:.15s;transition-timing-function:cubic-bezier(.4,0,.2,1);appearance:none;box-sizing:border-box;-webkit-appearance:none;color:var(--range-shdw);border-color:var(--range-shdw);border-style:solid;border-width:3px}.range::-webkit-slider-thumb:hover{cursor:grab;box-shadow:0 0 0 2px var(--range-shdw)}.range::-webkit-slider-thumb:active,.range::-webkit-slider-thumb:hover{--tw-scale-x:1.25;--tw-scale-y:1.25;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.range::-webkit-slider-thumb:active{cursor:grabbing;box-shadow:0 0 0 3px var(--range-shdw)}.range::-moz-range-thumb{position:relative;width:1rem;height:1rem;border-radius:9999px;--tw-bg-opacity:1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)));--tw-shadow:0 2px 4px 0 var(--fallback-bs,oklch(var(--bs)/0.26));--tw-shadow-colored:0 2px 4px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);-moz-transition-property:all;transition-property:all;transition-duration:.15s;transition-timing-function:cubic-bezier(.4,0,.2,1);top:50%;color:var(--range-shdw);box-sizing:border-box;border-color:var(--range-shdw);border-style:solid;border-width:3px}.range::-moz-range-thumb:hover{cursor:grab;box-shadow:0 0 0 2px var(--range-shdw)}.range::-moz-range-thumb:active{cursor:grabbing;box-shadow:0 0 0 3px var(--range-shdw)}.range.disabled,.range:disabled,.range[disabled]{pointer-events:none;opacity:.3}[dir=rtl] .range::-webkit-slider-thumb{transform:translateY(-50%) scaleX(-1)}[dir=rtl] .range::-moz-range-thumb{transform:translateY(-50%) scaleX(-1)}[dir=rtl] .range::-moz-range-track,[dir=rtl] .range::-webkit-slider-runnable-track{direction:rtl}.select:hover{border-color:var(--fallback-bc,oklch(var(--bc)/.6))}.select:focus,.select:focus-within{--tw-border-opacity:1;border-color:var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity,1)));--tw-shadow:0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));--tw-shadow:var(--tw-shadow-colored);--tw-shadow-colored:0 1px 2px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);--tw-shadow-color:var(--fallback-p,oklch(var(--p)/0.22));--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);--tw-ring-opacity:1;--tw-ring-color:var(--fallback-p,oklch(var(--p)/var(--tw-ring-opacity,1)))}.select:focus-within~.select-filled-label,.select:focus-within~.select-floating-label,.select:focus~.select-filled-label,.select:focus~.select-floating-label{--tw-text-opacity:1;color:var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity,1)))}.select:focus-within.is-valid~.select-filled-label,.select:focus-within.is-valid~.select-floating-label,.select:focus.is-valid~.select-filled-label,.select:focus.is-valid~.select-floating-label{--tw-text-opacity:1;color:var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity,1)))}.select:focus-within.is-invalid~.select-filled-label,.select:focus-within.is-invalid~.select-floating-label,.select:focus.is-invalid~.select-filled-label,.select:focus.is-invalid~.select-floating-label{--tw-text-opacity:1;color:var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity,1)))}.select:focus-visible{outline:unset}.select.disabled,.select:disabled,.select[disabled]{pointer-events:none;border-width:0;border-color:var(--fallback-bc,oklch(var(--bc)/.1));background-color:var(--fallback-n,oklch(var(--n)/.1));color:var(--fallback-bc,oklch(var(--bc)/.5))}.select.disabled::-moz-placeholder,.select:disabled::-moz-placeholder,.select[disabled]::-moz-placeholder{color:var(--fallback-bc,oklch(var(--bc)/.5))}.select.disabled::placeholder,.select:disabled::placeholder,.select[disabled]::placeholder{color:var(--fallback-bc,oklch(var(--bc)/.5))}.select-multiple,.select[multiple],.select[size].select:not([size="1"]){overflow-y:auto;overflow-x:hidden;background-image:none}.select-multiple::-webkit-scrollbar-thumb,.select[multiple]::-webkit-scrollbar-thumb,.select[size].select:not([size="1"])::-webkit-scrollbar-thumb{border-radius:9999px;background-color:var(--fallback-s,oklch(var(--s)/.5))}.select-multiple::-webkit-scrollbar-thumb:hover,.select[multiple]::-webkit-scrollbar-thumb:hover,.select[size].select:not([size="1"])::-webkit-scrollbar-thumb:hover{background-color:var(--fallback-s,oklch(var(--s)/.8))}.select-multiple::-webkit-scrollbar-track,.select[multiple]::-webkit-scrollbar-track,.select[size].select:not([size="1"])::-webkit-scrollbar-track{border-radius:9999px;--tw-bg-opacity:1;background-color:var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity,1)))}.select-multiple::-webkit-scrollbar,.select[multiple]::-webkit-scrollbar,.select[size].select:not([size="1"])::-webkit-scrollbar{width:.5rem}.select.select-floating.disabled,.select.select-floating:disabled,.select.select-floating[disabled]{border-width:1px;--tw-bg-opacity:1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)))}.select.select-floating.disabled~.select-floating-label,.select.select-floating:disabled~.select-floating-label,.select.select-floating[disabled]~.select-floating-label{color:var(--fallback-bc,oklch(var(--bc)/.5))}.select.select-filled.disabled,.select.select-filled:disabled,.select.select-filled[disabled]{border-bottom-width:1px}.select.select-filled.disabled~.select-filled-label,.select.select-filled:disabled~.select-filled-label,.select.select-filled[disabled]~.select-filled-label{color:var(--fallback-bc,oklch(var(--bc)/.5))}[dir=rtl] .select{background-position:1.3em}.select.select-filled.select-lg~.select-filled-label,.select.select-floating.select-lg~.select-floating-label{font-size:.875rem;line-height:1.25rem}.input-group .select{border-width:0}.input-group .select:focus,.input-group .select:focus-within{--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)}.select.is-valid,.validate .select:valid{--tw-border-opacity:1;border-color:var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity,1)))}.select.is-valid:focus,.select.is-valid:focus-within,.validate .select:valid:focus,.validate .select:valid:focus-within{--tw-shadow-color:var(--fallback-su,oklch(var(--su)/0.22));--tw-shadow:var(--tw-shadow-colored);--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);--tw-ring-opacity:1;--tw-ring-color:var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity,1)))}.select.is-valid.select-filled:focus,.select.is-valid.select-filled:focus-within,.validate .select:valid.select-filled:focus,.validate .select:valid.select-filled:focus-within{--tw-border-opacity:1;border-color:var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity,1)));--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)}.select.is-valid~.select-filled-label,.select.is-valid~.select-floating-label,.validate .select:valid~.select-filled-label,.validate .select:valid~.select-floating-label{--tw-text-opacity:1;color:var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity,1)))}.select.is-valid:focus-within~.select-filled-focused,.select.is-valid:focus~.select-filled-focused,.validate .select:valid:focus-within~.select-filled-focused,.validate .select:valid:focus~.select-filled-focused{--tw-scale-x:1;--tw-scale-y:1;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));--tw-bg-opacity:1;background-color:var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity,1)))}.select:focus.is-valid~.select-filled-label,.select:focus.is-valid~.select-floating-label,.validate .select:focus:valid~.select-filled-label,.validate .select:focus:valid~.select-floating-label{--tw-text-opacity:1;color:var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity,1)))}.select:focus.is-invalid~.select-filled-label,.select:focus.is-invalid~.select-floating-label,.validate .select:focus:invalid~.select-filled-label,.validate .select:focus:invalid~.select-floating-label{--tw-text-opacity:1;color:var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity,1)))}.select.is-invalid,.validate .select:invalid{--tw-border-opacity:1;border-color:var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity,1)))}.select.is-invalid:focus,.select.is-invalid:focus-within,.validate .select:invalid:focus,.validate .select:invalid:focus-within{--tw-shadow-color:var(--fallback-er,oklch(var(--er)/0.22));--tw-shadow:var(--tw-shadow-colored);--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);--tw-ring-opacity:1;--tw-ring-color:var(--fallback-er,oklch(var(--er)/var(--tw-ring-opacity,1)))}.select.is-invalid.select-filled:focus,.select.is-invalid.select-filled:focus-within,.validate .select:invalid.select-filled:focus,.validate .select:invalid.select-filled:focus-within{--tw-border-opacity:1;border-color:var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity,1)));--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)}.select.is-invalid~.select-filled-label,.select.is-invalid~.select-floating-label,.validate .select:invalid~.select-filled-label,.validate .select:invalid~.select-floating-label{--tw-text-opacity:1;color:var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity,1)))}.select.is-invalid:focus-within~.select-filled-focused,.select.is-invalid:focus~.select-filled-focused,.validate .select:invalid:focus-within~.select-filled-focused,.validate .select:invalid:focus~.select-filled-focused{--tw-scale-x:1;--tw-scale-y:1;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));--tw-bg-opacity:1;background-color:var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity,1)))}.validate .label-text:has(+* .select:valid),.validate .label-text:has(~.select:valid).label-text,.validate .label:has(+* .select:valid)>*,.validate .label:has(~.select:valid)>*,.validate .select:valid~.label,.validate .select:valid~.label .label-text,.validate .select:valid~.label-text,.validate :has(.select:valid)~.label,.validate :has(.select:valid)~.label .label-text,.validate :has(.select:valid)~.label-text{--tw-text-opacity:1;color:var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity,1)))}.validate .label-text:has(+* .select:invalid),.validate .label-text:has(~.select:invalid),.validate .label:has(+* .select:invalid)>*,.validate .label:has(~.select:invalid)>*,.validate .select:invalid~.label,.validate .select:invalid~.label .label-text,.validate .select:invalid~.label-text,.validate :has(.select:invalid)~.label,.validate :has(.select:invalid)~.label .label-text,.validate :has(.select:invalid)~.label-text{--tw-text-opacity:1;color:var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity,1)))}.validate .select:valid+*>.success-message,.validate .select:valid~.success-message,.validate :has(>.select:valid)>*>.success-message,.validate :has(>.select:valid)~.success-message{display:block}.validate .select:invalid+*>.error-message,.validate .select:invalid~.error-message,.validate :has(>.select:invalid)>*>.error-message,.validate :has(>.select:invalid)~.error-message{display:block}@keyframes skeleton{0%{background-position:150%}to{background-position:-50%}}[dir=rtl] .switch{--handleoffsetcalculator:calc(var(--handleoffset)*1)}.switch:focus-visible{outline-style:solid;outline-width:2px;outline-offset:0;outline-color:var(--fallback-n,oklch(var(--n)/.3))}.switch:checked,.switch[aria-checked=true],.switch[checked=true]{background-image:none;--handleoffsetcalculator:var(--handleoffset);--tw-text-opacity:1;color:var(--fallback-n,oklch(var(--n)/var(--tw-text-opacity,1)))}[dir=rtl] .switch:checked,[dir=rtl] .switch[aria-checked=true],[dir=rtl] .switch[checked=true]{--handleoffsetcalculator:calc(var(--handleoffset)*-1)}.switch:indeterminate{--tw-text-opacity:1;color:var(--fallback-n,oklch(var(--n)/var(--tw-text-opacity,1)));box-shadow:calc(var(--handleoffset)/2) 0 0 3px var(--tglbg) inset,calc(var(--handleoffset)/-2) 0 0 3px var(--tglbg) inset,0 0 0 3px var(--tglbg) inset}[dir=rtl] .switch:indeterminate{box-shadow:calc(var(--handleoffset)/2) 0 0 3px var(--tglbg) inset,calc(var(--handleoffset)/-2) 0 0 3px var(--tglbg) inset,0 0 0 3px var(--tglbg) inset}.switch-primary:checked,.switch-primary[aria-checked=true],.switch-primary[checked=true]{--tglbg:var(--fallback-p,oklch(var(--p)/1))}.switch-primary:checked:focus-visible,.switch-primary[aria-checked=true]:focus-visible,.switch-primary[checked=true]:focus-visible{outline-color:var(--fallback-p,oklch(var(--p)/.3))}.switch.disabled,.switch:disabled,.switch[disabled]{pointer-events:none;background-color:transparent;opacity:.4}.switch-outline.switch-primary:checked,.switch-outline.switch-primary[aria-checked=true],.switch-outline.switch-primary[checked=true]{--tglbg:var(--fallback-b1,oklch(var(--b1)/1));--tw-border-opacity:1;border-color:var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity,1)));--tw-bg-opacity:1;background-color:var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity,1)))}.switch-outline.switch-primary:checked:focus-visible,.switch-outline.switch-primary[aria-checked=true]:focus-visible,.switch-outline.switch-primary[checked=true]:focus-visible{outline-color:var(--fallback-p,oklch(var(--p)/.3))}.switch-outline.disabled,.switch-outline:disabled,.switch-outline[disabled]{pointer-events:none;border-color:currentColor;background-color:transparent;opacity:.3;--switchhandleborder:0 0 0 3px var(--fallback-bc,oklch(var(--bc)/1)) inset,var(--handleoffsetcalculator) 0 0 3px var(--fallback-bc,oklch(var(--bc)/1)) inset}.switch.is-valid,.validate .switch:valid{--tglbg:var(--fallback-su,oklch(var(--su)/1))}.switch.is-valid:focus-visible,.validate .switch:valid:focus-visible{outline-color:var(--fallback-su,oklch(var(--su)/.3))!important}.switch.is-valid:checked,.switch.is-valid[aria-checked=true],.switch.is-valid[checked=true],.validate .switch:valid:checked,.validate .switch:valid[aria-checked=true],.validate .switch:valid[checked=true]{--tglbg:var(--fallback-su,oklch(var(--su)/1))}.switch.is-invalid,.validate .switch:invalid{--tglbg:var(--fallback-er,oklch(var(--er)/1))}.switch.is-invalid:focus-visible,.validate .switch:invalid:focus-visible{outline-color:var(--fallback-er,oklch(var(--er)/.3))!important}.switch.is-invalid:checked,.switch.is-invalid[aria-checked=true],.switch.is-invalid[checked=true],.validate .switch:invalid:checked,.validate .switch:invalid[aria-checked=true],.validate .switch:invalid[checked=true]{--tglbg:var(--fallback-er,oklch(var(--er)/1))}.validate .label-text:has(+* .switch:valid),.validate .label-text:has(~.switch:valid),.validate .label:has(+* .switch:valid)>*,.validate .label:has(~.switch:valid)>*,.validate .switch:valid~.label,.validate .switch:valid~.label .label-text,.validate .switch:valid~.label-text,.validate :has(.switch:valid)~.label,.validate :has(.switch:valid)~.label .label-text,.validate :has(.switch:valid)~.label-text{--tw-text-opacity:1;color:var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity,1)))}.validate .label-text:has(+* .switch:invalid),.validate .label-text:has(~.switch:invalid),.validate .label:has(+* .switch:invalid)>*,.validate .label:has(~.switch:invalid)>*,.validate .switch:invalid~.label,.validate .switch:invalid~.label .label-text,.validate .switch:invalid~.label-text,.validate :has(.switch:invalid)~.label,.validate :has(.switch:invalid)~.label .label-text,.validate :has(.switch:invalid)~.label-text{--tw-text-opacity:1;color:var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity,1)))}.validate .switch:valid+*>.success-message,.validate .switch:valid~.success-message,.validate :has(>.switch:valid)>*>.success-message,.validate :has(>.switch:valid)~.success-message{display:block}.validate .switch:invalid+*>.error-message,.validate .switch:invalid~.error-message,.validate :has(>.switch:invalid)>*>.error-message,.validate :has(>.switch:invalid)~.error-message{display:block}.switch-outline.is-valid,.validate .switch-outline:valid{--tglbg:var(--fallback-b1,oklch(var(--b1)/1));--tw-border-opacity:1;border-color:var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity,1)));--tw-bg-opacity:1;background-color:var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity,1)))}.switch-outline.is-valid:checked,.switch-outline.is-valid[aria-checked=true],.switch-outline.is-valid[checked=true],.validate .switch-outline:valid:checked,.validate .switch-outline:valid[aria-checked=true],.validate .switch-outline:valid[checked=true]{--tglbg:var(--fallback-b1,oklch(var(--b1)/1));--tw-border-opacity:1;border-color:var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity,1)));--tw-bg-opacity:1;background-color:var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity,1)))}.switch-outline.is-invalid,.validate .switch-outline:invalid{--tglbg:var(--fallback-b1,oklch(var(--b1)/1));--tw-border-opacity:1;border-color:var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity,1)));--tw-bg-opacity:1;background-color:var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity,1)))}.switch-outline.is-invalid:checked,.switch-outline.is-invalid[aria-checked=true],.switch-outline.is-invalid[checked=true],.validate .switch-outline:invalid:checked,.validate .switch-outline:invalid[aria-checked=true],.validate .switch-outline:invalid[checked=true]{--tglbg:var(--fallback-b1,oklch(var(--b1)/1));--tw-border-opacity:1;border-color:var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity,1)));--tw-bg-opacity:1;background-color:var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity,1)))}.validate .label-text:has(+* .switch-outline:valid),.validate .label-text:has(~.switch-outline:valid),.validate .label:has(+* .switch-outline:valid)>*,.validate .label:has(~.switch-outline:valid)>*,.validate .switch-outline:valid~.label,.validate .switch-outline:valid~.label .label-text,.validate .switch-outline:valid~.label-text,.validate :has(.switch-outline:valid)~.label,.validate :has(.switch-outline:valid)~.label .label-text,.validate :has(.switch-outline:valid)~.label-text{--tw-text-opacity:1;color:var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity,1)))}.validate .label-text:has(+* .switch-outline:invalid),.validate .label-text:has(~.switch-outline:invalid),.validate .label:has(+* .switch-outline:invalid)>*,.validate .label:has(~.switch-outline:invalid)>*,.validate .switch-outline:invalid~.label,.validate .switch-outline:invalid~.label .label-text,.validate .switch-outline:invalid~.label-text,.validate :has(.switch-outline:invalid)~.label,.validate :has(.switch-outline:invalid)~.label .label-text,.validate :has(.switch-outline:invalid)~.label-text{--tw-text-opacity:1;color:var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity,1)))}.tabs-lifted>.tab:focus-visible{border-end-end-radius:0;border-end-start-radius:0}.tab.tab-active:not([disabled]){--tw-border-opacity:1;border-color:var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity,1)));color:var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity,1)));--tw-text-opacity:1}.tab:focus,.tab:focus-visible{outline:2px solid transparent;outline-offset:2px}.tab[disabled]{pointer-events:none;border-color:var(--fallback-bc,oklch(var(--bc)/var(--tw-border-opacity,1)));--tw-border-opacity:0.3;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)));--tw-text-opacity:0.4}.tabs-bordered>.tab{border-color:var(--fallback-bc,oklch(var(--bc)/.1));border-style:solid;border-bottom-width:calc(var(--tab-border, 1px) + 1px)}.tabs-lifted>.tab{border:var(--tab-border,1px) solid transparent;border-width:0 0 var(--tab-border,1px) 0;border-radius:var(--tab-radius,.375rem);border-bottom-color:var(--tab-border-color);padding-inline-start:var(--tab-padding,1rem);padding-inline-end:var(--tab-padding,1rem);padding-top:var(--tab-border,1px)}.tabs-lifted>.tab.tab-active:not([disabled]){background-color:var(--tab-bg);border-width:var(--tab-border,1px) var(--tab-border,1px) 0 var(--tab-border,1px);border-color:var(--tab-border-color);border-end-start-radius:0;border-end-end-radius:0;padding-inline-start:calc(var(--tab-padding, 1rem) - var(--tab-border, 1px));padding-inline-end:calc(var(--tab-padding, 1rem) - var(--tab-border, 1px));padding-bottom:var(--tab-border,1px);padding-top:0}.tabs-lifted>.tab.tab-active:not([disabled]):before{z-index:1;content:"";display:block;position:absolute;width:calc(100% + var(--tab-radius, .375rem)*2);height:var(--tab-radius,.375rem);bottom:0;background-size:var(--tab-radius,.375rem);background-position:0 0,100% 0;background-repeat:no-repeat;--tab-grad:calc(69% - var(--tab-border, 1px));--radius-start:radial-gradient(circle at top left,transparent var(--tab-grad),var(--tab-border-color) calc(var(--tab-grad) + 0.25px),var(--tab-border-color) calc(var(--tab-grad) + var(--tab-border, 1px)),var(--tab-bg) calc(var(--tab-grad) + var(--tab-border, 1px) + 0.25px));--radius-end:radial-gradient(circle at top right,transparent var(--tab-grad),var(--tab-border-color) calc(var(--tab-grad) + 0.25px),var(--tab-border-color) calc(var(--tab-grad) + var(--tab-border, 1px)),var(--tab-bg) calc(var(--tab-grad) + var(--tab-border, 1px) + 0.25px));background-image:var(--radius-start),var(--radius-end)}.tabs-lifted>.tab.tab-active:not([disabled]):first-child:before{background-image:var(--radius-end);background-position:100% 0}.tabs-lifted>.tab.tab-active:not([disabled]):last-child:before,[dir=rtl] .tabs-lifted>.tab.tab-active:not([disabled]):first-child:before{background-image:var(--radius-start);background-position:0 0}[dir=rtl] .tabs-lifted>.tab.tab-active:not([disabled]):last-child:before{background-image:var(--radius-end);background-position:100% 0}.table:where([dir=rtl],[dir=rtl] *){text-align:right}.table::-webkit-scrollbar-thumb{background-color:var(--fallback-s,oklch(var(--s)/.5))}.table::-webkit-scrollbar-thumb:hover{background-color:var(--fallback-s,oklch(var(--s)/.8))}.table::-webkit-scrollbar-track{--tw-bg-opacity:1;background-color:var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity,1)))}.table::-webkit-scrollbar{width:.5rem}.table :where(th,td){text-wrap:nowrap;padding:.55rem 1.25rem;vertical-align:middle;font-size:1rem;line-height:1.375rem}.table :where(th){text-wrap:nowrap;font-size:.875rem;line-height:1.25rem;font-weight:500;text-transform:uppercase;--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)));letter-spacing:1px}.table tr.active,.table tr.active:nth-child(2n),.table-striped tbody tr:nth-child(2n),.table-striped tr.active,.table-striped tr.active:nth-child(2n),.table-striped-striped tbody tr:nth-child(2n){background-color:var(--fallback-bc,oklch(var(--bc)/.1))}.table :where(thead,tbody) :where(tr:first-child:last-child),.table :where(thead,tbody) :where(tr:not(:last-child)){border-bottom-width:1px;border-color:var(--fallback-bc,oklch(var(--bc)/.25))}.table :where(thead,tfoot,th){white-space:nowrap;--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)))}textarea{background-color:transparent}textarea:focus{outline-width:0;outline-color:transparent}textarea:focus-visible{outline:unset}.textarea::-moz-placeholder{color:var(--fallback-bc,oklch(var(--bc)/.5))}.textarea::placeholder{color:var(--fallback-bc,oklch(var(--bc)/.5))}.textarea::-webkit-scrollbar-thumb{border-radius:9999px;background-color:var(--fallback-s,oklch(var(--s)/.5))}.textarea::-webkit-scrollbar-thumb:hover{background-color:var(--fallback-s,oklch(var(--s)/.8))}.textarea::-webkit-scrollbar-track{border-radius:9999px;background-color:transparent}.textarea::-webkit-scrollbar{width:.5rem}.textarea:focus,s .textarea:focus-within{--tw-border-opacity:1;border-color:var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity,1)));--tw-shadow:0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));--tw-shadow:var(--tw-shadow-colored);--tw-shadow-colored:0 1px 2px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);--tw-shadow-color:var(--fallback-p,oklch(var(--p)/0.22));--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);--tw-ring-opacity:1;--tw-ring-color:var(--fallback-p,oklch(var(--p)/var(--tw-ring-opacity,1)))}.textarea.disabled,.textarea:disabled,.textarea[disabled]{pointer-events:none;border-width:0;border-color:var(--fallback-bc,oklch(var(--bc)/.1));background-color:var(--fallback-n,oklch(var(--n)/.1));color:var(--fallback-bc,oklch(var(--bc)/.5))}.textarea.textarea-floating.disabled,.textarea.textarea-floating:disabled,.textarea.textarea-floating[disabled]{border-width:1px;--tw-bg-opacity:1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)))}.textarea.textarea-floating.disabled~.textarea-floating-label,.textarea.textarea-floating:disabled~.textarea-floating-label,.textarea.textarea-floating[disabled]~.textarea-floating-label{color:var(--fallback-bc,oklch(var(--bc)/.5))}.textarea.textarea-filled.disabled,.textarea.textarea-filled:disabled,.textarea.textarea-filled[disabled]{border-bottom-width:1px}.textarea.textarea-filled.disabled~.textarea-filled-label,.textarea.textarea-filled:disabled~.textarea-filled-label,.textarea.textarea-filled[disabled]~.textarea-filled-label{color:var(--fallback-bc,oklch(var(--bc)/.5))}.input-group .textarea{border-width:0}.input-group .textarea:focus,.input-group .textarea:focus-within{--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)}.textarea.is-valid,.validate .textarea:valid{--tw-border-opacity:1;border-color:var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity,1)))}.textarea.is-valid:focus,.textarea.is-valid:focus-within,.validate .textarea:valid:focus,.validate .textarea:valid:focus-within{--tw-shadow-color:var(--fallback-su,oklch(var(--su)/0.22));--tw-shadow:var(--tw-shadow-colored);--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);--tw-ring-opacity:1;--tw-ring-color:var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity,1)))}.textarea.is-valid.textarea-filled:focus,.textarea.is-valid.textarea-filled:focus-within,.validate .textarea:valid.textarea-filled:focus,.validate .textarea:valid.textarea-filled:focus-within{--tw-border-opacity:1;border-color:var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity,1)));--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)}.textarea.is-valid~.textarea-filled-label,.textarea.is-valid~.textarea-floating-label,.validate .textarea:valid~.textarea-filled-label,.validate .textarea:valid~.textarea-floating-label{--tw-text-opacity:1;color:var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity,1)))}.textarea.is-valid:focus-within~.textarea-filled-focused,.textarea.is-valid:focus~.textarea-filled-focused,.validate .textarea:valid:focus-within~.textarea-filled-focused,.validate .textarea:valid:focus~.textarea-filled-focused{--tw-bg-opacity:1;background-color:var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity,1)))}.textarea:focus.is-valid~.textarea-filled-label,.textarea:focus.is-valid~.textarea-floating-label,.validate .textarea:focus:valid~.textarea-filled-label,.validate .textarea:focus:valid~.textarea-floating-label{--tw-text-opacity:1;color:var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity,1)))}.textarea:focus.is-invalid~.textarea-filled-label,.textarea:focus.is-invalid~.textarea-floating-label,.validate .textarea:focus:invalid~.textarea-filled-label,.validate .textarea:focus:invalid~.textarea-floating-label{--tw-text-opacity:1;color:var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity,1)))}.textarea.is-invalid,.validate .textarea:invalid{--tw-border-opacity:1;border-color:var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity,1)))}.textarea.is-invalid:focus,.textarea.is-invalid:focus-within,.validate .textarea:invalid:focus,.validate .textarea:invalid:focus-within{--tw-shadow-color:var(--fallback-er,oklch(var(--er)/0.22));--tw-shadow:var(--tw-shadow-colored);--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);--tw-ring-opacity:1;--tw-ring-color:var(--fallback-er,oklch(var(--er)/var(--tw-ring-opacity,1)))}.textarea.is-invalid.textarea-filled:focus,.textarea.is-invalid.textarea-filled:focus-within,.validate .textarea:invalid.textarea-filled:focus,.validate .textarea:invalid.textarea-filled:focus-within{--tw-border-opacity:1;border-color:var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity,1)));--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)}.textarea.is-invalid~.textarea-filled-label,.textarea.is-invalid~.textarea-floating-label,.validate .textarea:invalid~.textarea-filled-label,.validate .textarea:invalid~.textarea-floating-label{--tw-text-opacity:1;color:var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity,1)))}.textarea.is-invalid:focus-within~.textarea-filled-focused,.textarea.is-invalid:focus~.textarea-filled-focused,.validate .textarea:invalid:focus-within~.textarea-filled-focused,.validate .textarea:invalid:focus~.textarea-filled-focused{--tw-bg-opacity:1;background-color:var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity,1)))}.validate .label-text:has(+* .textarea:valid),.validate .label-text:has(~.textarea:valid),.validate .label:has(+* .textarea:valid)>*,.validate .label:has(~.textarea:valid)>*,.validate .textarea:valid~.label,.validate .textarea:valid~.label .label-text,.validate .textarea:valid~.label-text,.validate :has(.textarea:valid)~.label,.validate :has(.textarea:valid)~.label .label-text,.validate :has(.textarea:valid)~.label-text{--tw-text-opacity:1;color:var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity,1)))}.validate .label-text:has(+* .textarea:invalid),.validate .label-text:has(~.textarea:invalid),.validate .label:has(+* .textarea:invalid)>*,.validate .label:has(~.textarea:invalid)>*,.validate .textarea:invalid~.label,.validate .textarea:invalid~.label .label-text,.validate .textarea:invalid~.label-text,.validate :has(.textarea:invalid)~.label,.validate :has(.textarea:invalid)~.label .label-text,.validate :has(.textarea:invalid)~.label-text{--tw-text-opacity:1;color:var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity,1)))}.validate .textarea:valid+*>.success-message,.validate .textarea:valid~.success-message,.validate :has(>.textarea:valid)>*>.success-message,.validate :has(>.textarea:valid)~.success-message{display:block}.validate .textarea:invalid+*>.error-message,.validate .textarea:invalid~.error-message,.validate :has(>.textarea:invalid)>*>.error-message,.validate :has(>.textarea:invalid)~.error-message{display:block}.apexcharts-tooltip-series-group.apexcharts-active{padding-bottom:0!important}.apexcharts-tooltip-title{border-top-left-radius:.5rem;border-top-right-radius:.5rem;border-color:var(--fallback-bc,oklch(var(--bc)/.4))!important;--tw-bg-opacity:1!important;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)))!important;padding-left:.625rem!important;padding-right:.625rem!important;font-size:.875rem!important;line-height:1.25rem!important;font-weight:600!important;--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)))}.flatpickr-calendar{visibility:hidden;position:absolute;display:flex;max-width:18rem;touch-action:manipulation;flex-direction:row;gap:.375rem;overflow:hidden;border-radius:var(--rounded-box,.5rem);border-color:transparent;--tw-bg-opacity:1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)));--tw-shadow:0 4px 6px -1px var(--fallback-bs,oklch(var(--bs)/0.2));--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.flatpickr-calendar.hasWeeks{max-width:21rem}.flatpickr-calendar:after,.flatpickr-calendar:before{content:none}.flatpickr-current-month{position:absolute;inset-inline-start:1rem;display:flex;width:auto;align-items:center;justify-content:center;gap:.25rem;padding-top:0;font-size:1rem;line-height:1.375rem;font-weight:500;--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)))}.flatpickr-current-month:where([dir=rtl],[dir=rtl] *){inset-inline-end:1rem;inset-inline-start:auto}.flatpickr-current-month .flatpickr-monthDropdown-months,.flatpickr-current-month input.cur-year{display:flex;cursor:pointer;align-items:center;justify-content:center;border-radius:0;border-width:0;vertical-align:middle;font-weight:500;outline:2px solid transparent;outline-offset:2px;font-size:inherit;font-family:inherit;line-height:inherit;color:inherit}.flatpickr-current-month span.cur-month{margin:0;font-weight:500}.flatpickr-current-month span.cur-month:hover{background-color:transparent}.flatpickr-current-month .numInputWrapper{display:inline-block;width:6ch}.flatpickr-current-month .numInputWrapper:hover{background-color:transparent}.flatpickr-current-month .flatpickr-monthDropdown-months{position:relative;margin-top:-1px;cursor:pointer;--tw-bg-opacity:1!important;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)))!important;padding:0}.flatpickr-current-month input.cur-year{margin:0;height:1.25rem;cursor:default;padding-inline-start:.25rem}.flatpickr-current-month input.cur-year:focus{outline:2px solid transparent;outline-offset:2px}.flatpickr-current-month input.cur-year[disabled],.flatpickr-current-month input.cur-year[disabled]:hover{pointer-events:none;background-color:transparent}.flatpickr-months .flatpickr-month{position:relative;display:flex;height:3.75rem;-webkit-user-select:none;-moz-user-select:none;user-select:none;align-items:center;overflow:hidden;border-top-left-radius:var(--rounded-box,.5rem);border-top-right-radius:var(--rounded-box,.5rem);padding-left:1rem;padding-right:1rem;text-align:center}.flatpickr-months .flatpickr-next-month,.flatpickr-months .flatpickr-prev-month{position:absolute;top:1rem;display:flex;width:1.75rem;height:1.75rem;align-items:center;justify-content:center;border-radius:9999px;background-color:var(--fallback-n,oklch(var(--n)/.1));padding:0;--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)));text-decoration-line:none}.flatpickr-months .flatpickr-next-month:hover,.flatpickr-months .flatpickr-prev-month:hover{fill:var(--fallback-bc,oklch(var(--bc)/.9))}.flatpickr-months .flatpickr-next-month:where([dir=rtl],[dir=rtl] *),.flatpickr-months .flatpickr-prev-month:where([dir=rtl],[dir=rtl] *){--tw-rotate:180deg;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.flatpickr-months .flatpickr-next-month svg,.flatpickr-months .flatpickr-prev-month svg{width:.75rem;height:.75rem;fill:var(--fallback-bc,oklch(var(--bc)/.9));vertical-align:middle;--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)))}.flatpickr-months .flatpickr-next-month:hover svg,.flatpickr-months .flatpickr-prev-month:hover svg{fill:var(--fallback-bc,oklch(var(--bc)/.9))}.flatpickr-months .flatpickr-prev-month.flatpickr-prev-month{inset-inline-end:50px;inset-inline-start:auto}.flatpickr-months .flatpickr-prev-month.flatpickr-prev-month:where([dir=rtl],[dir=rtl] *){inset-inline-end:auto;inset-inline-start:3.5rem;--tw-skew-x:-1deg;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.flatpickr-months .flatpickr-next-month.flatpickr-prev-month{inset-inline-end:0;inset-inline-start:0}.flatpickr-months .flatpickr-next-month.flatpickr-next-month{inset-inline-end:1rem}.flatpickr-months .flatpickr-next-month.flatpickr-next-month:where([dir=rtl],[dir=rtl] *){inset-inline-end:auto;inset-inline-start:1rem;--tw-skew-x:-1deg;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.flatpickr-weekdays{display:flex;width:100%;align-items:center;overflow:hidden;padding-left:.75rem;padding-right:.75rem;text-align:center}.flatpickr-weekdaycontainer{display:flex;width:100%}.flatpickr-weekwrapper .flatpickr-weekday,span.flatpickr-weekday{margin:0;display:block;cursor:default;text-align:center;font-size:.875rem;line-height:1.25rem;font-weight:500;--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)))}.flatpickr-days{position:relative;display:flex;width:100%;max-width:18rem;flex-wrap:wrap;overflow:hidden;padding:.5rem .625rem}.flatpickr-days:focus{outline:2px solid transparent;outline-offset:2px}.flatpickr-calendar.hasTime .flatpickr-days{border-bottom-right-radius:0;border-bottom-left-radius:0;border-bottom-width:0}.flatpickr-days .dayContainer{display:flex;min-width:100%;max-width:100%;flex-wrap:wrap;justify-content:center;row-gap:.125rem;padding:0;opacity:1;outline:2px solid transparent;outline-offset:2px}.flatpickr-day{position:relative;margin:0;display:flex;width:2.375rem;height:2.375rem;max-width:2.375rem;cursor:pointer;align-items:center;justify-content:center;text-align:center;font-size:1rem;line-height:1.375rem;--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)))}.flatpickr-day.today:not(.selected){border-color:transparent;background-color:var(--fallback-p,oklch(var(--p)/.2));--tw-text-opacity:1;color:var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity,1)))}.flatpickr-day.inRange,.flatpickr-day.nextMonthDay.inRange,.flatpickr-day.nextMonthDay.today.inRange,.flatpickr-day.nextMonthDay:focus,.flatpickr-day.nextMonthDay:hover,.flatpickr-day.prevMonthDay.inRange,.flatpickr-day.prevMonthDay.today.inRange,.flatpickr-day.prevMonthDay:focus,.flatpickr-day.prevMonthDay:hover,.flatpickr-day.today.inRange,.flatpickr-day:focus,.flatpickr-day:hover{cursor:pointer;outline:2px solid transparent;outline-offset:2px}.flatpickr-day.nextMonthDay:focus:not(.selected,.today),.flatpickr-day.nextMonthDay:hover:not(.selected,.today),.flatpickr-day.prevMonthDay:focus:not(.selected,.today),.flatpickr-day.prevMonthDay:hover:not(.selected,.today),.flatpickr-day:focus:not(.selected,.today),.flatpickr-day:hover:not(.selected,.today){border-color:transparent;background-color:var(--fallback-n,oklch(var(--n)/.1))}.flatpickr-day.endRange,.flatpickr-day.endRange.inRange,.flatpickr-day.endRange.nextMonthDay,.flatpickr-day.endRange.prevMonthDay,.flatpickr-day.endRange:focus,.flatpickr-day.endRange:hover,.flatpickr-day.selected,.flatpickr-day.selected.inRange,.flatpickr-day.selected.nextMonthDay,.flatpickr-day.selected.prevMonthDay,.flatpickr-day.selected:focus,.flatpickr-day.selected:hover,.flatpickr-day.startRange,.flatpickr-day.startRange.inRange,.flatpickr-day.startRange.nextMonthDay,.flatpickr-day.startRange.prevMonthDay,.flatpickr-day.startRange:focus,.flatpickr-day.startRange:hover{border-color:transparent;--tw-bg-opacity:1;background-color:var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity,1)));--tw-text-opacity:1;color:var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity,1)));--tw-shadow:0 2px 4px 0 var(--fallback-bs,oklch(var(--bs)/0.26));--tw-shadow-colored:0 2px 4px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.flatpickr-day.inRange:not(.startRange):not(.endRange){border-radius:0;border-color:transparent}.flatpickr-day.disabled,.flatpickr-day.disabled:hover{pointer-events:none;color:var(--fallback-bc,oklch(var(--bc)/.5))}.flatpickr-day.disabled,.flatpickr-day.disabled:hover,.flatpickr-day.nextMonthDay,.flatpickr-day.notAllowed,.flatpickr-day.notAllowed.nextMonthDay,.flatpickr-day.notAllowed.prevMonthDay,.flatpickr-day.prevMonthDay{border-color:transparent;background-color:transparent}.flatpickr-day.week.selected{border-radius:0}.flatpickr-day.endRange.startRange,.flatpickr-day.selected.startRange,.flatpickr-day.startRange.startRange{border-end-end-radius:0;border-start-end-radius:0}.flatpickr-day.endRange.endRange,.flatpickr-day.selected.endRange,.flatpickr-day.startRange.endRange{border-end-start-radius:0;border-start-start-radius:0}.flatpickr-day.flatpickr-disabled,.flatpickr-day.flatpickr-disabled:hover,.flatpickr-day.nextMonthDay,.flatpickr-day.notAllowed,.flatpickr-day.notAllowed.nextMonthDay,.flatpickr-day.notAllowed.prevMonthDay,.flatpickr-day.prevMonthDay{color:var(--fallback-bc,oklch(var(--bc)/.5))}.flatpickr-day.inRange,.flatpickr-day.inRange:hover{background-color:var(--fallback-p,oklch(var(--p)/.2));--tw-text-opacity:1;color:var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity,1)));box-shadow:unset}.flatpickr-day.endRange.startRange+.endRange:not(:nth-child(7n+1)),.flatpickr-day.selected.startRange+.endRange:not(:nth-child(7n+1)),.flatpickr-day.startRange.startRange+.endRange:not(:nth-child(7n+1)){box-shadow:unset}.flatpickr-weekwrapper span.flatpickr-day,.flatpickr-weekwrapper span.flatpickr-day:hover{margin:0;display:flex;width:2.375rem;height:2.375rem;max-width:2.375rem;cursor:pointer;align-items:center;justify-content:center;text-align:center;font-size:1rem;line-height:1.375rem;--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)))}.flatpickr-weekwrapper span.flatpickr-day:hover:not(:last-child),.flatpickr-weekwrapper span.flatpickr-day:not(:last-child){margin-bottom:.125rem}.flatpickr-weekwrapper .flatpickr-weeks{padding-top:.5rem;padding-bottom:.5rem;padding-inline-end:0;padding-inline-start:.625rem;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.flatpickr-weekwrapper .flatpickr-weekday{padding-inline-start:.75rem;line-height:28px}.flatpickr-calendar .flatpickr-innerContainer:has(>.flatpickr-weekwrapper)>.flatpickr-rContainer .flatpickr-days,.flatpickr-calendar .flatpickr-innerContainer:has(>.flatpickr-weekwrapper)>.flatpickr-rContainer .flatpickr-weekdays{padding-inline-start:0}.flatpickr-calendar.hasTime .flatpickr-time{height:100%;border-color:var(--fallback-bc,oklch(var(--bc)/.1));padding:.75rem 1.125rem}.flatpickr-time{max-height:unset;gap:.5rem;line-height:30px}.flatpickr-time .numInputWrapper{border-radius:var(--rounded-btn,.375rem);height:inherit}.flatpickr-time .flatpickr-am-pm:focus,.flatpickr-time .flatpickr-am-pm:hover,.flatpickr-time input:focus,.flatpickr-time input:hover{background:unset}.flatpickr-time .numInputWrapper span.arrowUp{top:10%}.flatpickr-time:after{content:none}.flatpickr-calendar.hasTime.noCalendar>.flatpickr-time{border-color:transparent}.flatpickr-time input.flatpickr-hour{font-weight:400}.flatpickr-time input.flatpickr-hour,.flatpickr-time input.flatpickr-minute{height:auto;border-radius:var(--rounded-btn,.375rem);border-width:1px;border-style:solid;border-color:var(--fallback-bc,oklch(var(--bc)/.1))}.flatpickr-time .flatpickr-am-pm,.flatpickr-time input.flatpickr-hour,.flatpickr-time input.flatpickr-minute{font-size:1rem;line-height:1.375rem;line-height:inherit;--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)))}.flatpickr-time .flatpickr-am-pm{display:flex;align-items:center;justify-content:center;border-radius:var(--rounded-btn,.375rem);border-width:1px;border-color:var(--fallback-bc,oklch(var(--bc)/.1))}.numInputWrapper span:hover,.numInputWrapper:hover{background:unset}.flatpickr-current-month .numInputWrapper span.arrowUp:after,.flatpickr-time .numInputWrapper span.arrowUp:after{border-bottom-color:var(--fallback-bc,oklch(var(--bc)/.8))}.flatpickr-current-month .numInputWrapper span.arrowDown:after,.flatpickr-time .numInputWrapper span.arrowDown:after{border-top-color:var(--fallback-bc,oklch(var(--bc)/.8))}.numInputWrapper span{border-width:0}.flatpickr-calendar:not(.inline):not(.open){display:none}:root{--fc-page-bg-color:var(--fallback-b1,oklch(var(--b1)/1));--fc-neutral-bg-color:var(--fallback-n,oklch(var(--n)/0.3));--fc-neutral-text-color:var(--fallback-nc,oklch(var(--nc)/1));--fc-border-color:var(--fallback-bc,oklch(var(--bc)/0.16));--fc-button-text-color:var(--fallback-p,oklch(var(--p)/1));--fc-button-bg-color:var(--fallback-p,oklch(var(--p)/0.16));--fc-button-border-color:var(--fallback-p,oklch(var(--p)/0.16));--fc-button-hover-bg-color:var(--fallback-p,oklch(var(--p)/0.24));--fc-button-hover-border-color:var(--fallback-p,oklch(var(--p)/0.24));--fc-button-active-bg-color:var(--fallback-p,oklch(var(--p)/0.24));--fc-button-active-border-color:var(--fallback-p,oklch(var(--p)/0.24));--fc-event-bg-color:var(--fallback-p,oklch(var(--p)/0.16));--fc-event-border-color:var(--fallback-p,oklch(var(--p)/1));--fc-event-text-color:var(--fallback-p,oklch(var(--p)/1));--fc-event-selected-overlay-color:var(--fallback-s,oklch(var(--s)/0.16));--fc-list-event-dot-width:8px;--fc-list-event-hover-bg-color:var(--fallback-s,oklch(var(--s)/0.16));--fc-more-link-bg-color:var(--fallback-s,oklch(var(--s)/0.16));--fc-more-link-text-color:var(--fallback-s,oklch(var(--s)/1));--fc-event-resizer-thickness:8px;--fc-event-resizer-dot-total-width:8px;--fc-event-resizer-dot-border-width:1px;--fc-non-business-color:var(--fallback-in,oklch(var(--in)/0.16));--fc-bg-event-color:var(--fallback-n,oklch(var(--n)/1));--fc-bg-event-opacity:0.3;--fc-highlight-color:var(--fallback-s,oklch(var(--s)/0.16));--fc-today-bg-color:var(--fallback-b2,oklch(var(--b2)/0.5));--fc-now-indicator-color:var(--fallback-wa,oklch(var(--wa)/1))}@keyframes notyf-fadeinright{0%{opacity:0;transform:translateX(-25%)}to{opacity:1;transform:translateX(0)}}@keyframes notyf-fadeoutleft{0%{opacity:1;transform:translateX(0)}to{opacity:0;transform:translateX(-25%)}}@keyframes rating-jump{0%,to{transform:translateY(0) scale(1)}50%{transform:translateY(-.3em) scale(1.1)}}.advance-select-xs~.advance-select-menu .advance-select-option{width:100%;cursor:pointer;padding:.25rem .5rem;font-size:.875rem;line-height:1.25rem;font-weight:400}.advance-select-sm~.advance-select-menu .advance-select-option{width:100%;cursor:pointer;padding:.375rem .5rem;font-size:.875rem;line-height:1.25rem;font-weight:400}.advance-select-lg~.advance-select-menu .advance-select-option{width:100%;cursor:pointer;padding:.75rem 1rem;font-size:1.125rem;line-height:1.5rem;font-weight:400}.btn-sm{height:1.875rem;min-height:1.875rem;padding-left:.75rem;padding-right:.75rem;font-size:.875rem;line-height:1.25rem}.btn-square:where(.btn-sm){height:1.875rem;width:1.875rem;padding:0}.btn-circle:where(.btn-xs){height:1.5rem;width:1.5rem;border-radius:9999px;padding:0}.btn-circle:where(.btn-sm){height:1.875rem;width:1.875rem;border-radius:9999px;padding:0}.btn-circle:where(.btn-lg){height:2.875rem;width:2.875rem;border-radius:9999px;padding:0}.drawer-start{inset-inline-start:0;top:0;--tw-translate-x:-100%;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));inset-inline-end:calc(100vw - 23.45rem)}.drawer-start:where([dir=rtl],[dir=rtl] *){--tw-translate-x:100%;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.join.join-vertical{flex-direction:column}.join.join-vertical .join-item:first-child:not(:last-child),.join.join-vertical :first-child:not(:last-child) .join-item{border-end-start-radius:0;border-end-end-radius:0;border-start-start-radius:inherit;border-start-end-radius:inherit}.join.join-vertical .join-item:last-child:not(:first-child),.join.join-vertical :last-child:not(:first-child) .join-item{border-start-start-radius:0;border-start-end-radius:0;border-end-start-radius:inherit;border-end-end-radius:inherit}.menu-horizontal>li:not(.menu-title)>.collapse>ul{position:absolute}.menu-vertical>li:not(.menu-title)>.collapse>ul{position:relative}.tabs-lg :where(.tab){height:2.875rem;font-size:1.125rem;line-height:1.5rem;--tab-padding:1.25rem}.tabs-sm :where(.tab){height:1.875rem;font-size:.875rem;line-height:1.25rem;--tab-padding:0.75rem}.tabs-xs :where(.tab){height:1.5rem;font-size:.875rem;line-height:1.25rem;--tab-padding:0.5rem}.avatar.online-top:before{background-color:var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity,1)))}.avatar.offline-top:before,.avatar.online-top:before{content:"";position:absolute;z-index:10;display:block;border-radius:9999px;--tw-bg-opacity:1;outline-style:solid;outline-width:2px;outline-color:var(--fallback-b1,oklch(var(--b1)/1));width:20%;height:20%;top:3%;right:3%}.avatar.offline-top:before{background-color:var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity,1)))}.avatar.busy-top:before{background-color:var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity,1)))}.avatar.away-top:before,.avatar.busy-top:before{content:"";position:absolute;z-index:10;display:block;border-radius:9999px;--tw-bg-opacity:1;outline-style:solid;outline-width:2px;outline-color:var(--fallback-b1,oklch(var(--b1)/1));width:20%;height:20%;top:3%;right:3%}.avatar.away-top:before{background-color:var(--fallback-wa,oklch(var(--wa)/var(--tw-bg-opacity,1)))}.avatar.online-bottom:before{background-color:var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity,1)))}.avatar.offline-bottom:before,.avatar.online-bottom:before{content:"";position:absolute;z-index:10;display:block;border-radius:9999px;--tw-bg-opacity:1;outline-style:solid;outline-width:2px;outline-color:var(--fallback-b1,oklch(var(--b1)/1));width:20%;height:20%;bottom:3%;right:3%}.avatar.offline-bottom:before{background-color:var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity,1)))}.avatar.busy-bottom:before{background-color:var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity,1)))}.avatar.away-bottom:before,.avatar.busy-bottom:before{content:"";position:absolute;z-index:10;display:block;border-radius:9999px;--tw-bg-opacity:1;outline-style:solid;outline-width:2px;outline-color:var(--fallback-b1,oklch(var(--b1)/1));width:20%;height:20%;bottom:3%;right:3%}.avatar.away-bottom:before{background-color:var(--fallback-wa,oklch(var(--wa)/var(--tw-bg-opacity,1)))}:where(.card-compact) .card-body{padding:1rem}:where(.card-compact) .card-title{margin-bottom:.25rem}:where(.card-compact:has(>.card-header))>.card-body{padding-top:0}:where(.card-compact:has(>.card-body))>.card-footer{padding-top:0}.drawer-bottom,.drawer-end,.drawer-start,.drawer-top{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));transition-property:all;transition-duration:.3s;transition-timing-function:cubic-bezier(.4,0,.2,1)}.join.join-vertical>:where(:not(:first-child)){margin-left:0;margin-right:0;margin-top:-1px}.menu-horizontal>li:not(.menu-title)>.collapse>ul{margin-inline-start:0;margin-top:1rem;padding-top:.5rem;padding-bottom:.5rem;padding-inline-end:.5rem}.menu-horizontal>li>.collapse>ul:before{content:none}:where(.menu-horizontal>li:not(.menu-title)>.collapse>ul){border-radius:var(--rounded-box,.5rem);--tw-bg-opacity:1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)));--tw-shadow:0 2px 4px 0 var(--fallback-bs,oklch(var(--bs)/0.26));--tw-shadow-colored:0 2px 4px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.menu-vertical>li:not(.menu-title)>.collapse>ul{margin-inline-start:1rem;margin-top:0;padding-top:0;padding-bottom:0;padding-inline-end:0}.tabs-bordered.tabs-vertical>.tab{width:100%;justify-content:flex-start;border-bottom-width:0;border-inline-end-width:calc(var(--tab-border, 1px) + 1px)}@keyframes RomboConfettiPop{0%{opacity:0;transform:scale(1)}33%{opacity:1;transform:scale(1.15)}50%{transform:scale(.975)}65%{transform:scale(1.025)}80%{transform:scale(.99)}87%{transform:scale(1.01)}to{opacity:1;transform:scale(1)}}@keyframes topfetti{0%{background-position:5% 90%,10% 90%,10% 90%,15% 90%,25% 90%,25% 90%,40% 90%,55% 90%,70% 90%}50%{background-position:0 80%,0 20%,10% 40%,20% 0,30% 30%,22% 50%,50% 50%,65% 20%,90% 30%}to{background-position:0 70%,0 10%,10% 30%,20% -10%,30% 20%,22% 40%,50% 40%,65% 10%,90% 20%;background-size:0 0,0 0,0 0,0 0,0 0,0 0}}@keyframes bottomfetti{0%{background-position:10% -10%,30% 10%,55% -10%,70% -10%,85% -10%,70% -10%,70% 0}50%{background-position:0 80%,20% 80%,45% 60%,60% 100%,75% 70%,95% 60%,105% 0}to{background-position:0 90%,20% 90%,45% 70%,60% 110%,75% 80%,95% 70%,110% 10%;background-size:0 0,0 0,0 0,0 0,0 0,0 0}}.sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);white-space:nowrap;border-width:0}.pointer-events-none{pointer-events:none}.visible{visibility:visible}.invisible{visibility:hidden}.collapse{visibility:collapse}.static{position:static}.fixed{position:fixed}.absolute{position:absolute}.relative{position:relative}.sticky{position:sticky}.inset-0{inset:0}.inset-y-0{top:0;bottom:0}.bottom-0{bottom:0}.bottom-4{bottom:1rem}.bottom-full{bottom:100%}.left-0{left:0}.right-0{right:0}.right-2\.5{right:.625rem}.right-4{right:1rem}.top-0{top:0}.top-3{top:.75rem}.top-full{top:100%}.z-10{z-index:10}.z-50{z-index:50}.z-\[60\]{z-index:60}.-mx-3{margin-left:-.75rem;margin-right:-.75rem}.mx-auto{margin-left:auto;margin-right:auto}.my-1{margin-top:.25rem;margin-bottom:.25rem}.my-2{margin-top:.5rem;margin-bottom:.5rem}.my-4{margin-top:1rem;margin-bottom:1rem}.\!me-1{margin-inline-end:.25rem!important}.\!me-1\.5{margin-inline-end:.375rem!important}.\!ms-auto{margin-inline-start:auto!important}.mb-0\.5{margin-bottom:.125rem}.mb-1{margin-bottom:.25rem}.mb-2{margin-bottom:.5rem}.mb-2\.5{margin-bottom:.625rem}.mb-4{margin-bottom:1rem}.mb-5{margin-bottom:1.25rem}.mb-6{margin-bottom:1.5rem}.mb-8{margin-bottom:2rem}.me-2{margin-inline-end:.5rem}.ml-2{margin-left:.5rem}.ml-3{margin-left:.75rem}.ml-6{margin-left:1.5rem}.mr-2{margin-right:.5rem}.ms-2{margin-inline-start:.5rem}.ms-3{margin-inline-start:.75rem}.ms-auto{margin-inline-start:auto}.mt-1{margin-top:.25rem}.mt-2{margin-top:.5rem}.mt-3{margin-top:.75rem}.mt-4{margin-top:1rem}.mt-8{margin-top:2rem}.block{display:block}.inline-block{display:inline-block}.inline{display:inline}.\!flex{display:flex!important}.flex{display:flex}.inline-flex{display:inline-flex}.table{display:table}.hidden{display:none}.size-3\.5{width:.875rem;height:.875rem}.size-4{width:1rem;height:1rem}.size-5{width:1.25rem;height:1.25rem}.size-8{width:2rem;height:2rem}.\!h-2\.5{height:.625rem!important}.h-10{height:2.5rem}.h-12{height:3rem}.h-2{height:.5rem}.h-3{height:.75rem}.h-32{height:8rem}.h-4{height:1rem}.h-40{height:10rem}.h-5{height:1.25rem}.h-6{height:1.5rem}.h-8{height:2rem}.h-full{height:100%}.h-px{height:1px}.max-h-48{max-height:12rem}.max-h-full{max-height:100%}.min-h-\[200px\]{min-height:200px}.min-h-\[calc\(100vh-8rem\)\]{min-height:calc(100vh - 8rem)}.min-h-full{min-height:100%}.min-h-screen{min-height:100vh}.\!w-2\.5{width:.625rem!important}.w-1\/2{width:50%}.w-10{width:2.5rem}.w-12{width:3rem}.w-16{width:4rem}.w-3{width:.75rem}.w-4{width:1rem}.w-5{width:1.25rem}.w-6{width:1.5rem}.w-64{width:16rem}.w-8{width:2rem}.w-full{width:100%}.min-w-0{min-width:0}.min-w-28{min-width:7rem}.min-w-44{min-width:11rem}.min-w-48{min-width:12rem}.min-w-60{min-width:15rem}.max-w-2xl{max-width:42rem}.max-w-64{max-width:16rem}.max-w-full{max-width:100%}.max-w-lg{max-width:32rem}.max-w-md{max-width:28rem}.max-w-screen-xl{max-width:1280px}.max-w-sm{max-width:24rem}.flex-1{flex:1 1 0%}.flex-none{flex:none}.flex-shrink-0,.shrink-0{flex-shrink:0}.border-collapse{border-collapse:collapse}.-translate-x-full{--tw-translate-x:-100%}.-translate-x-full,.transform{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.cursor-pointer{cursor:pointer}.resize-none{resize:none}.resize{resize:both}.appearance-none{-webkit-appearance:none;-moz-appearance:none;appearance:none}.flex-row{flex-direction:row}.flex-col{flex-direction:column}.flex-wrap{flex-wrap:wrap}.flex-nowrap{flex-wrap:nowrap}.items-start{align-items:flex-start}.items-center{align-items:center}.justify-start{justify-content:flex-start}.justify-end{justify-content:flex-end}.justify-center{justify-content:center}.\!justify-between{justify-content:space-between!important}.justify-between{justify-content:space-between}.gap-1{gap:.25rem}.gap-2{gap:.5rem}.gap-3{gap:.75rem}.gap-4{gap:1rem}.gap-x-1{-moz-column-gap:.25rem;column-gap:.25rem}.gap-x-2{-moz-column-gap:.5rem;column-gap:.5rem}.gap-x-3{-moz-column-gap:.75rem;column-gap:.75rem}.space-x-3>:not([hidden])~:not([hidden]){--tw-space-x-reverse:0;margin-right:calc(.75rem*var(--tw-space-x-reverse));margin-left:calc(.75rem*(1 - var(--tw-space-x-reverse)))}.space-x-4>:not([hidden])~:not([hidden]){--tw-space-x-reverse:0;margin-right:calc(1rem*var(--tw-space-x-reverse));margin-left:calc(1rem*(1 - var(--tw-space-x-reverse)))}.space-y-0\.5>:not([hidden])~:not([hidden]){--tw-space-y-reverse:0;margin-top:calc(.125rem*(1 - var(--tw-space-y-reverse)));margin-bottom:calc(.125rem*var(--tw-space-y-reverse))}.space-y-2>:not([hidden])~:not([hidden]){--tw-space-y-reverse:0;margin-top:calc(.5rem*(1 - var(--tw-space-y-reverse)));margin-bottom:calc(.5rem*var(--tw-space-y-reverse))}.space-y-6>:not([hidden])~:not([hidden]){--tw-space-y-reverse:0;margin-top:calc(1.5rem*(1 - var(--tw-space-y-reverse)));margin-bottom:calc(1.5rem*var(--tw-space-y-reverse))}.overflow-auto{overflow:auto}.overflow-hidden{overflow:hidden}.overflow-x-auto{overflow-x:auto}.overflow-y-auto{overflow-y:auto}.overflow-x-hidden{overflow-x:hidden}.overflow-y-scroll{overflow-y:scroll}.truncate{overflow:hidden;text-overflow:ellipsis}.truncate,.whitespace-nowrap{white-space:nowrap}.whitespace-pre-wrap{white-space:pre-wrap}.break-words{overflow-wrap:break-word}.rounded{border-radius:.25rem}.rounded-box{border-radius:var(--rounded-box,.5rem)}.rounded-btn{border-radius:var(--rounded-btn,.375rem)}.rounded-full{border-radius:9999px}.rounded-lg{border-radius:.5rem}.rounded-md{border-radius:.375rem}.rounded-xl{border-radius:.75rem}.rounded-b{border-bottom-right-radius:.25rem;border-bottom-left-radius:.25rem}.rounded-t{border-top-left-radius:.25rem;border-top-right-radius:.25rem}.rounded-t-lg{border-top-left-radius:.5rem;border-top-right-radius:.5rem}.border{border-width:1px}.border-0{border-width:0}.border-b{border-bottom-width:1px}.border-l-4{border-left-width:4px}.border-r{border-right-width:1px}.border-t{border-top-width:1px}.\!border-none{border-style:none!important}.border-none{border-style:none}.\!border-base-content\/40{border-color:var(--fallback-bc,oklch(var(--bc)/.4))!important}.border-base-200{--tw-border-opacity:1;border-color:var(--fallback-b2,oklch(var(--b2)/var(--tw-border-opacity,1)))}.border-base-content\/10{border-color:var(--fallback-bc,oklch(var(--bc)/.1))}.border-base-content\/20{border-color:var(--fallback-bc,oklch(var(--bc)/.2))}.border-base-content\/40{border-color:var(--fallback-bc,oklch(var(--bc)/.4))}.border-blue-400{--tw-border-opacity:1;border-color:rgb(96 165 250/var(--tw-border-opacity,1))}.border-gray-100{--tw-border-opacity:1;border-color:rgb(243 244 246/var(--tw-border-opacity,1))}.border-gray-200{--tw-border-opacity:1;border-color:rgb(229 231 235/var(--tw-border-opacity,1))}.border-gray-300{--tw-border-opacity:1;border-color:rgb(209 213 219/var(--tw-border-opacity,1))}.border-slate-200{--tw-border-opacity:1;border-color:rgb(226 232 240/var(--tw-border-opacity,1))}.\!bg-base-100{--tw-bg-opacity:1!important;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)))!important}.bg-base-100{--tw-bg-opacity:1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)))}.bg-base-200{--tw-bg-opacity:1;background-color:var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity,1)))}.bg-base-shadow\/70{background-color:var(--fallback-bs,oklch(var(--bs)/.7))}.bg-blue-50{--tw-bg-opacity:1;background-color:rgb(239 246 255/var(--tw-bg-opacity,1))}.bg-gray-200{--tw-bg-opacity:1;background-color:rgb(229 231 235/var(--tw-bg-opacity,1))}.bg-gray-50{--tw-bg-opacity:1;background-color:rgb(249 250 251/var(--tw-bg-opacity,1))}.bg-gray-500{--tw-bg-opacity:1;background-color:rgb(107 114 128/var(--tw-bg-opacity,1))}.bg-gray-600{--tw-bg-opacity:1;background-color:rgb(75 85 99/var(--tw-bg-opacity,1))}.bg-gray-700{--tw-bg-opacity:1;background-color:rgb(55 65 81/var(--tw-bg-opacity,1))}.bg-gray-800{--tw-bg-opacity:1;background-color:rgb(31 41 55/var(--tw-bg-opacity,1))}.bg-green-500{--tw-bg-opacity:1;background-color:rgb(34 197 94/var(--tw-bg-opacity,1))}.bg-indigo-500{--tw-bg-opacity:1;background-color:rgb(99 102 241/var(--tw-bg-opacity,1))}.bg-neutral-content{--tw-bg-opacity:1;background-color:var(--fallback-nc,oklch(var(--nc)/var(--tw-bg-opacity,1)))}.bg-primary{--tw-bg-opacity:1;background-color:var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity,1)))}.bg-red-100{--tw-bg-opacity:1;background-color:rgb(254 226 226/var(--tw-bg-opacity,1))}.bg-red-500{--tw-bg-opacity:1;background-color:rgb(239 68 68/var(--tw-bg-opacity,1))}.bg-red-600{--tw-bg-opacity:1;background-color:rgb(220 38 38/var(--tw-bg-opacity,1))}.bg-secondary-content{--tw-bg-opacity:1;background-color:var(--fallback-sc,oklch(var(--sc)/var(--tw-bg-opacity,1)))}.bg-slate-800{--tw-bg-opacity:1;background-color:rgb(30 41 59/var(--tw-bg-opacity,1))}.bg-transparent{background-color:transparent}.bg-white{--tw-bg-opacity:1;background-color:rgb(255 255 255/var(--tw-bg-opacity,1))}.bg-opacity-65{--tw-bg-opacity:0.65}.fill-black{fill:#000}.p-0{padding:0}.p-0\.5{padding:.125rem}.p-2{padding:.5rem}.p-2\.5{padding:.625rem}.p-3{padding:.75rem}.p-4{padding:1rem}.p-6{padding:1.5rem}.p-8{padding:2rem}.\!px-2{padding-left:.5rem!important;padding-right:.5rem!important}.\!px-2\.5{padding-left:.625rem!important;padding-right:.625rem!important}.px-2{padding-left:.5rem;padding-right:.5rem}.px-2\.5{padding-left:.625rem;padding-right:.625rem}.px-3{padding-left:.75rem;padding-right:.75rem}.px-4{padding-left:1rem;padding-right:1rem}.px-5{padding-left:1.25rem;padding-right:1.25rem}.px-6{padding-left:1.5rem;padding-right:1.5rem}.py-0\.5{padding-top:.125rem;padding-bottom:.125rem}.py-1{padding-top:.25rem;padding-bottom:.25rem}.py-2{padding-top:.5rem;padding-bottom:.5rem}.py-2\.5{padding-top:.625rem;padding-bottom:.625rem}.py-3{padding-top:.75rem;padding-bottom:.75rem}.pb-2{padding-bottom:.5rem}.pb-32{padding-bottom:8rem}.pb-40{padding-bottom:10rem}.pb-6{padding-bottom:1.5rem}.pl-10{padding-left:2.5rem}.pl-3{padding-left:.75rem}.pr-16{padding-right:4rem}.pr-4{padding-right:1rem}.pt-4{padding-top:1rem}.text-left{text-align:left}.text-center{text-align:center}.text-right{text-align:right}.align-bottom{vertical-align:bottom}.\!text-sm{font-size:.875rem!important;line-height:1.25rem!important}.text-2xl{font-size:1.5rem;line-height:2rem}.text-\[10px\]{font-size:10px}.text-base{font-size:1rem;line-height:1.375rem}.text-lg{font-size:1.125rem;line-height:1.5rem}.text-sm{font-size:.875rem;line-height:1.25rem}.text-xl{font-size:1.25rem;line-height:1.625rem}.text-xs{font-size:.75rem;line-height:1rem}.\!font-medium{font-weight:500!important}.\!font-semibold{font-weight:600!important}.font-bold{font-weight:700}.font-extralight{font-weight:200}.font-medium{font-weight:500}.font-normal{font-weight:400}.font-semibold{font-weight:600}.uppercase{text-transform:uppercase}.lowercase{text-transform:lowercase}.italic{font-style:italic}.ordinal{--tw-ordinal:ordinal;font-variant-numeric:var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction)}.leading-normal{line-height:1.5}.text-base-content{--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)))}.text-base-content\/50{color:var(--fallback-bc,oklch(var(--bc)/.5))}.text-base-content\/60{color:var(--fallback-bc,oklch(var(--bc)/.6))}.text-base-content\/80{color:var(--fallback-bc,oklch(var(--bc)/.8))}.text-base-content\/90{color:var(--fallback-bc,oklch(var(--bc)/.9))}.text-blue-400{--tw-text-opacity:1;color:rgb(96 165 250/var(--tw-text-opacity,1))}.text-blue-600{--tw-text-opacity:1;color:rgb(37 99 235/var(--tw-text-opacity,1))}.text-blue-700{--tw-text-opacity:1;color:rgb(29 78 216/var(--tw-text-opacity,1))}.text-error{--tw-text-opacity:1;color:var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity,1)))}.text-gray-400{--tw-text-opacity:1;color:rgb(156 163 175/var(--tw-text-opacity,1))}.text-gray-500{--tw-text-opacity:1;color:rgb(107 114 128/var(--tw-text-opacity,1))}.text-gray-600{--tw-text-opacity:1;color:rgb(75 85 99/var(--tw-text-opacity,1))}.text-gray-700{--tw-text-opacity:1;color:rgb(55 65 81/var(--tw-text-opacity,1))}.text-gray-900{--tw-text-opacity:1;color:rgb(17 24 39/var(--tw-text-opacity,1))}.text-green-400{--tw-text-opacity:1;color:rgb(74 222 128/var(--tw-text-opacity,1))}.text-primary{--tw-text-opacity:1;color:var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity,1)))}.text-primary-content{--tw-text-opacity:1;color:var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity,1)))}.text-red-500{--tw-text-opacity:1;color:rgb(239 68 68/var(--tw-text-opacity,1))}.text-red-800{--tw-text-opacity:1;color:rgb(153 27 27/var(--tw-text-opacity,1))}.text-success{--tw-text-opacity:1;color:var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity,1)))}.text-white{--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity,1))}.no-underline{text-decoration-line:none}.opacity-0{opacity:0}.shadow{--tw-shadow:0 2px 4px 0 var(--fallback-bs,oklch(var(--bs)/0.26));--tw-shadow-colored:0 2px 4px 0 var(--tw-shadow-color)}.shadow,.shadow-\[0_-2px_15px_-3px_rgba\(0\2c 0\2c 0\2c 0\.1\)\]{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-\[0_-2px_15px_-3px_rgba\(0\2c 0\2c 0\2c 0\.1\)\]{--tw-shadow:0 -2px 15px -3px rgba(0,0,0,.1);--tw-shadow-colored:0 -2px 15px -3px var(--tw-shadow-color)}.shadow-lg{--tw-shadow:0 10px 15px -2px var(--fallback-bs,oklch(var(--bs)/0.34));--tw-shadow-colored:0 10px 15px -2px var(--tw-shadow-color)}.shadow-lg,.shadow-md{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-md{--tw-shadow:0 4px 6px -1px var(--fallback-bs,oklch(var(--bs)/0.2));--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color)}.shadow-sm{--tw-shadow:0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));--tw-shadow-colored:0 1px 2px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.outline{outline-style:solid}.ring-0{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.blur{--tw-blur:blur(8px)}.blur,.filter{filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.backdrop-blur-sm{--tw-backdrop-blur:blur(4px);-webkit-backdrop-filter:var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);backdrop-filter:var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia)}.transition{transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,-webkit-backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter,-webkit-backdrop-filter;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.transition-\[height\]{transition-property:height;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.transition-all{transition-property:all;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.transition-opacity{transition-property:opacity;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.transition-transform{transition-property:transform;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.duration-100{transition-duration:.1s}.duration-300{transition-duration:.3s}.duration-500{transition-duration:.5s}.\[--auto-close\:inside\]{--auto-close:inside}.\[--offset\:8\]{--offset:8}.\[--placement\:bottom-end\]{--placement:bottom-end}.\[--placement\:top\]{--placement:top}.selected .combo-box-selected\:carousel-box .carousel-box,.selected .combo-box-selected\:carousel-box.carousel-box,.selected .combo-box-selected\:carousel-dot .carousel-dot,.selected .combo-box-selected\:carousel-dot.carousel-dot{--tw-bg-opacity:1;background-color:var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity,1)))}.menu li:not(.disabled,:disabled,[disabled])>.selected .combo-box-selected\:menu:not(ul,.menu-title,.collapse,.btn),.selected .combo-box-selected\:active.advance-select-option,.selected .combo-box-selected\:active.dropdown-item{background-color:var(--fallback-p,oklch(var(--p)/.1));--tw-text-opacity:1;color:var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity,1)))}.table .selected .combo-box-selected\:activetr,.table .selected .combo-box-selected\:activetr:nth-child(2n),.table-striped .selected .combo-box-selected\:activetr,.table-striped .selected .combo-box-selected\:activetr:nth-child(2n){background-color:var(--fallback-bc,oklch(var(--bc)/.1))}.selected.combo-box-selected\:carousel-box .carousel-box,.selected.combo-box-selected\:carousel-box.carousel-box,.selected.combo-box-selected\:carousel-dot .carousel-dot,.selected.combo-box-selected\:carousel-dot.carousel-dot{--tw-bg-opacity:1;background-color:var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity,1)))}@media (hover:hover){.menu li:not(.disabled,:disabled,[disabled])>.combo-box-selected\:active:not(ul,.menu-title,.collapse,.btn){background-color:var(--fallback-p,oklch(var(--p)/.1));--tw-text-opacity:1;color:var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity,1)))}}.menu li:not(.disabled,:disabled,[disabled])>.selected.combo-box-selected\:menu:not(ul,.menu-title,.collapse,.btn),.selected.combo-box-selected\:active.advance-select-option,.selected.combo-box-selected\:active.dropdown-item{background-color:var(--fallback-p,oklch(var(--p)/.1));--tw-text-opacity:1;color:var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity,1)))}.table tr.selected.combo-box-selected\:active,.table tr.selected.combo-box-selected\:active:nth-child(2n),.table-striped tr.selected.combo-box-selected\:active,.table-striped tr.selected.combo-box-selected\:active:nth-child(2n){background-color:var(--fallback-bc,oklch(var(--bc)/.1))}.complete .file-upload-complete\:progress-success,.complete.file-upload-complete\:progress-success{--tw-bg-opacity:1;background-color:var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity,1)));--tw-text-opacity:1;color:var(--fallback-suc,oklch(var(--suc)/var(--tw-text-opacity,1)));--progress-color:var(--fallback-su,oklch(var(--su)/1))}@media not all and (min-width:1024px){.max-lg\:btn-square{height:2.375rem;width:2.375rem;padding:0}.max-lg\:btn-square:where(.btn-xs){height:1.5rem;width:1.5rem;padding:0}.max-lg\:btn-square:where(.btn-sm){height:1.875rem;width:1.875rem;padding:0}.max-lg\:btn-square:where(.btn-lg){height:2.875rem;width:2.875rem;padding:0}}.last\:border-r-0:last-child{border-right-width:0}.hover\:bg-base-200:hover{--tw-bg-opacity:1;background-color:var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity,1)))}.hover\:bg-gray-100:hover{--tw-bg-opacity:1;background-color:rgb(243 244 246/var(--tw-bg-opacity,1))}.hover\:bg-gray-200:hover{--tw-bg-opacity:1;background-color:rgb(229 231 235/var(--tw-bg-opacity,1))}.hover\:bg-indigo-700:hover{--tw-bg-opacity:1;background-color:rgb(67 56 202/var(--tw-bg-opacity,1))}.hover\:bg-red-400:hover{--tw-bg-opacity:1;background-color:rgb(248 113 113/var(--tw-bg-opacity,1))}.hover\:bg-red-800:hover{--tw-bg-opacity:1;background-color:rgb(153 27 27/var(--tw-bg-opacity,1))}.hover\:bg-slate-600:hover{--tw-bg-opacity:1;background-color:rgb(71 85 105/var(--tw-bg-opacity,1))}.hover\:text-blue-500:hover{--tw-text-opacity:1;color:rgb(59 130 246/var(--tw-text-opacity,1))}.hover\:text-blue-700:hover{--tw-text-opacity:1;color:rgb(29 78 216/var(--tw-text-opacity,1))}.hover\:text-blue-900:hover{--tw-text-opacity:1;color:rgb(30 58 138/var(--tw-text-opacity,1))}.hover\:text-gray-700:hover{--tw-text-opacity:1;color:rgb(55 65 81/var(--tw-text-opacity,1))}.hover\:text-gray-900:hover{--tw-text-opacity:1;color:rgb(17 24 39/var(--tw-text-opacity,1))}.hover\:text-green-400:hover{--tw-text-opacity:1;color:rgb(74 222 128/var(--tw-text-opacity,1))}.focus\:z-10:focus{z-index:10}.focus\:border-blue-500:focus{--tw-border-opacity:1;border-color:rgb(59 130 246/var(--tw-border-opacity,1))}.focus\:border-primary:focus{--tw-border-opacity:1;border-color:var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity,1)))}.focus\:outline-none:focus{outline:2px solid transparent;outline-offset:2px}.focus\:ring-0:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)}.focus\:ring-0:focus,.focus\:ring-1:focus{box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.focus\:ring-1:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color)}.focus\:ring-2:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color)}.focus\:ring-2:focus,.focus\:ring-4:focus{box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.focus\:ring-4:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color)}.focus\:ring-blue-500:focus{--tw-ring-opacity:1;--tw-ring-color:rgb(59 130 246/var(--tw-ring-opacity,1))}.focus\:ring-gray-100:focus{--tw-ring-opacity:1;--tw-ring-color:rgb(243 244 246/var(--tw-ring-opacity,1))}.focus\:ring-primary:focus{--tw-ring-opacity:1;--tw-ring-color:var(--fallback-p,oklch(var(--p)/var(--tw-ring-opacity,1)))}.focus\:ring-red-300:focus{--tw-ring-opacity:1;--tw-ring-color:rgb(252 165 165/var(--tw-ring-opacity,1))}.active\:scale-95:active{--tw-scale-x:.95;--tw-scale-y:.95;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.group:hover .group-hover\:opacity-100{opacity:1}.dropdown.open>.dropdown-open\:rotate-180{--tw-rotate:180deg;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.dropdown.open>.dropdown-open\:opacity-100{opacity:1}.dropdown.open>.dropdown-toggle .dropdown-open\:rotate-180{--tw-rotate:180deg;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.dropdown.open>.dropdown-toggle .dropdown-open\:opacity-100{opacity:1}.dropdown.open>.dropdown-menu>.dropdown-open\:rotate-180{--tw-rotate:180deg;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.dropdown.open>.dropdown-menu>.dropdown-open\:opacity-100{opacity:1}.dropdown-menu.open.dropdown-open\:rotate-180{--tw-rotate:180deg;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.dropdown-menu.open.dropdown-open\:opacity-100{opacity:1}.collapse.open>.collapse-open\:rotate-180{--tw-rotate:180deg;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.collapse.open>.collapse-open\:bg-base-content\/10{background-color:var(--fallback-bc,oklch(var(--bc)/.1))}.collapse.open.collapse-open\:rotate-180{--tw-rotate:180deg;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.collapse.open.collapse-open\:bg-base-content\/10{background-color:var(--fallback-bc,oklch(var(--bc)/.1))}.collapse-toggle.open>.collapse-open\:rotate-180{--tw-rotate:180deg;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.collapse-toggle.open>.collapse-open\:bg-base-content\/10{background-color:var(--fallback-bc,oklch(var(--bc)/.1))}.collapse-toggle.open.collapse-open\:rotate-180{--tw-rotate:180deg;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.collapse-toggle.open.collapse-open\:bg-base-content\/10{background-color:var(--fallback-bc,oklch(var(--bc)/.1))}.open .overlay-open\:translate-x-0,.open.overlay-open\:translate-x-0{--tw-translate-x:0px;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.selected .combo-box-selected\:block,.selected.combo-box-selected\:block{display:block}@media not all and (min-width:1024px){.max-lg\:hidden{display:none}}@media (min-width:640px){.sm\:inline{display:inline}.sm\:hidden{display:none}.sm\:gap-4{gap:1rem}.sm\:rounded-lg{border-radius:.5rem}.sm\:p-4{padding:1rem}.sm\:p-6{padding:1.5rem}.sm\:px-4{padding-left:1rem;padding-right:1rem}}@media (min-width:768px){.md\:mb-0{margin-bottom:0}.md\:mb-4{margin-bottom:1rem}.md\:ml-10{margin-left:2.5rem}.md\:ml-16{margin-left:4rem}.md\:mr-10{margin-right:2.5rem}.md\:mr-16{margin-right:4rem}.md\:mt-6{margin-top:1.5rem}.md\:w-1\/2{width:50%}.md\:p-5{padding:1.25rem}.md\:px-10{padding-left:2.5rem;padding-right:2.5rem}}@media (min-width:1024px){.lg\:fixed{position:fixed}.lg\:bottom-0{bottom:0}.lg\:left-0{left:0}.lg\:left-64{left:16rem}.lg\:top-\[57px\]{top:57px}.lg\:z-40{z-index:40}.lg\:ml-64{margin-left:16rem}.lg\:flex{display:flex}.lg\:hidden{display:none}.lg\:w-\[calc\(100\%-16rem\)\]{width:calc(100% - 16rem)}.lg\:translate-x-0{--tw-translate-x:0px;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.lg\:px-12{padding-left:3rem;padding-right:3rem}.lg\:pl-64{padding-left:16rem}}.rtl\:\!mr-0:where([dir=rtl],[dir=rtl] *){margin-right:0!important}.rtl\:rotate-180:where([dir=rtl],[dir=rtl] *){--tw-rotate:180deg;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.rtl\:\[--placement\:bottom-end\]:where([dir=rtl],[dir=rtl] *){--placement:bottom-end}@media (prefers-color-scheme:dark){.dark\:border-slate-700{--tw-border-opacity:1;border-color:rgb(51 65 85/var(--tw-border-opacity,1))}.dark\:bg-gray-700{--tw-bg-opacity:1;background-color:rgb(55 65 81/var(--tw-bg-opacity,1))}.dark\:bg-gray-800{--tw-bg-opacity:1;background-color:rgb(31 41 55/var(--tw-bg-opacity,1))}.dark\:text-gray-300{--tw-text-opacity:1;color:rgb(209 213 219/var(--tw-text-opacity,1))}}.\[\&_\.nested-collapse-wrapper\]\:space-y-0\.5 .nested-collapse-wrapper>:not([hidden])~:not([hidden]),.\[\&_ul\]\:space-y-0\.5 ul>:not([hidden])~:not([hidden]){--tw-space-y-reverse:0;margin-top:calc(.125rem*(1 - var(--tw-space-y-reverse)));margin-bottom:calc(.125rem*var(--tw-space-y-reverse))}
\ No newline at end of file
+*,:after,:before{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: ;--tw-contain-size: ;--tw-contain-layout: ;--tw-contain-paint: ;--tw-contain-style: }::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-gradient-from-position: ;--tw-gradient-via-position: ;--tw-gradient-to-position: ;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: ;--tw-contain-size: ;--tw-contain-layout: ;--tw-contain-paint: ;--tw-contain-style: }/*! tailwindcss v3.4.17 | MIT License | https://tailwindcss.com*/*,:after,:before{box-sizing:border-box;border:0 solid #e5e7eb}:after,:before{--tw-content:""}:host,html{line-height:1.5;-webkit-text-size-adjust:100%;-moz-tab-size:4;-o-tab-size:4;tab-size:4;font-family:ui-sans-serif,system-ui,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;font-feature-settings:normal;font-variation-settings:normal;-webkit-tap-highlight-color:transparent}body{margin:0;line-height:inherit}hr{height:0;color:inherit;border-top-width:1px}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;font-feature-settings:normal;font-variation-settings:normal;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{text-indent:0;border-color:inherit;border-collapse:collapse}button,input,optgroup,select,textarea{font-family:inherit;font-feature-settings:inherit;font-variation-settings:inherit;font-size:100%;font-weight:inherit;line-height:inherit;letter-spacing:inherit;color:inherit;margin:0;padding:0}button,select{text-transform:none}button,input:where([type=button]),input:where([type=reset]),input:where([type=submit]){-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dd,dl,figure,h1,h2,h3,h4,h5,h6,hr,p,pre{margin:0}fieldset{margin:0}fieldset,legend{padding:0}menu,ol,ul{list-style:none;margin:0;padding:0}dialog{padding:0}textarea{resize:vertical}input::-moz-placeholder,textarea::-moz-placeholder{opacity:1;color:#9ca3af}input::placeholder,textarea::placeholder{opacity:1;color:#9ca3af}[role=button],button{cursor:pointer}:disabled{cursor:default}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{max-width:100%;height:auto}[hidden]:where(:not([hidden=until-found])){display:none}:root,[data-theme]{background-color:var(--fallback-b1,oklch(var(--b1)/1));color:var(--fallback-bc,oklch(var(--bc)/1))}@supports not (color:oklch(0 0 0)){:root{color-scheme:light;--fallback-p:#491eff;--fallback-pc:#d4dbff;--fallback-s:#ff41c7;--fallback-sc:#fff9fc;--fallback-a:#00cfbd;--fallback-ac:#00100d;--fallback-n:#2b3440;--fallback-nc:#d7dde4;--fallback-b1:#fff;--fallback-b2:#e5e6e6;--fallback-b3:#e5e6e6;--fallback-bc:#1f2937;--fallback-bs:#1f2937;--fallback-in:#00b3f0;--fallback-inc:#000;--fallback-su:#00ca92;--fallback-suc:#000;--fallback-wa:#ffc22d;--fallback-wac:#000;--fallback-er:#ff6f70;--fallback-erc:#000}@media (prefers-color-scheme:dark){:root{color-scheme:dark;--fallback-p:#7582ff;--fallback-pc:#050617;--fallback-s:#ff71cf;--fallback-sc:#190211;--fallback-a:#00c7b5;--fallback-ac:#000e0c;--fallback-n:#2a323c;--fallback-nc:#a6adbb;--fallback-b1:#1d232a;--fallback-b2:#191e24;--fallback-b3:#15191e;--fallback-bc:#a6adbb;--fallback-bs:#989eab;--fallback-in:#00b3f0;--fallback-inc:#000;--fallback-su:#00ca92;--fallback-suc:#000;--fallback-wa:#ffc22d;--fallback-wac:#000;--fallback-er:#ff6f70;--fallback-erc:#000}}}html{-webkit-tap-highlight-color:transparent}[class*="icon-[tabler--"]{display:inline-block;width:1rem;height:1rem;background-color:currentColor;-webkit-mask-image:var(--svg);mask-image:var(--svg);-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-size:100% 100%;mask-size:100% 100%}.icon-\[tabler--app-window\]{--svg:url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24'%3E%3Cpath fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M3 7a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2zm3 1h.01M9 8h.01'/%3E%3C/svg%3E")}.icon-\[tabler--brain\]{--svg:url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24'%3E%3Cg fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M15.5 13a3.5 3.5 0 0 0-3.5 3.5v1a3.5 3.5 0 0 0 7 0v-1.8M8.5 13a3.5 3.5 0 0 1 3.5 3.5v1a3.5 3.5 0 0 1-7 0v-1.8'/%3E%3Cpath d='M17.5 16a3.5 3.5 0 0 0 0-7H17'/%3E%3Cpath d='M19 9.3V6.5a3.5 3.5 0 0 0-7 0M6.5 16a3.5 3.5 0 0 1 0-7H7'/%3E%3Cpath d='M5 9.3V6.5a3.5 3.5 0 0 1 7 0v10'/%3E%3C/g%3E%3C/svg%3E")}.icon-\[tabler--check\]{--svg:url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24'%3E%3Cpath fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m5 12 5 5L20 7'/%3E%3C/svg%3E")}.icon-\[tabler--chevron-down\]{--svg:url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24'%3E%3Cpath fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m6 9 6 6 6-6'/%3E%3C/svg%3E")}.icon-\[tabler--chevron-left\]{--svg:url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24'%3E%3Cpath fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m15 6-6 6 6 6'/%3E%3C/svg%3E")}.icon-\[tabler--chevron-right\]{--svg:url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24'%3E%3Cpath fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m9 6 6 6-6 6'/%3E%3C/svg%3E")}.icon-\[tabler--chevrons-left\]{--svg:url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24'%3E%3Cpath fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m11 7-5 5 5 5m6-10-5 5 5 5'/%3E%3C/svg%3E")}.icon-\[tabler--chevrons-right\]{--svg:url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24'%3E%3Cpath fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m7 7 5 5-5 5m6-10 5 5-5 5'/%3E%3C/svg%3E")}.icon-\[tabler--clock\]{--svg:url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24'%3E%3Cg fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M3 12a9 9 0 1 0 18 0 9 9 0 0 0-18 0'/%3E%3Cpath d='M12 7v5l3 3'/%3E%3C/g%3E%3C/svg%3E")}.icon-\[tabler--dashboard\]{--svg:url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24'%3E%3Cg fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M10 13a2 2 0 1 0 4 0 2 2 0 1 0-4 0m3.45-1.45L15.5 9.5'/%3E%3Cpath d='M6.4 20a9 9 0 1 1 11.2 0z'/%3E%3C/g%3E%3C/svg%3E")}.icon-\[tabler--edit\]{--svg:url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24'%3E%3Cg fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M7 7H6a2 2 0 0 0-2 2v9a2 2 0 0 0 2 2h9a2 2 0 0 0 2-2v-1'/%3E%3Cpath d='M20.385 6.585a2.1 2.1 0 0 0-2.97-2.97L9 12v3h3zM16 5l3 3'/%3E%3C/g%3E%3C/svg%3E")}.icon-\[tabler--logout-2\]{--svg:url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24'%3E%3Cg fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M10 8V6a2 2 0 0 1 2-2h7a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2h-7a2 2 0 0 1-2-2v-2'/%3E%3Cpath d='M15 12H3l3-3m0 6-3-3'/%3E%3C/g%3E%3C/svg%3E")}.icon-\[tabler--menu-2\]{--svg:url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24'%3E%3Cpath fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 6h16M4 12h16M4 18h16'/%3E%3C/svg%3E")}.icon-\[tabler--message\]{--svg:url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24'%3E%3Cpath fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M8 9h8m-8 4h6m4-9a3 3 0 0 1 3 3v8a3 3 0 0 1-3 3h-5l-5 3v-3H6a3 3 0 0 1-3-3V7a3 3 0 0 1 3-3z'/%3E%3C/svg%3E")}.icon-\[tabler--plus\]{--svg:url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24'%3E%3Cpath fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M12 5v14m-7-7h14'/%3E%3C/svg%3E")}.icon-\[tabler--shield-lock\]{--svg:url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24'%3E%3Cg fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='M12 3a12 12 0 0 0 8.5 3A12 12 0 0 1 12 21 12 12 0 0 1 3.5 6 12 12 0 0 0 12 3'/%3E%3Cpath d='M11 11a1 1 0 1 0 2 0 1 1 0 1 0-2 0m1 1v2.5'/%3E%3C/g%3E%3C/svg%3E")}.icon-\[tabler--trash\]{--svg:url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24'%3E%3Cpath fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 7h16m-10 4v6m4-6v6M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2l1-12M9 7V4a1 1 0 0 1 1-1h4a1 1 0 0 1 1 1v3'/%3E%3C/svg%3E")}.icon-\[tabler--trending-down\]{--svg:url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24'%3E%3Cg fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='m3 7 6 6 4-4 8 8'/%3E%3Cpath d='M21 10v7h-7'/%3E%3C/g%3E%3C/svg%3E")}.icon-\[tabler--trending-up\]{--svg:url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24'%3E%3Cg fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'%3E%3Cpath d='m3 17 6-6 4 4 8-8'/%3E%3Cpath d='M14 7h7v7'/%3E%3C/g%3E%3C/svg%3E")}.icon-\[tabler--user\]{--svg:url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24'%3E%3Cpath fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M8 7a4 4 0 1 0 8 0 4 4 0 0 0-8 0M6 21v-2a4 4 0 0 1 4-4h4a4 4 0 0 1 4 4v2'/%3E%3C/svg%3E")}.icon-\[tabler--users\]{--svg:url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24'%3E%3Cpath fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M5 7a4 4 0 1 0 8 0 4 4 0 1 0-8 0M3 21v-2a4 4 0 0 1 4-4h4a4 4 0 0 1 4 4v2m1-17.87a4 4 0 0 1 0 7.75M21 21v-2a4 4 0 0 0-3-3.85'/%3E%3C/svg%3E")}:root{color-scheme:light;--rounded-box:0.5rem;--rounded-btn:0.375rem;--rounded-tooltip:0.25rem;--animation-btn:0.25s;--animation-input:.2s;--btn-focus-scale:0.95;--border-btn:1px;--tab-border:1px;--tab-radius:0.5rem;--p:57.5934% 0.247012 287.240256;--pc:93.7482% 0.032368 291.504163;--s:55.7871% 0.022138 301.905408;--sc:95.0453% 0.002858 308.427423;--a:62.3083% 0.188015 259.814527;--ac:93.1918% 0.031591 255.585479;--n:40.6559% 0.025056 282.210785;--nc:97.6419% 0.001323 286.375536;--b1:100% 0 0;--b2:94.7244% 0.005338 286.297402;--b3:88.6277% 0.008239 278.622785;--bc:37.567% 0.022158 281.800147;--bs:37.567% 0.022158 281.800147;--in:71.4837% 0.125737 215.220903;--inc:95.6262% 0.044329 203.387778;--su:73.1062% 0.216656 147.043973;--suc:96.444% 0.02867 172.082912;--wa:79.8713% 0.164239 73.09399;--wac:98.4165% 0.02418 94.061776;--er:65.3932% 0.222085 25.863858;--erc:97.5752% 0.015143 61.349242}@media (prefers-color-scheme:dark){:root{color-scheme:dark;--rounded-box:0.5rem;--rounded-btn:0.375rem;--rounded-tooltip:0.25rem;--animation-btn:0.25s;--animation-input:.2s;--btn-focus-scale:0.95;--border-btn:1px;--tab-border:1px;--tab-radius:0.5rem;--p:57.5934% 0.247012 287.240256;--pc:93.7482% 0.032368 291.504163;--s:55.7871% 0.022138 301.905408;--sc:100% 0 0;--a:62.3083% 0.188015 259.814527;--ac:93.1918% 0.031591 255.585479;--n:65.7482% 0.022235 294.952787;--nc:18.5128% 0.016696 301.919165;--b1:26.8442% 0.028285 299.769973;--b2:22.6865% 0.023344 295.952775;--b3:39.9632% 0.030791 300.243852;--bc:78.094% 0.014175 295.24394;--bs:18.5128% 0.016696 301.919165;--in:71.4837% 0.125737 215.220903;--inc:95.6262% 0.044329 203.387778;--su:73.1062% 0.216656 147.043973;--suc:96.444% 0.02867 172.082912;--wa:79.8713% 0.164239 73.09399;--wac:98.4165% 0.02418 94.061776;--er:65.3932% 0.222085 25.863858;--erc:97.5752% 0.015143 61.349242}}[data-theme=light]{color-scheme:light;--rounded-box:0.5rem;--rounded-btn:0.375rem;--rounded-tooltip:0.25rem;--animation-btn:0.25s;--animation-input:.2s;--btn-focus-scale:0.95;--border-btn:1px;--tab-border:1px;--tab-radius:0.5rem;--p:57.5934% 0.247012 287.240256;--pc:93.7482% 0.032368 291.504163;--s:55.7871% 0.022138 301.905408;--sc:95.0453% 0.002858 308.427423;--a:62.3083% 0.188015 259.814527;--ac:93.1918% 0.031591 255.585479;--n:40.6559% 0.025056 282.210785;--nc:97.6419% 0.001323 286.375536;--b1:100% 0 0;--b2:94.7244% 0.005338 286.297402;--b3:88.6277% 0.008239 278.622785;--bc:37.567% 0.022158 281.800147;--bs:37.567% 0.022158 281.800147;--in:71.4837% 0.125737 215.220903;--inc:95.6262% 0.044329 203.387778;--su:73.1062% 0.216656 147.043973;--suc:96.444% 0.02867 172.082912;--wa:79.8713% 0.164239 73.09399;--wac:98.4165% 0.02418 94.061776;--er:65.3932% 0.222085 25.863858;--erc:97.5752% 0.015143 61.349242}[data-theme=dark]{color-scheme:dark;--rounded-box:0.5rem;--rounded-btn:0.375rem;--rounded-tooltip:0.25rem;--animation-btn:0.25s;--animation-input:.2s;--btn-focus-scale:0.95;--border-btn:1px;--tab-border:1px;--tab-radius:0.5rem;--p:57.5934% 0.247012 287.240256;--pc:93.7482% 0.032368 291.504163;--s:55.7871% 0.022138 301.905408;--sc:100% 0 0;--a:62.3083% 0.188015 259.814527;--ac:93.1918% 0.031591 255.585479;--n:65.7482% 0.022235 294.952787;--nc:18.5128% 0.016696 301.919165;--b1:26.8442% 0.028285 299.769973;--b2:22.6865% 0.023344 295.952775;--b3:39.9632% 0.030791 300.243852;--bc:78.094% 0.014175 295.24394;--bs:18.5128% 0.016696 301.919165;--in:71.4837% 0.125737 215.220903;--inc:95.6262% 0.044329 203.387778;--su:73.1062% 0.216656 147.043973;--suc:96.444% 0.02867 172.082912;--wa:79.8713% 0.164239 73.09399;--wac:98.4165% 0.02418 94.061776;--er:65.3932% 0.222085 25.863858;--erc:97.5752% 0.015143 61.349242}[data-theme=gourmet]{color-scheme:light;--sc:91.1574% 0.004428 301.905408;--animation-btn:0.25s;--animation-input:.2s;--btn-focus-scale:0.95;--border-btn:1px;--tab-border:1px;font-family:Rubik,system-ui,sans-serif;--p:70.4871% 0.186721 47.604421;--pc:95.4204% 0.037154 75.164359;--s:55.7871% 0.022138 301.905408;--a:65.592% 0.211773 354.308441;--ac:94.8201% 0.027645 342.258493;--n:32.3845% 0.008993 67.502158;--nc:99.453% 0.001702 67.802975;--b1:99.453% 0.001702 67.802975;--b2:93.0967% 0.029776 59.291554;--b3:91.6072% 0.029032 57.355304;--bc:32.3845% 0.008993 67.502158;--bs:35.8367% 0.057512 54.314944;--in:68.4687% 0.147869 237.322518;--inc:95.1419% 0.025032 236.824184;--su:69.5873% 0.149074 162.479602;--suc:95.0457% 0.050741 163.050803;--wa:57.5934% 0.247012 287.240256;--wac:93.7482% 0.032368 291.504163;--er:65.3932% 0.222085 25.863858;--erc:97.5752% 0.015143 61.349242;--rounded-box:0.75rem;--rounded-btn:1.75rem;--rounded-tooltip:0.5rem;--tab-radius:0.75rem}:root{--motion-default-timing:cubic-bezier(.165,.84,.44,1);--motion-bounce:linear(0,0.004,0.016,0.035,0.063,0.098,0.141 13.6%,0.25,0.391,0.563,0.765,1,0.891 40.9%,0.848,0.813,0.785,0.766,0.754,0.75,0.754,0.766,0.785,0.813,0.848,0.891 68.2%,1 72.7%,0.973,0.953,0.941,0.938,0.941,0.953,0.973,1,0.988,0.984,0.988,1);--motion-spring-smooth:linear(0,0.001 0.44%,0.0045 0.94%,0.0195 2.03%,0.0446 3.19%,0.0811 4.5%,0.1598 6.82%,0.3685 12.34%,0.4693 15.17%,0.5663,0.6498 21.27%,0.7215 24.39%,0.7532 25.98%,0.7829 27.65%,0.8105,0.8349 31.14%,0.8573 32.95%,0.8776 34.84%,0.8964 36.87%,0.9136 39.05%,0.929 41.37%,0.9421 43.77%,0.9537 46.38%,0.9636 49.14%,0.9789 55.31%,0.9888 62.35%,0.9949 71.06%,0.9982 82.52%,0.9997 99.94%);--motion-spring-snappy:linear(0,0.0014,0.0053 1.02%,0.0126,0.0227 2.18%,0.0517 3.41%,0.094 4.79%,0.1865 7.26%,0.4182 12.77%,0.5246 15.46%,0.6249,0.7112,0.7831 23.95%,0.8146 25.4%,0.844,0.8699 28.45%,0.8935,0.9139 31.64%,0.932,0.9473,0.9601 36.65%,0.9714 38.47%,0.9808 40.35%,0.9948 44.49%,1.0031 49.43%,1.0057 53.35%,1.0063 58.14%,1.0014 80.78%,1.0001 99.94%);--motion-spring-bouncy:linear(0,0.0018,0.0069,0.0151 1.74%,0.0277 2.4%,0.062 3.7%,0.1115 5.15%,0.2211 7.77%,0.4778 13.21%,0.5912 15.75%,0.6987 18.44%,0.7862 20.98%,0.861 23.59%,0.8926,0.9205,0.945 27.51%,0.9671 28.89%,0.9868,1.003 31.79%,1.0224 34.11%,1.0358 36.58%,1.0436 39.27%,1.046 42.31%,1.0446 44.71%,1.0406 47.47%,1.0118 61.84%,1.0027 69.53%,0.9981 80.49%,0.9991 99.94%);--motion-spring-bouncier:linear(0,0.0023,0.0088,0.0194 1.59%,0.035 2.17%,0.078 3.33%,0.1415 4.64%,0.2054 5.75%,0.2821 6.95%,0.5912 11.45%,0.7205 13.43%,0.8393 15.45%,0.936 17.39%,0.9778,1.015,1.0477,1.0759,1.0998 22.22%,1.1203,1.1364,1.1484 25.26%,1.1586 26.61%,1.1629 28.06%,1.1613 29.56%,1.1537 31.2%,1.1434 32.6%,1.1288 34.19%,1.0508 41.29%,1.0174 44.87%,1.0025 46.89%,0.9911 48.87%,0.9826 50.9%,0.9769 53.03%,0.9735 56.02%,0.9748 59.45%,0.9964 72.64%,1.0031 79.69%,1.0042 86.83%,1.0008 99.97%);--motion-spring-bounciest:linear(0,0.0032,0.0131,0.0294,0.0524,0.0824,0.1192 1.54%,0.2134 2.11%,0.3102 2.59%,0.4297 3.13%,0.8732 4.95%,1.0373,1.1827 6.36%,1.2972 7.01%,1.3444,1.3859,1.4215,1.4504,1.4735,1.4908,1.5024,1.5084 9.5%,1.5091,1.5061,1.4993,1.4886,1.4745,1.4565 11.11%,1.4082 11.7%,1.3585 12.2%,1.295 12.77%,1.0623 14.64%,0.9773,0.9031 16.08%,0.8449 16.73%,0.8014,0.7701 17.95%,0.7587,0.7501,0.7443,0.7412 19.16%,0.7421 19.68%,0.7508 20.21%,0.7672 20.77%,0.7917 21.37%,0.8169 21.87%,0.8492 22.43%,0.9681 24.32%,1.0114,1.0492 25.75%,1.0789 26.41%,1.1008,1.1167,1.1271,1.1317 28.81%,1.1314,1.1271 29.87%,1.1189 30.43%,1.1063 31.03%,1.0769 32.11%,0.9941 34.72%,0.9748 35.43%,0.9597 36.09%,0.9487,0.9407,0.9355,0.933 38.46%,0.9344 39.38%,0.9421 40.38%,0.9566 41.5%,0.9989 44.12%,1.0161 45.37%,1.029 46.75%,1.0341 48.1%,1.0335 49.04%,1.0295 50.05%,1.0221 51.18%,0.992 55.02%,0.9854 56.38%,0.9827 57.72%,0.985 59.73%,1.004 64.67%,1.0088 67.34%,1.0076 69.42%,0.9981 74.28%,0.9956 76.85%,0.9961 79.06%,1.0023 86.46%,0.999 95.22%,0.9994 100%)}*{--motion-origin-scale-x:100%;--motion-origin-scale-y:100%;--motion-origin-translate-x:0%;--motion-origin-translate-y:0%;--motion-origin-rotate:0deg;--motion-origin-blur:0px;--motion-origin-grayscale:0%;--motion-origin-opacity:100%;--motion-origin-background-color: ;--motion-origin-text-color: ;--motion-end-scale-x:100%;--motion-end-scale-y:100%;--motion-end-translate-x:0%;--motion-end-translate-y:0%;--motion-end-rotate:0deg;--motion-end-blur:0px;--motion-end-grayscale:0%;--motion-end-opacity:100%;--motion-end-background-color: ;--motion-end-text-color: ;--motion-loop-scale-x:100%;--motion-loop-scale-y:100%;--motion-loop-translate-x:0%;--motion-loop-translate-y:0%;--motion-loop-rotate:0deg;--motion-loop-blur:0px;--motion-loop-grayscale:0%;--motion-loop-opacity:100%;--motion-loop-background-color: ;--motion-loop-text-color: ;--motion-duration:700ms;--motion-timing:var(--motion-default-timing);--motion-perceptual-duration-multiplier:1;--motion-delay:0ms;--motion-loop-count:infinite;--motion-scale-duration:var(--motion-duration);--motion-scale-timing:var(--motion-timing);--motion-scale-perceptual-duration-multiplier:var(--motion-perceptual-duration-multiplier);--motion-scale-delay:var(--motion-delay);--motion-scale-loop-count:var(--motion-loop-count);--motion-translate-duration:var(--motion-duration);--motion-translate-timing:var(--motion-timing);--motion-translate-perceptual-duration-multiplier:var(--motion-perceptual-duration-multiplier);--motion-translate-delay:var(--motion-delay);--motion-translate-loop-count:var(--motion-loop-count);--motion-rotate-duration:var(--motion-duration);--motion-rotate-timing:var(--motion-timing);--motion-rotate-perceptual-duration-multiplier:var(--motion-perceptual-duration-multiplier);--motion-rotate-delay:var(--motion-delay);--motion-rotate-loop-count:var(--motion-loop-count);--motion-filter-duration:var(--motion-duration);--motion-filter-timing:var(--motion-timing);--motion-filter-perceptual-duration-multiplier:var(--motion-perceptual-duration-multiplier);--motion-filter-delay:var(--motion-delay);--motion-filter-loop-count:var(--motion-loop-count);--motion-opacity-duration:var(--motion-duration);--motion-opacity-timing:var(--motion-timing);--motion-opacity-perceptual-duration-multiplier:var(--motion-perceptual-duration-multiplier);--motion-opacity-delay:var(--motion-delay);--motion-opacity-loop-count:var(--motion-loop-count);--motion-background-color-duration:var(--motion-duration);--motion-background-color-timing:var(--motion-timing);--motion-background-color-perceptual-duration-multiplier:var(--motion-perceptual-duration-multiplier);--motion-background-color-delay:var(--motion-delay);--motion-background-color-loop-count:var(--motion-loop-count);--motion-text-color-duration:var(--motion-duration);--motion-text-color-timing:var(--motion-timing);--motion-text-color-perceptual-duration-multiplier:var(--motion-perceptual-duration-multiplier);--motion-text-color-delay:var(--motion-delay);--motion-text-color-loop-count:var(--motion-loop-count);--motion-scale-in-animation:none;--motion-translate-in-animation:none;--motion-rotate-in-animation:none;--motion-filter-in-animation:none;--motion-opacity-in-animation:none;--motion-background-color-in-animation:none;--motion-text-color-in-animation:none;--motion-scale-out-animation:none;--motion-translate-out-animation:none;--motion-rotate-out-animation:none;--motion-filter-out-animation:none;--motion-opacity-out-animation:none;--motion-background-color-out-animation:none;--motion-text-color-out-animation:none;--motion-scale-loop-animation:none;--motion-translate-loop-animation:none;--motion-rotate-loop-animation:none;--motion-filter-loop-animation:none;--motion-opacity-loop-animation:none;--motion-background-color-loop-animation:none;--motion-text-color-loop-animation:none;--motion-all-enter-animations:var(--motion-scale-in-animation),var(--motion-translate-in-animation),var(--motion-rotate-in-animation),var(--motion-filter-in-animation),var(--motion-opacity-in-animation),var(--motion-background-color-in-animation),var(--motion-text-color-in-animation);--motion-all-exit-animations:var(--motion-scale-out-animation),var(--motion-translate-out-animation),var(--motion-rotate-out-animation),var(--motion-filter-out-animation),var(--motion-opacity-out-animation),var(--motion-background-color-out-animation),var(--motion-text-color-out-animation);--motion-all-loop-animations:var(--motion-scale-loop-animation),var(--motion-translate-loop-animation),var(--motion-rotate-loop-animation),var(--motion-filter-loop-animation),var(--motion-opacity-loop-animation),var(--motion-background-color-loop-animation),var(--motion-text-color-loop-animation);--motion-all-loop-and-enter-animations:var(--motion-all-loop-animations),var(--motion-all-enter-animations)}@media screen and (prefers-reduced-motion:no-preference){@keyframes motion-scale-in{0%{scale:var(--motion-origin-scale-x) var(--motion-origin-scale-y)}to{scale:1 1}}@keyframes motion-scale-out{0%{scale:1 1}to{scale:var(--motion-end-scale-x) var(--motion-end-scale-y)}}@keyframes motion-scale-loop-mirror{0%,to{scale:1 1}50%{scale:var(--motion-loop-scale-x) var(--motion-loop-scale-y)}}@keyframes motion-scale-loop-reset{0%{scale:1 1}to{scale:var(--motion-loop-scale-x) var(--motion-loop-scale-y)}}@keyframes motion-translate-in{0%{translate:var(--motion-origin-translate-x) var(--motion-origin-translate-y)}to{translate:0 0}}@keyframes motion-translate-out{0%{translate:0 0}to{translate:var(--motion-end-translate-x) var(--motion-end-translate-y)}}@keyframes motion-translate-loop-mirror{0%,to{translate:0 0}50%{translate:var(--motion-loop-translate-x) var(--motion-loop-translate-y)}}@keyframes motion-translate-loop-reset{0%{translate:0 0}to{translate:var(--motion-loop-translate-x) var(--motion-loop-translate-y)}}@keyframes motion-rotate-in{0%{rotate:var(--motion-origin-rotate)}to{rotate:0}}@keyframes motion-rotate-out{0%{rotate:0}to{rotate:var(--motion-end-rotate)}}@keyframes motion-rotate-loop-mirror{0%,to{rotate:0deg}50%{rotate:var(--motion-loop-rotate)}}@keyframes motion-rotate-loop-reset{to{rotate:var(--motion-loop-rotate)}}}@keyframes motion-filter-in{0%{filter:blur(var(--motion-origin-blur)) grayscale(var(--motion-origin-grayscale))}to{filter:blur(0) grayscale(0)}}@keyframes motion-filter-out{0%{filter:blur(0) grayscale(0)}to{filter:blur(var(--motion-end-blur)) grayscale(var(--motion-end-grayscale))}}@keyframes motion-filter-loop-mirror{0%,to{filter:blur(0) grayscale(0)}50%{filter:blur(var(--motion-loop-blur)) grayscale(var(--motion-loop-grayscale))}}@keyframes motion-filter-loop-reset{0%{filter:blur(0) grayscale(0)}to{filter:blur(var(--motion-loop-blur)) grayscale(var(--motion-loop-grayscale))}}@keyframes motion-opacity-in{0%{opacity:var(--motion-origin-opacity)}}@keyframes motion-opacity-out{to{opacity:var(--motion-end-opacity)}}@keyframes motion-opacity-loop-mirror{50%{opacity:var(--motion-loop-opacity)}}@keyframes motion-opacity-loop-reset{to{opacity:var(--motion-loop-opacity)}}@keyframes motion-background-color-in{0%{background-color:var(--motion-origin-background-color)}}@keyframes motion-background-color-out{to{background-color:var(--motion-end-background-color)}}@keyframes motion-background-color-loop-mirror{50%{background-color:var(--motion-loop-background-color)}}@keyframes motion-background-color-loop-reset{to{background-color:var(--motion-loop-background-color)}}@keyframes motion-text-color-in{0%{color:var(--motion-origin-text-color)}}@keyframes motion-text-color-out{to{color:var(--motion-end-text-color)}}@keyframes motion-text-color-loop-mirror{50%{color:var(--motion-loop-text-color)}}@keyframes motion-text-color-loop-reset{to{color:var(--motion-loop-text-color)}}.container{width:100%}@media (min-width:640px){.container{max-width:640px}}@media (min-width:768px){.container{max-width:768px}}@media (min-width:1024px){.container{max-width:1024px}}@media (min-width:1280px){.container{max-width:1280px}}@media (min-width:1536px){.container{max-width:1536px}}.advance-select-option{cursor:pointer;padding:.625rem 1rem;border-radius:var(--rounded-btn,.375rem);font-weight:400;--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)))}.advance-select-option,.alert{width:100%;font-size:1rem;line-height:1.375rem}.alert{position:relative;padding:1rem;border-radius:var(--rounded-box,.5rem);--tw-bg-opacity:1;background-color:var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity,1)));color:var(--fallback-bc,oklch(var(--bc)/.8))}.avatar{position:relative;display:inline-flex;font-size:1rem;line-height:1.375rem}.avatar>div{display:block;aspect-ratio:1/1;overflow:hidden}.avatar img{height:100%;width:100%;-o-object-fit:cover;object-fit:cover}.avatar.placeholder>div{display:flex;align-items:center;justify-content:center}.pull-up .avatar{transition-property:all;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-timing-function:cubic-bezier(.4,0,1,1);transition-duration:.15s;transition-duration:.25s}.pull-up .avatar:hover{z-index:30;--tw-translate-y:-0.25rem;--tw-scale-x:1.02;--tw-scale-y:1.02;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));border-radius:9999px;--tw-shadow:0 2px 4px 0 var(--fallback-bs,oklch(var(--bs)/0.26));--tw-shadow-colored:0 2px 4px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.badge{height:1.5rem;gap:.375rem;padding-left:.75rem;padding-right:.75rem;text-align:center;font-size:.875rem;line-height:1.25rem;font-weight:400;width:-moz-fit-content;width:fit-content;--tw-bg-opacity:1;background-color:var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity,1)))}.badge,.btn{display:inline-flex;align-items:center;justify-content:center;border-radius:var(--rounded-btn,.375rem);--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)))}.btn{height:2.375rem;min-height:2.375rem;flex-shrink:0;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;user-select:none;flex-wrap:wrap;padding-left:1rem;padding-right:1rem;font-size:1rem;line-height:1.375rem;font-weight:500;gap:.5rem;border-color:currentColor;border-color:oklch(var(--btn-color,var(--b2))/var(--tw-border-opacity));text-decoration-line:none;transition-duration:.2s;transition-timing-function:cubic-bezier(0,0,.2,1);border-width:var(--border-btn,1px);transition-property:color,background-color,border-color,opacity,box-shadow,transform;--tw-shadow:0 2px 4px 0 var(--fallback-bs,oklch(var(--bs)/0.26));--tw-shadow-colored:0 2px 4px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);outline-color:var(--fallback-bc,oklch(var(--bc)/1));background-color:oklch(var(--btn-color,var(--b2))/var(--tw-bg-opacity));--tw-bg-opacity:1;--tw-border-opacity:1}.btn-disabled,.btn:disabled,.btn[disabled]{pointer-events:none}.btn-circle{height:2.375rem;width:2.375rem;border-radius:9999px;padding:0}:where(.btn:is(input[type=checkbox])),:where(.btn:is(input[type=radio])){width:auto;-webkit-appearance:none;-moz-appearance:none;appearance:none}.btn:is(input[type=checkbox]):after,.btn:is(input[type=radio]):after{--tw-content:attr(aria-label);content:var(--tw-content)}.card{position:relative;display:flex;flex-direction:column;border-radius:var(--rounded-box,.5rem);border-color:var(--fallback-bc,oklch(var(--bc)/.4));--tw-bg-opacity:1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)));color:var(--fallback-bc,oklch(var(--bc)/.8));box-shadow:var(--card-shadow,0 2px 4px 0 oklch(var(--bs)/.26));border-width:var(--card-border,0)}.card:focus{outline:2px solid transparent;outline-offset:2px}.card-body{display:flex;flex:1 1 auto;flex-direction:column;font-size:1rem;line-height:1.375rem;font-weight:400;padding:var(--padding-card,1.5rem)}.card-actions{display:flex;flex-wrap:wrap;align-items:flex-start;gap:.75rem}.card-title{font-size:1.5rem;line-height:2rem;font-weight:600;--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)))}.card figure{display:flex;align-items:center;justify-content:center}.card.image-full{display:grid}.card.image-full:before{position:relative;content:"";z-index:10;border-radius:var(--rounded-box,.5rem);background-image:linear-gradient(0deg,rgba(0,0,0,.58),rgba(0,0,0,.58))}.card.image-full:before,.card.image-full>*{grid-column-start:1;grid-row-start:1}.card.image-full>figure img{height:100%;-o-object-fit:cover;object-fit:cover}.card.image-full>.card-body{position:relative;z-index:20;--tw-text-opacity:1;color:var(--fallback-nc,oklch(var(--nc)/var(--tw-text-opacity,1)))}:where(.card figure>*){width:100%}.card-group>.card{flex:1 0 0%;border-radius:0;--card-shadow:none;--card-border:0}.carousel{position:relative;width:100%;overflow:hidden;border-radius:1rem}.carousel-body{display:flex;flex-wrap:nowrap}.carousel-next,.carousel-prev{position:absolute;top:0;bottom:0;display:inline-flex;height:100%;width:10%;align-items:center;justify-content:center;color:var(--fallback-bc,oklch(var(--bc)/.8))}@media not all and (min-width:640px){.carousel-next,.carousel-prev{width:18%}}.carousel-prev{inset-inline-start:0;border-start-start-radius:1rem;border-end-start-radius:1rem}.carousel-next{inset-inline-end:0;border-start-end-radius:1rem;border-end-end-radius:1rem}.active .carousel-box,.active .carousel-dot,.active.carousel-box,.active.carousel-dot{--tw-bg-opacity:1;background-color:var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity,1)))}.chat{display:grid;grid-template-columns:repeat(2,minmax(0,1fr));-moz-column-gap:1rem;column-gap:1rem;padding-top:.25rem;padding-bottom:.25rem}.checkbox{flex-shrink:0;--chkbg:var(--fallback-n,oklch(var(--n)/1));--chkfg:var(--fallback-nc,oklch(var(--nc)/1));position:relative;width:1.5rem;height:1.5rem;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;border-radius:var(--rounded-btn,.375rem);border-width:1.5px;border-color:var(--fallback-bc,oklch(var(--bc)/.4));--tw-bg-opacity:1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)))}.collapse:not(td):not(tr):not(colgroup){visibility:visible}.diff{position:relative;display:grid;width:100%;overflow:hidden;container-type:inline-size;grid-template-columns:auto 1fr}.drawer{position:fixed;z-index:80;display:flex;width:100%;height:100%;max-width:24rem;flex-direction:column;justify-content:space-between;--tw-bg-opacity:1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)));--tw-shadow:0 4px 6px -1px var(--fallback-bs,oklch(var(--bs)/0.2));--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.drawer-body{flex-grow:1;overflow-y:auto;padding-left:1.5rem;padding-right:1.5rem;font-size:1rem;line-height:1.375rem;overflow-x:hidden}.drawer-body::-webkit-scrollbar{width:.5rem}.drawer-body:last-child{padding-bottom:1.5rem}.dropdown-menu{z-index:10;margin-top:.5rem;text-wrap:nowrap;padding:.5rem;font-size:1rem;line-height:1.375rem;opacity:0;transition-property:opacity,margin;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.3s;border-radius:var(--rounded-box,.5rem);--tw-bg-opacity:1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)));--tw-shadow:0 10px 15px -2px var(--fallback-bs,oklch(var(--bs)/0.34));--tw-shadow-colored:0 10px 15px -2px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.dropdown-item{clear:both;width:100%;-moz-column-gap:.5rem;column-gap:.5rem;text-align:inherit;border-radius:var(--rounded-btn,.375rem);background-color:transparent;--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)));text-decoration-line:none;text-decoration-thickness:0}.dropdown-footer,.dropdown-header,.dropdown-item{display:flex;align-items:center;padding:.625rem 1rem}.dropdown-footer,.dropdown-header{position:static;border-color:var(--fallback-bc,oklch(var(--bc)/.1));color:var(--fallback-bc,oklch(var(--bc)/.8))}.dropdown-header{margin:-.5rem -.5rem .5rem;border-top-left-radius:var(--rounded-box,.5rem);border-top-right-radius:var(--rounded-box,.5rem);border-bottom-width:1px}.label:where(:not(.label-text)){display:flex;align-items:center;justify-content:space-between}.input{height:2.375rem;width:100%;flex-shrink:1;-webkit-appearance:none;-moz-appearance:none;appearance:none;padding-left:.75rem;padding-right:.75rem;font-size:1rem;line-height:1.375rem;font-weight:400;border-radius:var(--rounded-btn,.375rem);border-width:1px;border-color:var(--fallback-bc,oklch(var(--bc)/.4));--tw-bg-opacity:1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)));color:var(--fallback-bc,oklch(var(--bc)/.8));transition:border-color .15s ease-in-out,box-shadow .15s ease-in-out}.input::file-selector-button{margin-inline-end:1rem;display:inline-flex;height:100%;flex-shrink:0;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;user-select:none;flex-wrap:wrap;align-items:center;justify-content:center;padding-left:1rem;padding-right:1rem;text-align:center;font-size:.875rem;line-height:1.25rem;line-height:1em;border-start-start-radius:var(--rounded-btn,.375rem);border-end-start-radius:var(--rounded-btn,.375rem);border-width:0;background-color:var(--fallback-bc,oklch(var(--bc)/.2));font-weight:600;text-transform:uppercase;--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)));text-decoration-line:none}.input[type=number]::-webkit-inner-spin-button{margin-top:-.25rem;margin-bottom:-.25rem;margin-inline-end:-.25rem}.input[type=file]{padding-left:0;padding-right:0}.join{display:inline-flex;align-items:stretch;border-radius:var(--rounded-btn,.375rem)}.join :where(.join-item){border-start-end-radius:0;border-end-end-radius:0;border-end-start-radius:0;border-start-start-radius:0}.join .join-item:not(:first-child):not(:last-child),.join :not(:first-child):not(:last-child) .join-item{border-start-end-radius:0;border-end-end-radius:0;border-end-start-radius:0;border-start-start-radius:0}.join :first-child:not(:last-child) .join-item,.join>.join-item:first-child:not(:last-child){border-start-end-radius:0;border-end-end-radius:0}.join :where(:first-child:not(:last-child) .join-item),.join>:where(.join-item:first-child:not(:last-child)){border-end-start-radius:inherit;border-start-start-radius:inherit}.join :last-child:not(:first-child) .join-item,.join>.join-item:last-child:not(:first-child){border-end-start-radius:0;border-start-start-radius:0}.join :where(:last-child:not(:first-child) .join-item),.join>:where(.join-item:last-child:not(:first-child)){border-start-end-radius:inherit;border-end-end-radius:inherit}@supports not selector(:has(*)){:where(.join *){border-radius:inherit}}@supports selector(:has(*)){:where(.join :has(.join-item)){border-radius:inherit}}.link{display:inline-block;cursor:pointer;text-decoration-line:underline}.link-hover{text-decoration-line:none}@media (hover:hover){.link-hover:hover{text-decoration-line:underline}.label a:hover{--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)))}.menu li:not(.disabled,:disabled,[disabled])>:not(ul,.menu-title,.collapse,.btn).active,.menu li:not(.disabled,:disabled,[disabled])>:not(ul,.menu-title,.collapse,.btn):active{background-color:var(--fallback-p,oklch(var(--p)/.1));--tw-text-opacity:1;color:var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity,1)))}.radio.is-valid:hover,.validate .radio:valid:hover{--tw-border-opacity:1!important;border-color:var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity,1)))!important}.radio.is-invalid:hover,.validate .radio:invalid:hover{--tw-border-opacity:1!important;border-color:var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity,1)))!important}.radio-inset.is-valid:hover,.validate .radio-inset:valid:hover{--tw-border-opacity:1!important;border-color:var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity,1)))!important}.radio-inset.is-invalid:hover,.validate .radio-inset:invalid:hover{--tw-border-opacity:1!important;border-color:var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity,1)))!important}.tabs-bordered>.tab:hover,.tabs-lifted>.tab:hover{border-color:var(--fallback-p,oklch(var(--p)/.3));--tw-text-opacity:1;color:var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity,1)))}.table tr.hover:hover,.table tr.hover:nth-child(2n):hover,.table-striped tr.hover,.table-striped tr.hover:nth-child(2n){background-color:var(--fallback-bc,oklch(var(--bc)/.05))}}.menu{display:flex;flex-direction:column;flex-wrap:wrap;gap:.125rem;border-radius:var(--rounded-box,.5rem);--tw-bg-opacity:1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)));padding:.5rem}.menu :where(li ul){position:relative;white-space:nowrap}.menu :where(li:not(.menu-title)>:not(ul,.collapse,.menu-title,.btn)){display:grid;grid-auto-flow:column;align-content:flex-start;align-items:center;gap:.5rem;grid-auto-columns:minmax(auto,max-content) auto max-content;-webkit-user-select:none;-moz-user-select:none;user-select:none}.menu :where(li>.menu-dropdown:not(.menu-dropdown-show)){display:none}:where(.menu li){position:relative;display:flex;flex-shrink:0;flex-direction:column;flex-wrap:wrap;align-items:stretch}:where(.menu li) .badge{justify-self:end}.modal{pointer-events:none;position:fixed;inset:0;z-index:80;margin:0;display:grid;width:100%;height:100%;justify-items:center;padding:1rem;opacity:0;transition-property:all;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.navbar{display:flex;align-items:center;padding:var(--navbar-padding,.75rem 1.5rem);width:100%;--tw-bg-opacity:1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)))}.navbar-start{display:flex;width:50%;justify-content:flex-start}.navbar-end{display:flex;width:50%;justify-content:flex-end}.pin-input{width:2.375rem;height:2.375rem;text-align:center;font-size:1rem;line-height:1.375rem;border-radius:var(--rounded-btn,.375rem);border-width:1px;border-color:var(--fallback-bc,oklch(var(--bc)/.25));--tw-bg-opacity:1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)));transition:border-color .15s ease-in-out,box-shadow .15s ease-in-out}.progress{height:.375rem;width:100%;--progress-color:var(--fallback-n,oklch(var(--n)/1));background-color:var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity,1)))}.progress,.progress-bar{display:flex;overflow:hidden;border-radius:9999px;--tw-bg-opacity:1}.progress-bar{align-items:center;justify-content:center;white-space:nowrap;font-size:.75rem;line-height:1rem;font-weight:500;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,-webkit-backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter,-webkit-backdrop-filter;transition-duration:.5s;transition-timing-function:cubic-bezier(.4,0,.2,1);background-color:var(--fallback-bc,oklch(var(--bc)/var(--tw-bg-opacity,1)));--tw-text-opacity:1;color:var(--fallback-b1,oklch(var(--b1)/var(--tw-text-opacity,1)))}.range{height:.5rem;width:100%;-moz-appearance:none;appearance:none;-webkit-appearance:none;--range-shdw:var(--fallback-bc,oklch(var(--bc)/1));position:relative;border-radius:9999px;background-color:transparent;transition-property:all;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.range:focus{outline:none}.select{display:inline-flex;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;user-select:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;height:2.375rem;width:100%;padding-left:.75rem;padding-right:.75rem;font-size:1rem;line-height:2;line-height:1.375rem;border-radius:var(--rounded-btn,.375rem);border-width:1px;border-color:var(--fallback-bc,oklch(var(--bc)/.4));--tw-bg-opacity:1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)));color:var(--fallback-bc,oklch(var(--bc)/.8));background-image:url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='1em' height='1em' viewBox='0 0 24 24'><path fill='none' stroke='%239293AE' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m6 9l6 6l6-6'/></svg>");background-size:1.3em;background-position:calc(100% - 1rem);background-repeat:no-repeat}.select[multiple]{height:auto}.select.select-floating.select-lg .select-floating-label{margin-inline-start:.75rem}.select.select-floating.select-lg .select-filled-label{margin-inline-start:1rem}.switch{flex-shrink:0;--tglbg:var(--fallback-b3,oklch(var(--b3)/1));--handleoffset:1.35rem;--handleoffsetcalculator:calc(var(--handleoffset)*-1);--switchhandleborder:0 0;height:1.5rem;width:2.875rem;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;overflow:hidden;border-radius:9999px;background-color:var(--fallback-b1,oklch(var(--b1)/1));transition:background,box-shadow var(--animation-input,.2s) ease-out;box-shadow:var(--handleoffsetcalculator) 0 0 4px var(--tglbg) inset,0 0 0 4px var(--tglbg) inset,var(--switchhandleborder)}.tabs{display:flex;align-items:flex-end}.tabs-lifted:has(.tab-content[class*=" rounded-"]) .tab:first-child:not(.tab-active),.tabs-lifted:has(.tab-content[class^=rounded-]) .tab:first-child:not(.tab-active){border-bottom-color:transparent}.tab{display:inline-flex;height:2.375rem;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;user-select:none;-webkit-appearance:none;-moz-appearance:none;appearance:none;align-items:center;justify-content:center;text-align:center;font-size:1rem;line-height:1.375rem;--tab-padding:1rem;--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)));--tab-bg:var(--fallback-b1,oklch(var(--b1)/1));--tab-border-color:var(--fallback-bc,oklch(var(--bc)/0.1));padding-inline-start:var(--tab-padding,1rem);padding-inline-end:var(--tab-padding,1rem)}.tab,.table{position:relative}.table{width:100%;border-radius:var(--rounded-box,.5rem);text-align:left;font-size:.875rem;line-height:1.25rem;overflow-y:auto;overflow-x:hidden}.table :where(.table-pin-rows thead tr){position:sticky;top:0;z-index:1;--tw-bg-opacity:1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)))}.table :where(.table-pin-rows tfoot tr){position:sticky;bottom:0;z-index:1;--tw-bg-opacity:1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)))}.table :where(.table-pin-cols tr th){position:sticky;inset-inline-end:0;inset-inline-start:0;--tw-bg-opacity:1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)))}.textarea{display:block;min-height:5rem;width:100%;flex-shrink:1;resize:none;padding:.5rem 1rem;font-size:1rem;line-height:1.375rem;border-radius:var(--rounded-box,.5rem);border-width:1px;border-color:var(--fallback-bc,oklch(var(--bc)/.4));color:var(--fallback-bc,oklch(var(--bc)/.8));overflow-y:auto;overflow-x:hidden}.tooltip{display:inline-block;text-align:center}.tooltip-content{visibility:hidden;position:absolute;display:inline-block;padding:.5rem;opacity:0;width:-moz-max-content;width:max-content;z-index:20;transition-property:opacity;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.accordion-toggle{width:100%;cursor:pointer;padding:1rem 1.25rem;font-size:1.125rem;line-height:1.5rem;font-weight:500;--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)))}.accordion-toggle:disabled{pointer-events:none;opacity:.5}.accordion-shadow :where(.accordion-item){margin-top:.5rem;margin-bottom:.5rem;border-radius:var(--rounded-box,.5rem);--tw-bg-opacity:1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)));--tw-shadow:0 4px 6px -1px var(--fallback-bs,oklch(var(--bs)/0.2));--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.accordion-shadow :where(.accordion-item) .accordion-item:first-of-type{margin-top:0}.accordion-shadow :where(.accordion-item) .accordion-item:last-of-type{margin-bottom:0}.accordion-shadow :where(.accordion-item)>:first-child{border-top-left-radius:var(--rounded-box,.5rem);border-top-right-radius:var(--rounded-box,.5rem)}.accordion-shadow :where(.accordion-item)>:last-child{border-bottom-right-radius:var(--rounded-box,.5rem);border-bottom-left-radius:var(--rounded-box,.5rem)}.accordion:where(.accordion-bordered)>:not([hidden])~:not([hidden]){--tw-divide-y-reverse:0;border-top-width:calc(1px*(1 - var(--tw-divide-y-reverse)));border-bottom-width:calc(1px*var(--tw-divide-y-reverse));border-color:var(--fallback-bc,oklch(var(--bc)/.25))}.accordion:where(.accordion-bordered){border-radius:var(--rounded-box,.5rem);border-width:1px;border-color:var(--fallback-bc,oklch(var(--bc)/.25));--tw-bg-opacity:1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)))}.disabled .advance-select-toggle,.disabled.advance-select-toggle{pointer-events:none;border-width:0;background-color:var(--fallback-n,oklch(var(--n)/.1));padding-top:.5rem;padding-bottom:.5rem;color:var(--fallback-n,oklch(var(--n)/.5))}.advance-select-option:focus,.advance-select-option:hover{background-color:var(--fallback-n,oklch(var(--n)/.1))}.advance-select-option:focus{outline:2px solid transparent;outline-offset:2px}.advance-select-option.active,.advance-select-option:active{background-color:var(--fallback-p,oklch(var(--p)/.1));--tw-text-opacity:1;color:var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity,1)))}.advance-select-tag:has(>.is-valid),.validate select:has(~*>.selected)+.advance-select-toggle,select.is-valid+.advance-select-toggle{--tw-border-opacity:1;border-color:var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity,1)))}.advance-select-tag:has(>.is-valid):focus,.advance-select-tag:has(>.is-valid):focus-within,.validate select:has(~*>.selected)+.advance-select-toggle:focus,.validate select:has(~*>.selected)+.advance-select-toggle:focus-within,select.is-valid+.advance-select-toggle:focus,select.is-valid+.advance-select-toggle:focus-within{--tw-border-opacity:1;border-color:var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity,1)));--tw-shadow:0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));--tw-shadow:var(--tw-shadow-colored);--tw-shadow-colored:0 1px 2px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);--tw-shadow-color:var(--fallback-su,oklch(var(--su)/0.22));--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);--tw-ring-opacity:1;--tw-ring-color:var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity,1)))}.advance-select-tag:has(>.is-invalid),.validate select:not(:has(~*>.selected))+.advance-select-toggle,select.is-invalid+.advance-select-toggle{--tw-border-opacity:1;border-color:var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity,1)))}.advance-select-tag:has(>.is-invalid):focus,.advance-select-tag:has(>.is-invalid):focus-within,.validate select:not(:has(~*>.selected))+.advance-select-toggle:focus,.validate select:not(:has(~*>.selected))+.advance-select-toggle:focus-within,select.is-invalid+.advance-select-toggle:focus,select.is-invalid+.advance-select-toggle:focus-within{--tw-border-opacity:1;border-color:var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity,1)));--tw-shadow:0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));--tw-shadow:var(--tw-shadow-colored);--tw-shadow-colored:0 1px 2px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);--tw-shadow-color:var(--fallback-er,oklch(var(--er)/0.22));--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);--tw-ring-opacity:1;--tw-ring-color:var(--fallback-er,oklch(var(--er)/var(--tw-ring-opacity,1)))}.validate .advance-select:has(>select:valid)~.label,.validate .advance-select:has(>select:valid)~.label .label-text,.validate .advance-select:has(>select:valid)~.label-text,.validate .label-text:has(~.advance-select>select:valid),.validate .label:has(~.advance-select>select:valid)>*{--tw-text-opacity:1;color:var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity,1)))}.validate .advance-select:has(>select:invalid)~.label,.validate .advance-select:has(>select:invalid)~.label .label-text,.validate .advance-select:has(>select:invalid)~.label-text,.validate .label-text:has(~*>select:invalid),.validate .label:has(~*>select:invalid)>*{--tw-text-opacity:1;color:var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity,1)))}.validate .advance-select:has(>select:valid)~*>.success-message,.validate .advance-select:has(>select:valid)~.success-message,.validate .label~:has(>select:valid)~*>.success-message{display:block}.validate .advance-select:has(>select:invalid)~*>.error-message,.validate .advance-select:has(>select:invalid)~.error-message,.validate .label~:has(>select:invalid)~*>.error-message{display:block}.alert-error{--tw-bg-opacity:1;background-color:var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity,1)));--tw-text-opacity:1;color:var(--fallback-erc,oklch(var(--erc)/var(--tw-text-opacity,1)))}.alert-soft.alert-error{background-color:var(--fallback-er,oklch(var(--er)/.2))}.alert-outline.alert-error,.alert-soft.alert-error{--tw-text-opacity:1;color:var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity,1)))}.avatar-group :where(.avatar) img{height:100%;width:100%;border-radius:9999px;border-width:2px;--tw-border-opacity:1;border-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-border-opacity,1)));-o-object-fit:cover;object-fit:cover}.avatar-group :where(.avatar).placeholder>div{border-radius:9999px;border-width:2px;--tw-border-opacity:1;border-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-border-opacity,1)))}.badge-primary{background-color:var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity,1)));color:var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity,1)))}.badge-primary,.badge-secondary{--tw-bg-opacity:1;--tw-text-opacity:1}.badge-secondary{background-color:var(--fallback-s,oklch(var(--s)/var(--tw-bg-opacity,1)));color:var(--fallback-sc,oklch(var(--sc)/var(--tw-text-opacity,1)))}.badge-soft.badge-primary{background-color:var(--fallback-p,oklch(var(--p)/.2));--tw-text-opacity:1;color:var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity,1)))}.badge-soft.badge-secondary{background-color:var(--fallback-s,oklch(var(--s)/.2));--tw-text-opacity:1;color:var(--fallback-s,oklch(var(--s)/var(--tw-text-opacity,1)))}.badge-outline{border-width:1px;border-color:currentColor;background-color:transparent}.badge-outline.badge-neutral{--tw-text-opacity:1;color:var(--fallback-n,oklch(var(--n)/var(--tw-text-opacity,1)))}.badge-outline.badge-primary{--tw-text-opacity:1;color:var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity,1)))}.badge-outline.badge-secondary{--tw-text-opacity:1;color:var(--fallback-s,oklch(var(--s)/var(--tw-text-opacity,1)))}.badge-outline.badge-accent{--tw-text-opacity:1;color:var(--fallback-a,oklch(var(--a)/var(--tw-text-opacity,1)))}.badge-outline.badge-info{--tw-text-opacity:1;color:var(--fallback-in,oklch(var(--in)/var(--tw-text-opacity,1)))}.badge-outline.badge-success{--tw-text-opacity:1;color:var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity,1)))}.badge-outline.badge-warning{--tw-text-opacity:1;color:var(--fallback-wa,oklch(var(--wa)/var(--tw-text-opacity,1)))}.badge-outline.badge-error{--tw-text-opacity:1;color:var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity,1)))}@media (prefers-reduced-motion:no-preference){.btn{animation:button-pop var(--animation-btn,.25s) ease-out}}.btn:active:focus,.btn:active:hover{animation:button-pop 0s ease-out;transform:scale(var(--btn-focus-scale,.97))}@supports not (color:oklch(0% 0 0)){.btn{background-color:var(--btn-color,var(--fallback-b2));border-color:var(--btn-color,var(--fallback-b2))}.btn:focus-visible{background-color:var(--btn-color,var(--fallback-b2));border-color:var(--btn-color,var(--fallback-b2))}.btn-primary{--btn-color:var(--fallback-p)}.btn-error{--btn-color:var(--fallback-er)}}@media (hover:hover){.btn:hover{--tw-shadow:0 4px 6px -1px var(--fallback-bs,oklch(var(--bs)/0.2));--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}@supports (color:color-mix(in oklab,black,black)){.btn:hover{background-color:color-mix(in oklab,oklch(var(--btn-color,var(--b2))/var(--tw-bg-opacity,1)) 90%,#000);border-color:color-mix(in oklab,oklch(var(--btn-color,var(--b2))/var(--tw-border-opacity,1)) 90%,#000)}}@supports not (color:oklch(0% 0 0)){.btn:hover{background-color:var(--btn-color,var(--fallback-b2));border-color:var(--btn-color,var(--fallback-b2))}}.btn.glass:hover{--glass-opacity:25%;--glass-border-opacity:15%}.btn-soft:hover{background-color:var(--fallback-n,oklch(var(--n)/.3))}.btn-soft.btn-primary:hover{background-color:var(--fallback-p,oklch(var(--p)/.3))}.btn-soft.btn-secondary:hover{background-color:var(--fallback-s,oklch(var(--s)/.3))}.btn-soft.btn-accent:hover{background-color:var(--fallback-a,oklch(var(--a)/.3))}.btn-soft.btn-success:hover{background-color:var(--fallback-su,oklch(var(--su)/.3))}.btn-soft.btn-info:hover{background-color:var(--fallback-in,oklch(var(--in)/.3))}.btn-soft.btn-warning:hover{background-color:var(--fallback-wa,oklch(var(--wa)/.3))}.btn-soft.btn-error:hover{background-color:var(--fallback-er,oklch(var(--er)/.3))}.btn-outline:hover{--tw-border-opacity:1;border-color:var(--fallback-bc,oklch(var(--bc)/var(--tw-border-opacity,1)));background-color:var(--fallback-bc,oklch(var(--bc)/.1))}.btn-outline.btn-primary:hover{--tw-border-opacity:1;border-color:var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity,1)));background-color:var(--fallback-p,oklch(var(--p)/.1))}.btn-outline.btn-secondary:hover{--tw-border-opacity:1;border-color:var(--fallback-s,oklch(var(--s)/var(--tw-border-opacity,1)));background-color:var(--fallback-s,oklch(var(--s)/.1))}.btn-outline.btn-accent:hover{--tw-border-opacity:1;border-color:var(--fallback-a,oklch(var(--a)/var(--tw-border-opacity,1)));background-color:var(--fallback-a,oklch(var(--a)/.1))}.btn-outline.btn-success:hover{--tw-border-opacity:1;border-color:var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity,1)));background-color:var(--fallback-su,oklch(var(--su)/.1))}.btn-outline.btn-info:hover{--tw-border-opacity:1;border-color:var(--fallback-in,oklch(var(--in)/var(--tw-border-opacity,1)));background-color:var(--fallback-in,oklch(var(--in)/.1))}.btn-outline.btn-warning:hover{--tw-border-opacity:1;border-color:var(--fallback-wa,oklch(var(--wa)/var(--tw-border-opacity,1)));background-color:var(--fallback-wa,oklch(var(--wa)/.1))}.btn-outline.btn-error:hover{--tw-border-opacity:1;border-color:var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity,1)));background-color:var(--fallback-er,oklch(var(--er)/.1))}.btn-text:hover{border-color:transparent;background-color:var(--fallback-bc,oklch(var(--bc)/.1))}.btn-text.btn-primary:hover{background-color:var(--fallback-p,oklch(var(--p)/.1))}.btn-text.btn-secondary:hover{background-color:var(--fallback-s,oklch(var(--s)/.1))}.btn-text.btn-accent:hover{background-color:var(--fallback-a,oklch(var(--a)/.1))}.btn-text.btn-success:hover{background-color:var(--fallback-su,oklch(var(--su)/.1))}.btn-text.btn-info:hover{background-color:var(--fallback-in,oklch(var(--in)/.1))}.btn-text.btn-warning:hover{background-color:var(--fallback-wa,oklch(var(--wa)/.1))}.btn-text.btn-error:hover{background-color:var(--fallback-er,oklch(var(--er)/.1))}.btn-disabled:hover,.btn.disabled:hover,.btn:disabled:hover,.btn[disabled]:hover{opacity:.5;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}@supports (color:color-mix(in oklab,black,black)){.btn:is(input[type=checkbox]:checked):hover,.btn:is(input[type=radio]:checked):hover{background-color:color-mix(in oklab,var(--fallback-p,oklch(var(--p)/1)) 90%,#000);border-color:color-mix(in oklab,var(--fallback-p,oklch(var(--p)/1)) 90%,#000)}}:where(.menu li:not(.menu-title,.disabled,[disabled],:disabled)>:not(ul,.collapse,.menu-title)):not(.active,.btn,.disabled,:disabled,[disabled]):hover{cursor:pointer;outline:2px solid transparent;outline-offset:2px}@supports (color:oklch(0 0 0)){:where(.menu li:not(.menu-title,.disabled,[disabled],:disabled)>:not(ul,.collapse,.menu-title)):not(.active,.btn,.disabled,:disabled,[disabled]):hover{background-color:var(--fallback-n,oklch(var(--n)/.1))}}.tab[disabled]:hover{pointer-events:none;border-color:var(--fallback-bc,oklch(var(--bc)/.1));color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)));--tw-text-opacity:0.4}}@supports (color:color-mix(in oklab,black,black)){.btn:focus-visible{background-color:color-mix(in oklab,oklch(var(--btn-color,var(--b2))/var(--tw-bg-opacity,1)) 90%,#000);border-color:color-mix(in oklab,oklch(var(--btn-color,var(--b2))/var(--tw-border-opacity,1)) 90%,#000)}}.btn:focus-visible{outline-style:solid;outline-width:2px;outline-offset:0}.btn-primary{--tw-text-opacity:1;color:var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity,1)));outline-color:var(--fallback-p,oklch(var(--p)/.3))}@supports (color:oklch(0% 0 0)){.btn-primary{--btn-color:var(--p)}.btn-error{--btn-color:var(--er)}.btn-gradient.btn-primary{--light-shade:var(--p)}.btn-gradient.btn-error{--light-shade:var(--er)}}.btn-error{--tw-text-opacity:1;color:var(--fallback-erc,oklch(var(--erc)/var(--tw-text-opacity,1)));outline-color:var(--fallback-er,oklch(var(--er)/.3))}.btn.glass{outline-color:currentColor}.btn.glass,.btn.glass:hover{--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.btn.glass.btn-active{--glass-opacity:25%;--glass-border-opacity:15%}.btn-soft{border-style:none;background-color:var(--fallback-n,oklch(var(--n)/.2));--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)))}.btn-soft,.btn-soft:hover{--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.btn-soft.btn-active{background-color:var(--fallback-n,oklch(var(--n)/.3))}.btn-soft:focus-visible{background-color:var(--fallback-n,oklch(var(--n)/.3));outline-color:var(--fallback-n,oklch(var(--n)/.5))}.btn-soft.btn-primary{background-color:var(--fallback-p,oklch(var(--p)/.2));--tw-text-opacity:1;color:var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity,1)));outline-color:var(--fallback-p,oklch(var(--p)/.5))}.btn-soft.btn-primary.btn-active{background-color:var(--fallback-p,oklch(var(--p)/.3))}.btn-soft.btn-primary:focus-visible{background-color:var(--fallback-p,oklch(var(--p)/.3));outline-color:var(--fallback-p,oklch(var(--p)/.5))}.btn-soft.btn-secondary{background-color:var(--fallback-s,oklch(var(--s)/.2));--tw-text-opacity:1;color:var(--fallback-s,oklch(var(--s)/var(--tw-text-opacity,1)));outline-color:var(--fallback-s,oklch(var(--s)/.5))}.btn-soft.btn-secondary.btn-active{background-color:var(--fallback-s,oklch(var(--s)/.3))}.btn-soft.btn-secondary:focus-visible{background-color:var(--fallback-s,oklch(var(--s)/.3));outline-color:var(--fallback-s,oklch(var(--s)/.5))}.btn-soft.btn-accent{background-color:var(--fallback-a,oklch(var(--a)/.2));--tw-text-opacity:1;color:var(--fallback-a,oklch(var(--a)/var(--tw-text-opacity,1)));outline-color:var(--fallback-a,oklch(var(--a)/.5))}.btn-soft.btn-accent.btn-active{background-color:var(--fallback-a,oklch(var(--a)/.3))}.btn-soft.btn-accent:focus-visible{background-color:var(--fallback-a,oklch(var(--a)/.3));outline-color:var(--fallback-a,oklch(var(--a)/.5))}.btn-soft.btn-success{background-color:var(--fallback-su,oklch(var(--su)/.2));--tw-text-opacity:1;color:var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity,1)));outline-color:var(--fallback-su,oklch(var(--su)/.5))}.btn-soft.btn-success.btn-active{background-color:var(--fallback-su,oklch(var(--su)/.3))}.btn-soft.btn-success:focus-visible{background-color:var(--fallback-su,oklch(var(--su)/.3));outline-color:var(--fallback-su,oklch(var(--su)/.5))}.btn-soft.btn-info{background-color:var(--fallback-in,oklch(var(--in)/.2));--tw-text-opacity:1;color:var(--fallback-in,oklch(var(--in)/var(--tw-text-opacity,1)));outline-color:var(--fallback-in,oklch(var(--in)/.5))}.btn-soft.btn-info.btn-active{background-color:var(--fallback-in,oklch(var(--in)/.3))}.btn-soft.btn-info:focus-visible{background-color:var(--fallback-in,oklch(var(--in)/.3));outline-color:var(--fallback-in,oklch(var(--in)/.5))}.btn-soft.btn-warning{background-color:var(--fallback-wa,oklch(var(--wa)/.2));--tw-text-opacity:1;color:var(--fallback-wa,oklch(var(--wa)/var(--tw-text-opacity,1)));outline-color:var(--fallback-wa,oklch(var(--wa)/.5))}.btn-soft.btn-warning.btn-active{background-color:var(--fallback-wa,oklch(var(--wa)/.3))}.btn-soft.btn-warning:focus-visible{background-color:var(--fallback-wa,oklch(var(--wa)/.3));outline-color:var(--fallback-wa,oklch(var(--wa)/.5))}.btn-soft.btn-error{background-color:var(--fallback-er,oklch(var(--er)/.2));--tw-text-opacity:1;color:var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity,1)));outline-color:var(--fallback-er,oklch(var(--er)/.5))}.btn-soft.btn-error.btn-active{background-color:var(--fallback-er,oklch(var(--er)/.3))}.btn-soft.btn-error:focus-visible{background-color:var(--fallback-er,oklch(var(--er)/.3));outline-color:var(--fallback-er,oklch(var(--er)/.5))}.btn-outline{border-style:solid;border-color:currentColor;background-color:transparent;--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)))}.btn-outline,.btn-outline:hover{--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.btn-outline.btn-active{--tw-border-opacity:1;border-color:var(--fallback-bc,oklch(var(--bc)/var(--tw-border-opacity,1)));background-color:var(--fallback-bc,oklch(var(--bc)/.1))}.btn-outline:focus-visible{background-color:var(--fallback-bc,oklch(var(--bc)/.1));outline-width:1px;outline-color:currentColor}.btn-outline.btn-primary{--tw-text-opacity:1;color:var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity,1)))}.btn-outline.btn-primary.btn-active{--tw-border-opacity:1;border-color:var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity,1)));background-color:var(--fallback-p,oklch(var(--p)/.1))}.btn-outline.btn-primary:focus-visible{background-color:var(--fallback-p,oklch(var(--p)/.1))}.btn-outline.btn-secondary{--tw-text-opacity:1;color:var(--fallback-s,oklch(var(--s)/var(--tw-text-opacity,1)))}.btn-outline.btn-secondary.btn-active{--tw-border-opacity:1;border-color:var(--fallback-s,oklch(var(--s)/var(--tw-border-opacity,1)));background-color:var(--fallback-s,oklch(var(--s)/.1))}.btn-outline.btn-secondary:focus-visible{background-color:var(--fallback-s,oklch(var(--s)/.1))}.btn-outline.btn-accent{--tw-text-opacity:1;color:var(--fallback-a,oklch(var(--a)/var(--tw-text-opacity,1)))}.btn-outline.btn-accent.btn-active{--tw-border-opacity:1;border-color:var(--fallback-a,oklch(var(--a)/var(--tw-border-opacity,1)));background-color:var(--fallback-a,oklch(var(--a)/.1))}.btn-outline.btn-accent:focus-visible{background-color:var(--fallback-a,oklch(var(--a)/.1))}.btn-outline.btn-success{--tw-text-opacity:1;color:var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity,1)))}.btn-outline.btn-success.btn-active{--tw-border-opacity:1;border-color:var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity,1)));background-color:var(--fallback-su,oklch(var(--su)/.1))}.btn-outline.btn-success:focus-visible{background-color:var(--fallback-su,oklch(var(--su)/.1))}.btn-outline.btn-info{--tw-text-opacity:1;color:var(--fallback-in,oklch(var(--in)/var(--tw-text-opacity,1)))}.btn-outline.btn-info.btn-active{--tw-border-opacity:1;border-color:var(--fallback-in,oklch(var(--in)/var(--tw-border-opacity,1)));background-color:var(--fallback-in,oklch(var(--in)/.1))}.btn-outline.btn-info:focus-visible{background-color:var(--fallback-in,oklch(var(--in)/.1))}.btn-outline.btn-warning{--tw-text-opacity:1;color:var(--fallback-wa,oklch(var(--wa)/var(--tw-text-opacity,1)))}.btn-outline.btn-warning.btn-active{--tw-border-opacity:1;border-color:var(--fallback-wa,oklch(var(--wa)/var(--tw-border-opacity,1)));background-color:var(--fallback-wa,oklch(var(--wa)/.1))}.btn-outline.btn-warning:focus-visible{background-color:var(--fallback-wa,oklch(var(--wa)/.1))}.btn-outline.btn-error{--tw-text-opacity:1;color:var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity,1)))}.btn-outline.btn-error.btn-active{--tw-border-opacity:1;border-color:var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity,1)));background-color:var(--fallback-er,oklch(var(--er)/.1))}.btn-outline.btn-error:focus-visible{background-color:var(--fallback-er,oklch(var(--er)/.1))}.btn-text{border-color:transparent;background-color:transparent;--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)))}.btn-text,.btn-text:hover{--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.btn-text.btn-active{border-color:transparent;background-color:var(--fallback-bc,oklch(var(--bc)/.1))}.btn-text:focus-visible{border-color:transparent;background-color:var(--fallback-bc,oklch(var(--bc)/.1));outline-color:currentColor}.btn-text.btn-primary{--tw-text-opacity:1;color:var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity,1)))}.btn-text.btn-primary.btn-active{background-color:var(--fallback-p,oklch(var(--p)/.1))}.btn-text.btn-primary:focus-visible{background-color:var(--fallback-p,oklch(var(--p)/.1))}.btn-text.btn-secondary{--tw-text-opacity:1;color:var(--fallback-s,oklch(var(--s)/var(--tw-text-opacity,1)))}.btn-text.btn-secondary.btn-active{background-color:var(--fallback-s,oklch(var(--s)/.1))}.btn-text.btn-secondary:focus-visible{background-color:var(--fallback-s,oklch(var(--s)/.1))}.btn-text.btn-accent{--tw-text-opacity:1;color:var(--fallback-a,oklch(var(--a)/var(--tw-text-opacity,1)))}.btn-text.btn-accent.btn-active{background-color:var(--fallback-a,oklch(var(--a)/.1))}.btn-text.btn-accent:focus-visible{background-color:var(--fallback-a,oklch(var(--a)/.1))}.btn-text.btn-success{--tw-text-opacity:1;color:var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity,1)))}.btn-text.btn-success.btn-active{background-color:var(--fallback-su,oklch(var(--su)/.1))}.btn-text.btn-success:focus-visible{background-color:var(--fallback-su,oklch(var(--su)/.1))}.btn-text.btn-info{--tw-text-opacity:1;color:var(--fallback-in,oklch(var(--in)/var(--tw-text-opacity,1)))}.btn-text.btn-info.btn-active{background-color:var(--fallback-in,oklch(var(--in)/.1))}.btn-text.btn-info:focus-visible{background-color:var(--fallback-in,oklch(var(--in)/.1))}.btn-text.btn-warning{--tw-text-opacity:1;color:var(--fallback-wa,oklch(var(--wa)/var(--tw-text-opacity,1)))}.btn-text.btn-warning.btn-active{background-color:var(--fallback-wa,oklch(var(--wa)/.1))}.btn-text.btn-warning:focus-visible{background-color:var(--fallback-wa,oklch(var(--wa)/.1))}.btn-text.btn-error{--tw-text-opacity:1;color:var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity,1)))}.btn-text.btn-error.btn-active{background-color:var(--fallback-er,oklch(var(--er)/.1))}.btn-text.btn-error:focus-visible{background-color:var(--fallback-er,oklch(var(--er)/.1))}.btn-gradient.btn-primary{--tw-border-opacity:1;border-color:var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity,1)));--tw-text-opacity:1;color:var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity,1)));--tw-shadow-color:var(--fallback-p,oklch(var(--p)/0.26));--tw-shadow:var(--tw-shadow-colored)}.btn-gradient.btn-primary:hover{--tw-shadow-color:var(--fallback-p,oklch(var(--p)/0.2));--tw-shadow:var(--tw-shadow-colored)}.btn-gradient.btn-primary:focus-visible{outline-color:var(--fallback-p,oklch(var(--p)/.3));border-color:transparent}.btn-gradient.btn-error{--tw-border-opacity:1;border-color:var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity,1)));--tw-text-opacity:1;color:var(--fallback-erc,oklch(var(--erc)/var(--tw-text-opacity,1)));--tw-shadow-color:var(--fallback-er,oklch(var(--er)/0.26));--tw-shadow:var(--tw-shadow-colored)}.btn-gradient.btn-error:hover{--tw-shadow-color:var(--fallback-er,oklch(var(--er)/0.2));--tw-shadow:var(--tw-shadow-colored)}.btn-gradient.btn-error:focus-visible{outline-color:var(--fallback-er,oklch(var(--er)/.3));border-color:transparent}.btn.btn-disabled,.btn.disabled,.btn:disabled,.btn[disabled]{pointer-events:none;opacity:.5;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.btn:is(input[type=checkbox]:checked),.btn:is(input[type=radio]:checked){--tw-border-opacity:1;border-color:var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity,1)));--tw-bg-opacity:1;background-color:var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity,1)));--tw-text-opacity:1;color:var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity,1)))}.btn:is(input[type=checkbox]:checked):focus-visible,.btn:is(input[type=radio]:checked):focus-visible{outline-color:var(--fallback-p,oklch(var(--p)/1))}@keyframes button-pop{0%{transform:scale(var(--btn-focus-scale,.98))}40%{transform:scale(1.02)}to{transform:scale(1)}}.card :where(figure:first-child){overflow:hidden;border-start-start-radius:inherit;border-start-end-radius:inherit;border-end-start-radius:unset;border-end-end-radius:unset}.card :where(figure:last-child){overflow:hidden;border-start-start-radius:unset;border-start-end-radius:unset;border-end-start-radius:inherit;border-end-end-radius:inherit}.card.image-full :where(figure){overflow:hidden;border-radius:inherit}.card .alert{border-radius:0}.card .alert:first-child{border-top-left-radius:var(--rounded-box,.5rem);border-top-right-radius:var(--rounded-box,.5rem)}.card .alert:last-child{border-bottom-right-radius:var(--rounded-box,.5rem);border-bottom-left-radius:var(--rounded-box,.5rem)}:where(.card-header)+.card-body{padding-top:0}:where(.card-body)+.card-footer{padding-top:0}.carousel-body,.carousel-slide{transition-property:transform;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.7s}.carousel-next:hover,.carousel-prev:hover{--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)))}.carousel-next.disabled,.carousel-prev.disabled{pointer-events:none;color:var(--fallback-bc,oklch(var(--bc)/.3))}.checkbox:focus{box-shadow:none}.checkbox:focus-visible{outline-style:solid;outline-width:2px;outline-offset:0;outline-color:var(--fallback-n,oklch(var(--n)/.3))}.checkbox:checked,.checkbox[aria-checked=true],.checkbox[checked=true]{background-repeat:no-repeat;--tw-shadow:0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));--tw-shadow-colored:0 1px 2px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);border-color:var(--chkbg);animation:checkmark var(--animation-input,.2s) ease-out;background-color:var(--chkbg);background-image:linear-gradient(-45deg,transparent 66%,var(--chkbg) 66.99%),linear-gradient(45deg,transparent 77%,var(--chkbg) 77.99%),linear-gradient(-45deg,var(--chkbg) 41%,transparent 41.99%),linear-gradient(45deg,var(--chkbg) 34%,var(--chkfg) 34.99%,var(--chkfg) 40%,transparent 40.99%),linear-gradient(-45deg,var(--chkfg) 47%,var(--chkbg) 47.99%)}.checkbox:indeterminate{background-repeat:no-repeat;--tw-shadow:0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));--tw-shadow-colored:0 1px 2px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);background-color:var(--chkbg);border-color:var(--chkbg);animation:checkmark var(--animation-input,.2s) ease-out;background-image:linear-gradient(90deg,transparent 80%,var(--chkbg) 80%),linear-gradient(-90deg,transparent 80%,var(--chkbg) 80%),linear-gradient(0deg,var(--chkbg) 45%,var(--chkfg) 45%,var(--chkfg) 55%,var(--chkbg) 55%)}.checkbox-primary{--chkbg:var(--fallback-p,oklch(var(--p)/1));--chkfg:var(--fallback-pc,oklch(var(--pc)/1))}.checkbox-primary:checked:focus-visible,.checkbox-primary[aria-checked=true]:focus-visible,.checkbox-primary[checked=true]:focus-visible{outline-color:var(--fallback-p,oklch(var(--p)/.3))}.checkbox.disabled,.checkbox:disabled,.checkbox[disabled]{pointer-events:none;--tw-bg-opacity:1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)));opacity:.4}.checkbox.disabled:not(checked),.checkbox:disabled:not(checked),.checkbox[disabled]:not(checked){--tw-bg-opacity:1;background-color:var(--fallback-n,oklch(var(--n)/var(--tw-bg-opacity,1)))}@keyframes checkmark{0%{background-position-y:5px}50%{background-position-y:-2px}to{background-position-y:0}}.checkbox.is-valid,.validate .checkbox:valid{--chkbg:var(--fallback-su,oklch(var(--su)/1));--chkfg:var(--fallback-suc,oklch(var(--suc)/1));--tw-border-opacity:1!important;border-color:var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity,1)))!important}.checkbox.is-valid:focus-visible,.validate .checkbox:valid:focus-visible{outline-color:var(--fallback-su,oklch(var(--su)/.3))!important}.checkbox.is-invalid,.validate .checkbox:invalid{--chkbg:var(--fallback-er,oklch(var(--er)/1));--chkfg:var(--fallback-erc,oklch(var(--erc)/1));--tw-border-opacity:1!important;border-color:var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity,1)))!important}.checkbox.is-invalid:focus-visible,.validate .checkbox:invalid:focus-visible{outline-color:var(--fallback-er,oklch(var(--er)/.3))!important}.validate .checkbox:valid~.label,.validate .checkbox:valid~.label .label-text,.validate .checkbox:valid~.label-text,.validate .label-text:has(+* .checkbox:valid),.validate .label-text:has(~.checkbox:valid),.validate .label:has(+* .checkbox:valid)>*,.validate .label:has(~.checkbox:valid)>*,.validate :has(.checkbox:valid)~.label,.validate :has(.checkbox:valid)~.label .label-text,.validate :has(.checkbox:valid)~.label-text{--tw-text-opacity:1;color:var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity,1)))}.validate .checkbox:invalid~.label,.validate .checkbox:invalid~.label .label-text,.validate .checkbox:invalid~.label-text,.validate .label-text:has(+* .checkbox:invalid),.validate .label-text:has(~.checkbox:invalid),.validate .label:has(+* .checkbox:invalid)>*,.validate .label:has(~.checkbox:invalid)>*,.validate :has(.checkbox:invalid)~.label,.validate :has(.checkbox:invalid)~.label .label-text,.validate :has(.checkbox:invalid)~.label-text{--tw-text-opacity:1;color:var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity,1)))}.validate .checkbox:valid+*>.success-message,.validate .checkbox:valid~.success-message,.validate :has(>.checkbox:valid)>*>.success-message,.validate :has(>.checkbox:valid)~.success-message{display:block}.validate .checkbox:invalid+*>.error-message,.validate .checkbox:invalid~.error-message,.validate :has(>.checkbox:invalid)>*>.error-message,.validate :has(>.checkbox:invalid)~.error-message{display:block}.nested-collapse-wrapper .collapse-toggle.open.nested-collapse,.nested-collapse-wrapper .collapse.open.nested-collapse{background-color:var(--fallback-bc,oklch(var(--bc)/.1))}.nested-collapse-wrapper .collapse-toggle.open>.collapse-icon,.nested-collapse-wrapper .collapse.open>.collapse-icon{--tw-rotate:180deg;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.drawer-body::-webkit-scrollbar-thumb{background-color:var(--fallback-s,oklch(var(--s)/.5))}.drawer-body::-webkit-scrollbar-thumb:hover{background-color:var(--fallback-s,oklch(var(--s)/.8))}.drawer-body::-webkit-scrollbar-track{--tw-bg-opacity:1;background-color:var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity,1)))}.dropdown-menu>:not([hidden])~:not([hidden]){--tw-space-y-reverse:0;margin-top:calc(.125rem*(1 - var(--tw-space-y-reverse)));margin-bottom:calc(.125rem*var(--tw-space-y-reverse))}.dropdown-item:focus,.dropdown-item:focus-visible,.dropdown-item:focus-within,.dropdown-item:hover{background-color:var(--fallback-n,oklch(var(--n)/.1));outline:2px solid transparent;outline-offset:2px}.dropdown-item.active,.dropdown-item:active{background-color:var(--fallback-p,oklch(var(--p)/.1));--tw-text-opacity:1;color:var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity,1)))}.dropdown-item.disabled,.dropdown-item:disabled,.dropdown-item[disabled]{pointer-events:none;background-color:var(--fallback-n,oklch(var(--n)/.05));color:var(--fallback-bc,oklch(var(--bc)/.5))}.dropdown-item>.label{padding-top:.25rem;padding-bottom:.25rem;font-size:1rem;line-height:1.375rem;color:var(--fallback-bc,oklch(var(--bc)/.8))}.dropdown-item>.label-text{--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)))}.label{-webkit-user-select:none;-moz-user-select:none;user-select:none;padding:.25rem;color:var(--fallback-bc,oklch(var(--bc)/.8))}.label-text-alt{font-size:.75rem;line-height:1rem}.label-text{display:block;cursor:pointer;font-size:.875rem;line-height:1.25rem;--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)))}input{background-color:transparent}input:focus{outline-width:0;outline-color:transparent}input:focus-visible{outline:unset}.input::-moz-placeholder{color:var(--fallback-bc,oklch(var(--bc)/.5))}.input::placeholder{color:var(--fallback-bc,oklch(var(--bc)/.5))}.input:hover{border-color:var(--fallback-bc,oklch(var(--bc)/.6))}.input[type=file]:disabled{background-color:var(--fallback-n,oklch(var(--n)/.1))}.input:focus,.input:focus-within{--tw-border-opacity:1;border-color:var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity,1)));--tw-shadow:0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));--tw-shadow:var(--tw-shadow-colored);--tw-shadow-colored:0 1px 2px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);--tw-shadow-color:var(--fallback-p,oklch(var(--p)/0.22));--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);--tw-ring-opacity:1;--tw-ring-color:var(--fallback-p,oklch(var(--p)/var(--tw-ring-opacity,1)))}.input:-webkit-autofill,.input:-webkit-autofill:focus{--tw-bg-opacity:1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)));--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)))}.input[list]::-webkit-calendar-picker-indicator{line-height:1em}.input.disabled,.input:disabled,.input[disabled]{pointer-events:none;border-width:0;border-color:var(--fallback-bc,oklch(var(--bc)/.1));background-color:var(--fallback-n,oklch(var(--n)/.1));color:var(--fallback-bc,oklch(var(--bc)/.5))}.input::-webkit-date-and-time-value{text-align:inherit}.input.input-floating.disabled,.input.input-floating:disabled,.input.input-floating[disabled]{border-width:1px;--tw-bg-opacity:1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)))}.input.input-floating.disabled~.input-floating-label,.input.input-floating:disabled~.input-floating-label,.input.input-floating[disabled]~.input-floating-label{color:var(--fallback-bc,oklch(var(--bc)/.5))}.input.input-filled.disabled,.input.input-filled:disabled,.input.input-filled[disabled]{border-bottom-width:1px}.input.input-filled.disabled~.input-filled-label,.input.input-filled:disabled~.input-filled-label,.input.input-filled[disabled]~.input-filled-label{color:var(--fallback-bc,oklch(var(--bc)/.5))}.input.input-filled.input-sm:not(:-moz-placeholder-shown){padding-top:.5rem}.input.input-filled.input-sm:focus,.input.input-filled.input-sm:not(:placeholder-shown){padding-top:.5rem}.input.input-filled.input-lg:not(:-moz-placeholder-shown),.input.input-filled:not(:-moz-placeholder-shown){padding-top:.75rem}.input.input-filled.input-lg:focus,.input.input-filled.input-lg:not(:placeholder-shown),.input.input-filled:focus,.input.input-filled:not(:placeholder-shown){padding-top:.75rem}.input-group:has(input.disabled),.input-group:has(input:disabled),.input-group:has(input[disabled]){pointer-events:none;border-color:var(--fallback-bc,oklch(var(--bc)/.1));background-color:var(--fallback-n,oklch(var(--n)/.1));color:var(--fallback-bc,oklch(var(--bc)/.5))}.input-group .input{border-width:0;background-color:transparent}.input-group .input:focus,.input-group .input:focus-within{--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)}.input-group .input.disabled,.input-group .input:disabled,.input-group .input[disabled],.input-group-filled .input{background-color:transparent}.input-group-filled .input{border-width:0}.input-group-filled .input.disabled,.input-group-filled .input:disabled,.input-group-filled .input[disabled]{background-color:transparent}.input[type=file].input-floating::file-selector-button{border-inline-end-width:1px;border-color:var(--fallback-bc,oklch(var(--bc)/.25));--tw-bg-opacity:1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)))}.input.is-valid,.validate .input:valid{--tw-border-opacity:1;border-color:var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity,1)))}.input.is-valid:focus,.input.is-valid:focus-within,.validate .input:valid:focus,.validate .input:valid:focus-within{--tw-shadow-color:var(--fallback-su,oklch(var(--su)/0.22));--tw-shadow:var(--tw-shadow-colored);--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);--tw-ring-opacity:1;--tw-ring-color:var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity,1)))}.input.is-valid.input-filled:focus,.input.is-valid.input-filled:focus-within,.validate .input:valid.input-filled:focus,.validate .input:valid.input-filled:focus-within{--tw-border-opacity:1;border-color:var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity,1)));--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)}.input.is-valid~.input-filled-label,.input.is-valid~.input-floating-label,.validate .input:valid~.input-filled-label,.validate .input:valid~.input-floating-label{--tw-text-opacity:1;color:var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity,1)))}.input.is-valid:focus-within~.input-filled-focused,.input.is-valid:focus~.input-filled-focused,.validate .input:valid:focus-within~.input-filled-focused,.validate .input:valid:focus~.input-filled-focused{--tw-scale-x:1;--tw-scale-y:1;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));--tw-bg-opacity:1;background-color:var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity,1)))}.is-valid~.label,.is-valid~.label .label-text,.is-valid~.label-text,.label-text:has(+* .is-valid),.label-text:has(~.is-valid),.label:has(+* .is-valid)>*,.label:has(~.is-valid)>*,.validate .input:valid~.label,.validate .input:valid~.label .label-text,.validate .input:valid~.label.label-text,.validate .label-text:has(+* .input:valid),.validate .label-text:has(~.input:valid),.validate .label:has(+* .input:valid)>*,.validate .label:has(~.input:valid)>*,.validate :has(.input:valid)~.label,.validate :has(.input:valid)~.label .label-text,.validate :has(.input:valid)~.label-text,:has(.is-valid)~.label,:has(.is-valid)~.label .label-text,:has(.is-valid)~.label-text{--tw-text-opacity:1;color:var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity,1)))}.input:focus.is-valid~.input-filled-label,.input:focus.is-valid~.input-floating-label{--tw-text-opacity:1;color:var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity,1)))}.input.is-invalid,.validate .input:invalid{--tw-border-opacity:1;border-color:var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity,1)))}.input.is-invalid:focus,.input.is-invalid:focus-within,.validate .input:invalid:focus,.validate .input:invalid:focus-within{--tw-shadow-color:var(--fallback-er,oklch(var(--er)/0.22));--tw-shadow:var(--tw-shadow-colored);--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);--tw-ring-opacity:1;--tw-ring-color:var(--fallback-er,oklch(var(--er)/var(--tw-ring-opacity,1)))}.input.is-invalid.input-filled:focus,.input.is-invalid.input-filled:focus-within,.validate .input:invalid.input-filled:focus,.validate .input:invalid.input-filled:focus-within{--tw-border-opacity:1;border-color:var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity,1)));--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)}.input.is-invalid~.input-filled-label,.input.is-invalid~.input-floating-label,.validate .input:invalid~.input-filled-label,.validate .input:invalid~.input-floating-label{--tw-text-opacity:1;color:var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity,1)))}.input.is-invalid:focus-within~.input-filled-focused,.input.is-invalid:focus~.input-filled-focused,.validate .input:invalid:focus-within~.input-filled-focused,.validate .input:invalid:focus~.input-filled-focused{--tw-scale-x:1;--tw-scale-y:1;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));--tw-bg-opacity:1;background-color:var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity,1)))}.is-invalid~.label,.is-invalid~.label .label-text,.is-invalid~.label-text,.label-text:has(+* .is-invalid),.label-text:has(~.is-invalid),.label:has(+* .is-invalid)>*,.label:has(~.is-invalid)>*,.validate .input:invalid~.label,.validate .input:invalid~.label .label-text,.validate .input:invalid~.label.label-text,.validate .label-text:has(+* .input:invalid),.validate .label-text:has(~.input:invalid),.validate .label:has(+* .input:invalid)>*,.validate .label:has(~.input:invalid)>*,.validate :has(.input:invalid)~.label,.validate :has(.input:invalid)~.label .label-text,.validate :has(.input:invalid)~.label-text,:has(.is-invalid)~.label,:has(.is-invalid)~.label .label-text,:has(.is-invalid)~.label-text{--tw-text-opacity:1;color:var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity,1)))}.input:focus.is-invalid~.input-filled-label,.input:focus.is-invalid~.input-floating-label{--tw-text-opacity:1;color:var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity,1)))}.validate .input:valid+*>.success-message,.validate .input:valid~.success-message,.validate :has(>.input:valid)>*>.success-message,.validate :has(>.input:valid)~.success-message{display:block}.validate .input:invalid+*>.error-message,.validate .input:invalid~.error-message,.validate :has(>.input:invalid)>*>.error-message,.validate :has(>.input:invalid)~.error-message{display:block}.input-group>*>.input.is-invalid,.input-group>*>.input.is-valid,.input-group>*>.input:invalid,.input-group>*>.input:valid,.input-group>.input.is-invalid,.input-group>.input.is-valid,.input-group>.input:invalid,.input-group>.input:valid,.validate .input-group>*>.input:invalid,.validate .input-group>*>.input:valid,.validate .input-group>.input:invalid,.validate .input-group>.input:valid{border-width:0}.input-group>*>.input.is-invalid:focus-within,.input-group>*>.input.is-valid:focus-within,.input-group>*>.input:invalid:focus-within,.input-group>*>.input:valid:focus-within,.input-group>.input.is-invalid:focus-within,.input-group>.input.is-valid:focus-within,.input-group>.input:invalid:focus-within,.input-group>.input:valid:focus-within,.validate .input-group>*>.input:invalid:focus-within,.validate .input-group>*>.input:valid:focus-within,.validate .input-group>.input:invalid:focus-within,.validate .input-group>.input:valid:focus-within{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.input-group>*>.input.is-invalid:focus,.input-group>*>.input.is-valid:focus,.input-group>*>.input:invalid:focus,.input-group>*>.input:valid:focus,.input-group>.input.is-invalid:focus,.input-group>.input.is-valid:focus,.input-group>.input:invalid:focus,.input-group>.input:valid:focus,.validate .input-group>*>.input:invalid:focus,.validate .input-group>*>.input:valid:focus,.validate .input-group>.input:invalid:focus,.validate .input-group>.input:valid:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.input-group:has(.is-valid),.validate .input-group:has(.input:valid){--tw-border-opacity:1;border-color:var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity,1)))}.input-group:has(.is-valid):has(:focus),.input-group:has(.is-valid):has(:focus-within),.validate .input-group:has(.input:valid):has(:focus),.validate .input-group:has(.input:valid):has(:focus-within){--tw-border-opacity:1;border-color:var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity,1)));--tw-shadow:0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));--tw-shadow:var(--tw-shadow-colored);--tw-shadow-colored:0 1px 2px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);--tw-shadow-color:var(--fallback-su,oklch(var(--su)/0.22));--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);--tw-ring-opacity:1;--tw-ring-color:var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity,1)))}.input-group:has(.is-invalid),.validate .input-group:has(.input:invalid){--tw-border-opacity:1;border-color:var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity,1)))}.input-group:has(.is-invalid):has(:focus),.input-group:has(.is-invalid):has(:focus-within),.validate .input-group:has(.input:invalid):has(:focus),.validate .input-group:has(.input:invalid):has(:focus-within){--tw-border-opacity:1;border-color:var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity,1)));--tw-shadow:0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));--tw-shadow:var(--tw-shadow-colored);--tw-shadow-colored:0 1px 2px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);--tw-shadow-color:var(--fallback-er,oklch(var(--er)/0.22));--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);--tw-ring-opacity:1;--tw-ring-color:var(--fallback-er,oklch(var(--er)/var(--tw-ring-opacity,1)))}.input-group-filled:has(.is-valid),.validate .input-group-filled:has(.input:valid){--tw-border-opacity:1;border-color:var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity,1)))}.input-group-filled:has(.is-valid):focus-within~.input-filled-focused,.input-group-filled:has(.is-valid):focus~.input-filled-focused,.validate .input-group-filled:has(.input:valid):focus-within~.input-filled-focused,.validate .input-group-filled:has(.input:valid):focus~.input-filled-focused{--tw-scale-x:1;--tw-scale-y:1;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));--tw-bg-opacity:1;background-color:var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity,1)))}.input-group-filled:has(.is-invalid),.validate .input-group-filled:has(.input:invalid){--tw-border-opacity:1;border-color:var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity,1)))}.input-group-filled:has(.is-invalid):focus-within~.input-filled-focused,.input-group-filled:has(.is-invalid):focus~.input-filled-focused,.validate .input-group-filled:has(.input:invalid):focus-within~.input-filled-focused,.validate .input-group-filled:has(.input:invalid):focus~.input-filled-focused{--tw-scale-x:1;--tw-scale-y:1;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));--tw-bg-opacity:1;background-color:var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity,1)))}.join .btn{--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.join>:where(:not(:first-child)){margin-top:0;margin-bottom:0;margin-inline-start:-1px}.join>:where(:not(:first-child)):is(.btn){margin-inline-start:calc(var(--border-btn)*-1)}.link:focus{outline:2px solid transparent;outline-offset:2px}.link:focus-visible{outline:2px solid currentColor;outline-offset:2px}.link.disabled,.link:disabled,.link[disabled]{pointer-events:none;opacity:.4}.loading{pointer-events:none;display:inline-block;aspect-ratio:1/1;width:1.5rem;background-color:currentColor;-webkit-mask-size:100%;mask-size:100%;-webkit-mask-repeat:no-repeat;mask-repeat:no-repeat;-webkit-mask-position:center;mask-position:center}.loading,.loading-spinner{-webkit-mask-image:url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' stroke='%23000'%3E%3Cstyle%3E@keyframes spinner_zKoa{to{transform:rotate(360deg)}}@keyframes spinner_YpZS{0%25{stroke-dasharray:0 150;stroke-dashoffset:0}47.5%25{stroke-dasharray:42 150;stroke-dashoffset:-16}95%25,to{stroke-dasharray:42 150;stroke-dashoffset:-59}}%3C/style%3E%3Cg style='transform-origin:center;animation:spinner_zKoa 2s linear infinite'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3' class='spinner_V8m1' style='stroke-linecap:round;animation:spinner_YpZS 1.5s ease-out infinite'/%3E%3C/g%3E%3C/svg%3E");mask-image:url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' stroke='%23000'%3E%3Cstyle%3E@keyframes spinner_zKoa{to{transform:rotate(360deg)}}@keyframes spinner_YpZS{0%25{stroke-dasharray:0 150;stroke-dashoffset:0}47.5%25{stroke-dasharray:42 150;stroke-dashoffset:-16}95%25,to{stroke-dasharray:42 150;stroke-dashoffset:-59}}%3C/style%3E%3Cg style='transform-origin:center;animation:spinner_zKoa 2s linear infinite'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3' class='spinner_V8m1' style='stroke-linecap:round;animation:spinner_YpZS 1.5s ease-out infinite'/%3E%3C/g%3E%3C/svg%3E")}:where(.menu li:empty){--tw-bg-opacity:1;background-color:var(--fallback-bc,oklch(var(--bc)/var(--tw-bg-opacity,1)));opacity:.1;margin:.5rem 1rem;height:1px}.menu :where(li:not(.dropdown) ul){margin-inline-start:1rem;padding-inline-start:.5rem}.menu :where(li:not(.dropdown) ul):before{position:absolute;bottom:.6rem;inset-inline-start:0;top:.75rem;width:1px;--tw-bg-opacity:1;background-color:var(--fallback-bc,oklch(var(--bc)/var(--tw-bg-opacity,1)));opacity:.1;content:""}.menu :where(li:not(.menu-title,.tooltip)>:not(ul,.collapse,.menu-title,.btn)){border-radius:var(--rounded-btn,.375rem);padding:.625rem 1rem;text-align:start;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,-webkit-backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter,-webkit-backdrop-filter;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-timing-function:cubic-bezier(0,0,.2,1);transition-duration:.2s;text-wrap:balance}.menu li.tooltip>*{border-radius:var(--rounded-btn,.375rem);padding:.625rem 1rem;text-align:start}:where(.menu li:not(.menu-title,.disabled,[disabled],:disabled)){--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)))}:where(.menu li:not(.menu-title,.disabled,[disabled],:disabled)>:not(ul,.collapse,.menu-title)):not(.active,.btn).focus,:where(.menu li:not(.menu-title,.disabled,[disabled],:disabled)>:not(ul,.collapse,.menu-title)):not(.active,.btn):focus,:where(.menu li:not(.menu-title,.disabled,[disabled],:disabled)>:not(ul,.collapse,.menu-title)):not(.active,.btn):focus-visible{cursor:pointer;background-color:var(--fallback-bc,oklch(var(--bc)/.1));--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)));outline:2px solid transparent;outline-offset:2px}.menu li:not(.disabled,:disabled,[disabled])>:not(ul,.menu-title,.collapse,.btn).active,.menu li:not(.disabled,:disabled,[disabled])>:not(ul,.menu-title,.collapse,.btn):active{background-color:var(--fallback-p,oklch(var(--p)/.1));--tw-text-opacity:1;color:var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity,1)))}.menu li.disabled,.menu li:disabled,.menu li[disabled]{pointer-events:none;-webkit-user-select:none;-moz-user-select:none;user-select:none;opacity:.5}.mockup-phone .display{overflow:hidden;border-radius:40px;margin-top:-25px}.mockup-browser .mockup-browser-toolbar .input{position:relative;margin-left:auto;margin-right:auto;display:block;height:1.75rem;width:24rem;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;padding-inline-start:2rem;padding-top:.125rem}.mockup-browser .mockup-browser-toolbar .input:before{inset-inline-start:.5rem;aspect-ratio:1/1;height:.75rem;--tw-translate-y:-50%;border-radius:9999px;border-width:2px;border-color:currentColor}.mockup-browser .mockup-browser-toolbar .input:after,.mockup-browser .mockup-browser-toolbar .input:before{content:"";position:absolute;top:50%;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));opacity:.6}.mockup-browser .mockup-browser-toolbar .input:after{inset-inline-start:1.25rem;height:.5rem;--tw-translate-y:25%;--tw-rotate:-45deg;border-radius:9999px;border-width:1px;border-color:currentColor}.open .modal,.open.modal{transition-duration:.5s}.modal::-webkit-scrollbar-thumb{background-color:var(--fallback-s,oklch(var(--s)/.5))}.modal::-webkit-scrollbar-thumb:hover{background-color:var(--fallback-s,oklch(var(--s)/.8))}.modal::-webkit-scrollbar-track{--tw-bg-opacity:1;background-color:var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity,1)))}.modal::-webkit-scrollbar{width:.5rem}.open .modal-dialog,.open.modal-dialog{transition-duration:.5s}.pin-input::-moz-placeholder{color:var(--fallback-bc,oklch(var(--bc)/.8))}.pin-input::placeholder{color:var(--fallback-bc,oklch(var(--bc)/.8))}.pin-input:hover{border-color:var(--fallback-bc,oklch(var(--bc)/.6))}.pin-input:focus,.pin-input:focus-within{--tw-border-opacity:1;border-color:var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity,1)));--tw-shadow:0 4px 6px -1px var(--fallback-bs,oklch(var(--bs)/0.2));--tw-shadow:var(--tw-shadow-colored);--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);--tw-shadow-color:var(--fallback-p,oklch(var(--p)/0.2));--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);--tw-ring-opacity:1;--tw-ring-color:var(--fallback-p,oklch(var(--p)/var(--tw-ring-opacity,1)))}.pin-input.disabled,.pin-input:disabled,.pin-input[disabled]{pointer-events:none;border-color:var(--fallback-bc,oklch(var(--bc)/.25));background-color:var(--fallback-bc,oklch(var(--bc)/.05));color:var(--fallback-bc,oklch(var(--bc)/.5))}.pin-input.disabled::-moz-placeholder,.pin-input:disabled::-moz-placeholder,.pin-input[disabled]::-moz-placeholder{color:var(--fallback-bc,oklch(var(--bc)/.4));--tw-placeholder-opacity:0.2}.pin-input.disabled::placeholder,.pin-input:disabled::placeholder,.pin-input[disabled]::placeholder{color:var(--fallback-bc,oklch(var(--bc)/.4));--tw-placeholder-opacity:0.2}.progress-primary{--tw-bg-opacity:1;background-color:var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity,1)));--tw-text-opacity:1;color:var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity,1)));--progress-color:var(--fallback-p,oklch(var(--p)/1))}@keyframes indeterminate-progress{0%{background-position-x:-75%}50%{background-position-x:125%}to{background-position-x:-75%}}@keyframes progress-bar-stripes{0%{background-position-x:.75rem}}.radio-inset.disabled,.radio-inset:disabled,.radio-inset[disabled],.radio.disabled,.radio:disabled,.radio[disabled]{pointer-events:none;opacity:.4}.radio-inset.disabled:hover,.radio-inset:disabled:hover,.radio-inset[disabled]:hover,.radio.disabled:hover,.radio:disabled:hover,.radio[disabled]:hover{--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)}@keyframes radiomark{0%{box-shadow:0 0 0 9px var(--basebg) inset,0 0 0 9px var(--basebg) inset}50%{box-shadow:0 0 0 6px var(--basebg) inset,0 0 0 6px var(--basebg) inset}to{box-shadow:0 0 0 3px var(--basebg) inset,0 0 0 3px var(--basebg) inset}}@keyframes radioinsetmark{0%{border-width:2px}50%{border-width:4px}to{border-width:6px}}.custom-label-option .label,.custom-option .label{padding:0;font-size:1rem;line-height:1.375rem}.custom-label-option .label:first-of-type,.custom-option .label:first-of-type{padding-bottom:.25rem}.custom-label-option .label .label-text,.custom-option .label .label-text{font-weight:500;--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)))}.custom-label-option:has(.radio.is-invalid),.custom-option:has(.radio.is-invalid),.validate .custom-label-option:has(.radio:invalid),.validate .custom-option:has(.radio:invalid){--tw-border-opacity:1;border-color:var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity,1)))}.custom-label-option:has(.radio.is-valid),.custom-option:has(.radio.is-valid),.validate .custom-label-option:has(.radio:valid),.validate .custom-option:has(.radio:valid){--tw-border-opacity:1;border-color:var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity,1)))}.custom-option:has(.radio.is-valid):has(:checked),.validate .custom-option:has(.radio:valid):has(:checked){--tw-border-opacity:1;border-color:var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity,1)));--tw-ring-opacity:1;--tw-ring-color:var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity,1)))}.custom-label-option:has(.radio.is-valid),.validate .custom-label-option:has(.radio:valid){background-color:var(--fallback-su,oklch(var(--su)/.2))}.custom-label-option:has(.radio.is-valid):has(:checked),.validate .custom-label-option:has(.radio:valid):has(:checked){--tw-border-opacity:1;border-color:var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity,1)));background-color:var(--fallback-su,oklch(var(--su)/.2));--tw-ring-opacity:1;--tw-ring-color:var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity,1)))}.custom-label-option:has(.radio.is-invalid),.validate .custom-label-option:has(.radio:invalid){background-color:var(--fallback-er,oklch(var(--er)/.2))}.radio.is-valid,.validate .radio:valid{--tw-border-opacity:1!important;border-color:var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity,1)))!important}.radio.is-valid:hover,.validate .radio:valid:hover{--tw-ring-color:var(--fallback-su,oklch(var(--su)/0.1))!important}.radio.is-valid:focus-visible,.validate .radio:valid:focus-visible{outline-color:var(--fallback-su,oklch(var(--su)/.3))!important}.radio.is-valid:checked,.radio.is-valid[aria-checked=true],.validate .radio:valid:checked,.validate .radio:valid[aria-checked=true]{--tw-border-opacity:1!important;border-color:var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity,1)))!important;--tw-bg-opacity:1!important;background-color:var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity,1)))!important}.radio.is-invalid,.validate .radio:invalid{--tw-border-opacity:1!important;border-color:var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity,1)))!important}.radio.is-invalid:hover,.validate .radio:invalid:hover{--tw-ring-color:var(--fallback-er,oklch(var(--er)/0.1))!important}.radio.is-invalid:focus-visible,.validate .radio:invalid:focus-visible{outline-color:var(--fallback-er,oklch(var(--er)/.3))!important}.radio.is-invalid:checked,.radio.is-invalid[aria-checked=true],.validate .radio:invalid:checked,.validate .radio:invalid[aria-checked=true]{--tw-border-opacity:1!important;border-color:var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity,1)))!important;--tw-bg-opacity:1!important;background-color:var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity,1)))!important}.validate .label-text:has(+* .radio:valid),.validate .label-text:has(~.radio:valid),.validate .label:has(+* .radio:valid)>*,.validate .label:has(~.radio:valid)>*,.validate .radio:valid~.label,.validate .radio:valid~.label .label-text,.validate .radio:valid~.label-text,.validate :has(.radio:valid)~.label,.validate :has(.radio:valid)~.label .label-text,.validate :has(.radio:valid)~.label-text{--tw-text-opacity:1;color:var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity,1)))}.validate .label-text:has(+* .radio:invalid),.validate .label-text:has(~.radio:invalid),.validate .label:has(+* .radio:invalid)>*,.validate .label:has(~.radio:invalid)>*,.validate .radio:invalid~.label,.validate .radio:invalid~.label .label-text,.validate .radio:invalid~.label-text,.validate :has(.radio:invalid)~.label,.validate :has(.radio:invalid)~.label .label-text,.validate :has(.radio:invalid)~.label-text{--tw-text-opacity:1;color:var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity,1)))}.radio-inset.is-valid,.validate .radio-inset:valid{--tw-border-opacity:1!important;border-color:var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity,1)))!important}.radio-inset.is-valid:hover,.validate .radio-inset:valid:hover{--tw-ring-color:var(--fallback-su,oklch(var(--su)/0.1))!important}.radio-inset.is-valid:focus-visible,.validate .radio-inset:valid:focus-visible{outline-color:var(--fallback-su,oklch(var(--su)/.3))!important}.radio-inset.is-valid:checked,.radio-inset.is-valid[aria-checked=true],.validate .radio-inset:valid:checked,.validate .radio-inset:valid[aria-checked=true]{--tw-border-opacity:1!important;border-color:var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity,1)))!important}.radio-inset.is-invalid,.validate .radio-inset:invalid{--tw-border-opacity:1!important;border-color:var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity,1)))!important}.radio-inset.is-invalid:hover,.validate .radio-inset:invalid:hover{--tw-ring-color:var(--fallback-er,oklch(var(--er)/0.1))!important}.radio-inset.is-invalid:focus-visible,.validate .radio-inset:invalid:focus-visible{outline-color:var(--fallback-er,oklch(var(--er)/.3))!important}.radio-inset.is-invalid:checked,.radio-inset.is-invalid[aria-checked=true],.validate .radio-inset:invalid:checked,.validate .radio-inset:invalid[aria-checked=true]{--tw-border-opacity:1!important;border-color:var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity,1)))!important}.validate .label:has(+* .radio-inset:valid).label-text,.validate .label:has(+* .radio-inset:valid)>*,.validate .label:has(~.radio-inset:valid).label-text,.validate .label:has(~.radio-inset:valid)>*,.validate .radio-inset:valid~.label,.validate .radio-inset:valid~.label .label-text,.validate .radio-inset:valid~.label.label-text,.validate :has(.radio-inset:valid)~.label,.validate :has(.radio-inset:valid)~.label .label-text,.validate :has(.radio-inset:valid)~.label.label-text{--tw-text-opacity:1;color:var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity,1)))}.validate .label-text:has(+* .radio-inset:invalid),.validate .label-text:has(~.radio-inset:invalid),.validate .label:has(+* .radio-inset:invalid)>*,.validate .label:has(~.radio-inset:invalid)>*,.validate .radio-inset:invalid~.label,.validate .radio-inset:invalid~.label .label-text,.validate .radio-inset:invalid~.label-text,.validate :has(.radio-inset:invalid)~.label,.validate :has(.radio-inset:invalid)~.label .label-text,.validate :has(.radio-inset:invalid)~.label-text{--tw-text-opacity:1;color:var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity,1)))}.range::-webkit-slider-runnable-track{height:.5rem;width:100%;border-radius:9999px;background-color:var(--fallback-n,oklch(var(--n)/.1))}.range::-moz-range-track{height:.5rem;width:100%;border-radius:9999px;background-color:var(--fallback-n,oklch(var(--n)/.1))}.range::-webkit-slider-thumb{position:relative;top:50%;width:1rem;height:1rem;--tw-translate-y:-50%;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));border-radius:9999px;--tw-bg-opacity:1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)));--tw-shadow:0 2px 4px 0 var(--fallback-bs,oklch(var(--bs)/0.26));--tw-shadow-colored:0 2px 4px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);-webkit-transition-property:all;transition-property:all;transition-duration:.15s;transition-timing-function:cubic-bezier(.4,0,.2,1);appearance:none;box-sizing:border-box;-webkit-appearance:none;color:var(--range-shdw);border-color:var(--range-shdw);border-style:solid;border-width:3px}.range::-webkit-slider-thumb:hover{cursor:grab;box-shadow:0 0 0 2px var(--range-shdw)}.range::-webkit-slider-thumb:active,.range::-webkit-slider-thumb:hover{--tw-scale-x:1.25;--tw-scale-y:1.25;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.range::-webkit-slider-thumb:active{cursor:grabbing;box-shadow:0 0 0 3px var(--range-shdw)}.range::-moz-range-thumb{position:relative;width:1rem;height:1rem;border-radius:9999px;--tw-bg-opacity:1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)));--tw-shadow:0 2px 4px 0 var(--fallback-bs,oklch(var(--bs)/0.26));--tw-shadow-colored:0 2px 4px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);-moz-transition-property:all;transition-property:all;transition-duration:.15s;transition-timing-function:cubic-bezier(.4,0,.2,1);top:50%;color:var(--range-shdw);box-sizing:border-box;border-color:var(--range-shdw);border-style:solid;border-width:3px}.range::-moz-range-thumb:hover{cursor:grab;box-shadow:0 0 0 2px var(--range-shdw)}.range::-moz-range-thumb:active{cursor:grabbing;box-shadow:0 0 0 3px var(--range-shdw)}.range.disabled,.range:disabled,.range[disabled]{pointer-events:none;opacity:.3}[dir=rtl] .range::-webkit-slider-thumb{transform:translateY(-50%) scaleX(-1)}[dir=rtl] .range::-moz-range-thumb{transform:translateY(-50%) scaleX(-1)}[dir=rtl] .range::-moz-range-track,[dir=rtl] .range::-webkit-slider-runnable-track{direction:rtl}.select:hover{border-color:var(--fallback-bc,oklch(var(--bc)/.6))}.select:focus,.select:focus-within{--tw-border-opacity:1;border-color:var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity,1)));--tw-shadow:0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));--tw-shadow:var(--tw-shadow-colored);--tw-shadow-colored:0 1px 2px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);--tw-shadow-color:var(--fallback-p,oklch(var(--p)/0.22));--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);--tw-ring-opacity:1;--tw-ring-color:var(--fallback-p,oklch(var(--p)/var(--tw-ring-opacity,1)))}.select:focus-within~.select-filled-label,.select:focus-within~.select-floating-label,.select:focus~.select-filled-label,.select:focus~.select-floating-label{--tw-text-opacity:1;color:var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity,1)))}.select:focus-within.is-valid~.select-filled-label,.select:focus-within.is-valid~.select-floating-label,.select:focus.is-valid~.select-filled-label,.select:focus.is-valid~.select-floating-label{--tw-text-opacity:1;color:var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity,1)))}.select:focus-within.is-invalid~.select-filled-label,.select:focus-within.is-invalid~.select-floating-label,.select:focus.is-invalid~.select-filled-label,.select:focus.is-invalid~.select-floating-label{--tw-text-opacity:1;color:var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity,1)))}.select:focus-visible{outline:unset}.select.disabled,.select:disabled,.select[disabled]{pointer-events:none;border-width:0;border-color:var(--fallback-bc,oklch(var(--bc)/.1));background-color:var(--fallback-n,oklch(var(--n)/.1));color:var(--fallback-bc,oklch(var(--bc)/.5))}.select.disabled::-moz-placeholder,.select:disabled::-moz-placeholder,.select[disabled]::-moz-placeholder{color:var(--fallback-bc,oklch(var(--bc)/.5))}.select.disabled::placeholder,.select:disabled::placeholder,.select[disabled]::placeholder{color:var(--fallback-bc,oklch(var(--bc)/.5))}.select-multiple,.select[multiple],.select[size].select:not([size="1"]){overflow-y:auto;overflow-x:hidden;background-image:none}.select-multiple::-webkit-scrollbar-thumb,.select[multiple]::-webkit-scrollbar-thumb,.select[size].select:not([size="1"])::-webkit-scrollbar-thumb{border-radius:9999px;background-color:var(--fallback-s,oklch(var(--s)/.5))}.select-multiple::-webkit-scrollbar-thumb:hover,.select[multiple]::-webkit-scrollbar-thumb:hover,.select[size].select:not([size="1"])::-webkit-scrollbar-thumb:hover{background-color:var(--fallback-s,oklch(var(--s)/.8))}.select-multiple::-webkit-scrollbar-track,.select[multiple]::-webkit-scrollbar-track,.select[size].select:not([size="1"])::-webkit-scrollbar-track{border-radius:9999px;--tw-bg-opacity:1;background-color:var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity,1)))}.select-multiple::-webkit-scrollbar,.select[multiple]::-webkit-scrollbar,.select[size].select:not([size="1"])::-webkit-scrollbar{width:.5rem}.select.select-floating.disabled,.select.select-floating:disabled,.select.select-floating[disabled]{border-width:1px;--tw-bg-opacity:1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)))}.select.select-floating.disabled~.select-floating-label,.select.select-floating:disabled~.select-floating-label,.select.select-floating[disabled]~.select-floating-label{color:var(--fallback-bc,oklch(var(--bc)/.5))}.select.select-filled.disabled,.select.select-filled:disabled,.select.select-filled[disabled]{border-bottom-width:1px}.select.select-filled.disabled~.select-filled-label,.select.select-filled:disabled~.select-filled-label,.select.select-filled[disabled]~.select-filled-label{color:var(--fallback-bc,oklch(var(--bc)/.5))}[dir=rtl] .select{background-position:1.3em}.select.select-filled.select-lg~.select-filled-label,.select.select-floating.select-lg~.select-floating-label{font-size:.875rem;line-height:1.25rem}.input-group .select{border-width:0}.input-group .select:focus,.input-group .select:focus-within{--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)}.select.is-valid,.validate .select:valid{--tw-border-opacity:1;border-color:var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity,1)))}.select.is-valid:focus,.select.is-valid:focus-within,.validate .select:valid:focus,.validate .select:valid:focus-within{--tw-shadow-color:var(--fallback-su,oklch(var(--su)/0.22));--tw-shadow:var(--tw-shadow-colored);--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);--tw-ring-opacity:1;--tw-ring-color:var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity,1)))}.select.is-valid.select-filled:focus,.select.is-valid.select-filled:focus-within,.validate .select:valid.select-filled:focus,.validate .select:valid.select-filled:focus-within{--tw-border-opacity:1;border-color:var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity,1)));--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)}.select.is-valid~.select-filled-label,.select.is-valid~.select-floating-label,.validate .select:valid~.select-filled-label,.validate .select:valid~.select-floating-label{--tw-text-opacity:1;color:var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity,1)))}.select.is-valid:focus-within~.select-filled-focused,.select.is-valid:focus~.select-filled-focused,.validate .select:valid:focus-within~.select-filled-focused,.validate .select:valid:focus~.select-filled-focused{--tw-scale-x:1;--tw-scale-y:1;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));--tw-bg-opacity:1;background-color:var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity,1)))}.select:focus.is-valid~.select-filled-label,.select:focus.is-valid~.select-floating-label,.validate .select:focus:valid~.select-filled-label,.validate .select:focus:valid~.select-floating-label{--tw-text-opacity:1;color:var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity,1)))}.select:focus.is-invalid~.select-filled-label,.select:focus.is-invalid~.select-floating-label,.validate .select:focus:invalid~.select-filled-label,.validate .select:focus:invalid~.select-floating-label{--tw-text-opacity:1;color:var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity,1)))}.select.is-invalid,.validate .select:invalid{--tw-border-opacity:1;border-color:var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity,1)))}.select.is-invalid:focus,.select.is-invalid:focus-within,.validate .select:invalid:focus,.validate .select:invalid:focus-within{--tw-shadow-color:var(--fallback-er,oklch(var(--er)/0.22));--tw-shadow:var(--tw-shadow-colored);--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);--tw-ring-opacity:1;--tw-ring-color:var(--fallback-er,oklch(var(--er)/var(--tw-ring-opacity,1)))}.select.is-invalid.select-filled:focus,.select.is-invalid.select-filled:focus-within,.validate .select:invalid.select-filled:focus,.validate .select:invalid.select-filled:focus-within{--tw-border-opacity:1;border-color:var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity,1)));--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)}.select.is-invalid~.select-filled-label,.select.is-invalid~.select-floating-label,.validate .select:invalid~.select-filled-label,.validate .select:invalid~.select-floating-label{--tw-text-opacity:1;color:var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity,1)))}.select.is-invalid:focus-within~.select-filled-focused,.select.is-invalid:focus~.select-filled-focused,.validate .select:invalid:focus-within~.select-filled-focused,.validate .select:invalid:focus~.select-filled-focused{--tw-scale-x:1;--tw-scale-y:1;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));--tw-bg-opacity:1;background-color:var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity,1)))}.validate .label-text:has(+* .select:valid),.validate .label-text:has(~.select:valid).label-text,.validate .label:has(+* .select:valid)>*,.validate .label:has(~.select:valid)>*,.validate .select:valid~.label,.validate .select:valid~.label .label-text,.validate .select:valid~.label-text,.validate :has(.select:valid)~.label,.validate :has(.select:valid)~.label .label-text,.validate :has(.select:valid)~.label-text{--tw-text-opacity:1;color:var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity,1)))}.validate .label-text:has(+* .select:invalid),.validate .label-text:has(~.select:invalid),.validate .label:has(+* .select:invalid)>*,.validate .label:has(~.select:invalid)>*,.validate .select:invalid~.label,.validate .select:invalid~.label .label-text,.validate .select:invalid~.label-text,.validate :has(.select:invalid)~.label,.validate :has(.select:invalid)~.label .label-text,.validate :has(.select:invalid)~.label-text{--tw-text-opacity:1;color:var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity,1)))}.validate .select:valid+*>.success-message,.validate .select:valid~.success-message,.validate :has(>.select:valid)>*>.success-message,.validate :has(>.select:valid)~.success-message{display:block}.validate .select:invalid+*>.error-message,.validate .select:invalid~.error-message,.validate :has(>.select:invalid)>*>.error-message,.validate :has(>.select:invalid)~.error-message{display:block}@keyframes skeleton{0%{background-position:150%}to{background-position:-50%}}[dir=rtl] .switch{--handleoffsetcalculator:calc(var(--handleoffset)*1)}.switch:focus-visible{outline-style:solid;outline-width:2px;outline-offset:0;outline-color:var(--fallback-n,oklch(var(--n)/.3))}.switch:checked,.switch[aria-checked=true],.switch[checked=true]{background-image:none;--handleoffsetcalculator:var(--handleoffset);--tw-text-opacity:1;color:var(--fallback-n,oklch(var(--n)/var(--tw-text-opacity,1)))}[dir=rtl] .switch:checked,[dir=rtl] .switch[aria-checked=true],[dir=rtl] .switch[checked=true]{--handleoffsetcalculator:calc(var(--handleoffset)*-1)}.switch:indeterminate{--tw-text-opacity:1;color:var(--fallback-n,oklch(var(--n)/var(--tw-text-opacity,1)));box-shadow:calc(var(--handleoffset)/2) 0 0 3px var(--tglbg) inset,calc(var(--handleoffset)/-2) 0 0 3px var(--tglbg) inset,0 0 0 3px var(--tglbg) inset}[dir=rtl] .switch:indeterminate{box-shadow:calc(var(--handleoffset)/2) 0 0 3px var(--tglbg) inset,calc(var(--handleoffset)/-2) 0 0 3px var(--tglbg) inset,0 0 0 3px var(--tglbg) inset}.switch-primary:checked,.switch-primary[aria-checked=true],.switch-primary[checked=true]{--tglbg:var(--fallback-p,oklch(var(--p)/1))}.switch-primary:checked:focus-visible,.switch-primary[aria-checked=true]:focus-visible,.switch-primary[checked=true]:focus-visible{outline-color:var(--fallback-p,oklch(var(--p)/.3))}.switch.disabled,.switch:disabled,.switch[disabled]{pointer-events:none;background-color:transparent;opacity:.4}.switch-outline.switch-primary:checked,.switch-outline.switch-primary[aria-checked=true],.switch-outline.switch-primary[checked=true]{--tglbg:var(--fallback-b1,oklch(var(--b1)/1));--tw-border-opacity:1;border-color:var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity,1)));--tw-bg-opacity:1;background-color:var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity,1)))}.switch-outline.switch-primary:checked:focus-visible,.switch-outline.switch-primary[aria-checked=true]:focus-visible,.switch-outline.switch-primary[checked=true]:focus-visible{outline-color:var(--fallback-p,oklch(var(--p)/.3))}.switch-outline.disabled,.switch-outline:disabled,.switch-outline[disabled]{pointer-events:none;border-color:currentColor;background-color:transparent;opacity:.3;--switchhandleborder:0 0 0 3px var(--fallback-bc,oklch(var(--bc)/1)) inset,var(--handleoffsetcalculator) 0 0 3px var(--fallback-bc,oklch(var(--bc)/1)) inset}.switch.is-valid,.validate .switch:valid{--tglbg:var(--fallback-su,oklch(var(--su)/1))}.switch.is-valid:focus-visible,.validate .switch:valid:focus-visible{outline-color:var(--fallback-su,oklch(var(--su)/.3))!important}.switch.is-valid:checked,.switch.is-valid[aria-checked=true],.switch.is-valid[checked=true],.validate .switch:valid:checked,.validate .switch:valid[aria-checked=true],.validate .switch:valid[checked=true]{--tglbg:var(--fallback-su,oklch(var(--su)/1))}.switch.is-invalid,.validate .switch:invalid{--tglbg:var(--fallback-er,oklch(var(--er)/1))}.switch.is-invalid:focus-visible,.validate .switch:invalid:focus-visible{outline-color:var(--fallback-er,oklch(var(--er)/.3))!important}.switch.is-invalid:checked,.switch.is-invalid[aria-checked=true],.switch.is-invalid[checked=true],.validate .switch:invalid:checked,.validate .switch:invalid[aria-checked=true],.validate .switch:invalid[checked=true]{--tglbg:var(--fallback-er,oklch(var(--er)/1))}.validate .label-text:has(+* .switch:valid),.validate .label-text:has(~.switch:valid),.validate .label:has(+* .switch:valid)>*,.validate .label:has(~.switch:valid)>*,.validate .switch:valid~.label,.validate .switch:valid~.label .label-text,.validate .switch:valid~.label-text,.validate :has(.switch:valid)~.label,.validate :has(.switch:valid)~.label .label-text,.validate :has(.switch:valid)~.label-text{--tw-text-opacity:1;color:var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity,1)))}.validate .label-text:has(+* .switch:invalid),.validate .label-text:has(~.switch:invalid),.validate .label:has(+* .switch:invalid)>*,.validate .label:has(~.switch:invalid)>*,.validate .switch:invalid~.label,.validate .switch:invalid~.label .label-text,.validate .switch:invalid~.label-text,.validate :has(.switch:invalid)~.label,.validate :has(.switch:invalid)~.label .label-text,.validate :has(.switch:invalid)~.label-text{--tw-text-opacity:1;color:var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity,1)))}.validate .switch:valid+*>.success-message,.validate .switch:valid~.success-message,.validate :has(>.switch:valid)>*>.success-message,.validate :has(>.switch:valid)~.success-message{display:block}.validate .switch:invalid+*>.error-message,.validate .switch:invalid~.error-message,.validate :has(>.switch:invalid)>*>.error-message,.validate :has(>.switch:invalid)~.error-message{display:block}.switch-outline.is-valid,.validate .switch-outline:valid{--tglbg:var(--fallback-b1,oklch(var(--b1)/1));--tw-border-opacity:1;border-color:var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity,1)));--tw-bg-opacity:1;background-color:var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity,1)))}.switch-outline.is-valid:checked,.switch-outline.is-valid[aria-checked=true],.switch-outline.is-valid[checked=true],.validate .switch-outline:valid:checked,.validate .switch-outline:valid[aria-checked=true],.validate .switch-outline:valid[checked=true]{--tglbg:var(--fallback-b1,oklch(var(--b1)/1));--tw-border-opacity:1;border-color:var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity,1)));--tw-bg-opacity:1;background-color:var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity,1)))}.switch-outline.is-invalid,.validate .switch-outline:invalid{--tglbg:var(--fallback-b1,oklch(var(--b1)/1));--tw-border-opacity:1;border-color:var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity,1)));--tw-bg-opacity:1;background-color:var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity,1)))}.switch-outline.is-invalid:checked,.switch-outline.is-invalid[aria-checked=true],.switch-outline.is-invalid[checked=true],.validate .switch-outline:invalid:checked,.validate .switch-outline:invalid[aria-checked=true],.validate .switch-outline:invalid[checked=true]{--tglbg:var(--fallback-b1,oklch(var(--b1)/1));--tw-border-opacity:1;border-color:var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity,1)));--tw-bg-opacity:1;background-color:var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity,1)))}.validate .label-text:has(+* .switch-outline:valid),.validate .label-text:has(~.switch-outline:valid),.validate .label:has(+* .switch-outline:valid)>*,.validate .label:has(~.switch-outline:valid)>*,.validate .switch-outline:valid~.label,.validate .switch-outline:valid~.label .label-text,.validate .switch-outline:valid~.label-text,.validate :has(.switch-outline:valid)~.label,.validate :has(.switch-outline:valid)~.label .label-text,.validate :has(.switch-outline:valid)~.label-text{--tw-text-opacity:1;color:var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity,1)))}.validate .label-text:has(+* .switch-outline:invalid),.validate .label-text:has(~.switch-outline:invalid),.validate .label:has(+* .switch-outline:invalid)>*,.validate .label:has(~.switch-outline:invalid)>*,.validate .switch-outline:invalid~.label,.validate .switch-outline:invalid~.label .label-text,.validate .switch-outline:invalid~.label-text,.validate :has(.switch-outline:invalid)~.label,.validate :has(.switch-outline:invalid)~.label .label-text,.validate :has(.switch-outline:invalid)~.label-text{--tw-text-opacity:1;color:var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity,1)))}.tabs-lifted>.tab:focus-visible{border-end-end-radius:0;border-end-start-radius:0}.tab.tab-active:not([disabled]){--tw-border-opacity:1;border-color:var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity,1)));color:var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity,1)));--tw-text-opacity:1}.tab:focus,.tab:focus-visible{outline:2px solid transparent;outline-offset:2px}.tab[disabled]{pointer-events:none;border-color:var(--fallback-bc,oklch(var(--bc)/var(--tw-border-opacity,1)));--tw-border-opacity:0.3;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)));--tw-text-opacity:0.4}.tabs-bordered>.tab{border-color:var(--fallback-bc,oklch(var(--bc)/.1));border-style:solid;border-bottom-width:calc(var(--tab-border, 1px) + 1px)}.tabs-lifted>.tab{border:var(--tab-border,1px) solid transparent;border-width:0 0 var(--tab-border,1px) 0;border-radius:var(--tab-radius,.375rem);border-bottom-color:var(--tab-border-color);padding-inline-start:var(--tab-padding,1rem);padding-inline-end:var(--tab-padding,1rem);padding-top:var(--tab-border,1px)}.tabs-lifted>.tab.tab-active:not([disabled]){background-color:var(--tab-bg);border-width:var(--tab-border,1px) var(--tab-border,1px) 0 var(--tab-border,1px);border-color:var(--tab-border-color);border-end-start-radius:0;border-end-end-radius:0;padding-inline-start:calc(var(--tab-padding, 1rem) - var(--tab-border, 1px));padding-inline-end:calc(var(--tab-padding, 1rem) - var(--tab-border, 1px));padding-bottom:var(--tab-border,1px);padding-top:0}.tabs-lifted>.tab.tab-active:not([disabled]):before{z-index:1;content:"";display:block;position:absolute;width:calc(100% + var(--tab-radius, .375rem)*2);height:var(--tab-radius,.375rem);bottom:0;background-size:var(--tab-radius,.375rem);background-position:0 0,100% 0;background-repeat:no-repeat;--tab-grad:calc(69% - var(--tab-border, 1px));--radius-start:radial-gradient(circle at top left,transparent var(--tab-grad),var(--tab-border-color) calc(var(--tab-grad) + 0.25px),var(--tab-border-color) calc(var(--tab-grad) + var(--tab-border, 1px)),var(--tab-bg) calc(var(--tab-grad) + var(--tab-border, 1px) + 0.25px));--radius-end:radial-gradient(circle at top right,transparent var(--tab-grad),var(--tab-border-color) calc(var(--tab-grad) + 0.25px),var(--tab-border-color) calc(var(--tab-grad) + var(--tab-border, 1px)),var(--tab-bg) calc(var(--tab-grad) + var(--tab-border, 1px) + 0.25px));background-image:var(--radius-start),var(--radius-end)}.tabs-lifted>.tab.tab-active:not([disabled]):first-child:before{background-image:var(--radius-end);background-position:100% 0}.tabs-lifted>.tab.tab-active:not([disabled]):last-child:before,[dir=rtl] .tabs-lifted>.tab.tab-active:not([disabled]):first-child:before{background-image:var(--radius-start);background-position:0 0}[dir=rtl] .tabs-lifted>.tab.tab-active:not([disabled]):last-child:before{background-image:var(--radius-end);background-position:100% 0}.table:where([dir=rtl],[dir=rtl] *){text-align:right}.table::-webkit-scrollbar-thumb{background-color:var(--fallback-s,oklch(var(--s)/.5))}.table::-webkit-scrollbar-thumb:hover{background-color:var(--fallback-s,oklch(var(--s)/.8))}.table::-webkit-scrollbar-track{--tw-bg-opacity:1;background-color:var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity,1)))}.table::-webkit-scrollbar{width:.5rem}.table :where(th,td){text-wrap:nowrap;padding:.55rem 1.25rem;vertical-align:middle;font-size:1rem;line-height:1.375rem}.table :where(th){text-wrap:nowrap;font-size:.875rem;line-height:1.25rem;font-weight:500;text-transform:uppercase;--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)));letter-spacing:1px}.table tr.active,.table tr.active:nth-child(2n),.table-striped tbody tr:nth-child(2n),.table-striped tr.active,.table-striped tr.active:nth-child(2n),.table-striped-striped tbody tr:nth-child(2n){background-color:var(--fallback-bc,oklch(var(--bc)/.1))}.table :where(thead,tbody) :where(tr:first-child:last-child),.table :where(thead,tbody) :where(tr:not(:last-child)){border-bottom-width:1px;border-color:var(--fallback-bc,oklch(var(--bc)/.25))}.table :where(thead,tfoot,th){white-space:nowrap;--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)))}textarea{background-color:transparent}textarea:focus{outline-width:0;outline-color:transparent}textarea:focus-visible{outline:unset}.textarea::-moz-placeholder{color:var(--fallback-bc,oklch(var(--bc)/.5))}.textarea::placeholder{color:var(--fallback-bc,oklch(var(--bc)/.5))}.textarea::-webkit-scrollbar-thumb{border-radius:9999px;background-color:var(--fallback-s,oklch(var(--s)/.5))}.textarea::-webkit-scrollbar-thumb:hover{background-color:var(--fallback-s,oklch(var(--s)/.8))}.textarea::-webkit-scrollbar-track{border-radius:9999px;background-color:transparent}.textarea::-webkit-scrollbar{width:.5rem}.textarea:focus,s .textarea:focus-within{--tw-border-opacity:1;border-color:var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity,1)));--tw-shadow:0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));--tw-shadow:var(--tw-shadow-colored);--tw-shadow-colored:0 1px 2px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);--tw-shadow-color:var(--fallback-p,oklch(var(--p)/0.22));--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);--tw-ring-opacity:1;--tw-ring-color:var(--fallback-p,oklch(var(--p)/var(--tw-ring-opacity,1)))}.textarea.disabled,.textarea:disabled,.textarea[disabled]{pointer-events:none;border-width:0;border-color:var(--fallback-bc,oklch(var(--bc)/.1));background-color:var(--fallback-n,oklch(var(--n)/.1));color:var(--fallback-bc,oklch(var(--bc)/.5))}.textarea.textarea-floating.disabled,.textarea.textarea-floating:disabled,.textarea.textarea-floating[disabled]{border-width:1px;--tw-bg-opacity:1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)))}.textarea.textarea-floating.disabled~.textarea-floating-label,.textarea.textarea-floating:disabled~.textarea-floating-label,.textarea.textarea-floating[disabled]~.textarea-floating-label{color:var(--fallback-bc,oklch(var(--bc)/.5))}.textarea.textarea-filled.disabled,.textarea.textarea-filled:disabled,.textarea.textarea-filled[disabled]{border-bottom-width:1px}.textarea.textarea-filled.disabled~.textarea-filled-label,.textarea.textarea-filled:disabled~.textarea-filled-label,.textarea.textarea-filled[disabled]~.textarea-filled-label{color:var(--fallback-bc,oklch(var(--bc)/.5))}.input-group .textarea{border-width:0}.input-group .textarea:focus,.input-group .textarea:focus-within{--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)}.textarea.is-valid,.validate .textarea:valid{--tw-border-opacity:1;border-color:var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity,1)))}.textarea.is-valid:focus,.textarea.is-valid:focus-within,.validate .textarea:valid:focus,.validate .textarea:valid:focus-within{--tw-shadow-color:var(--fallback-su,oklch(var(--su)/0.22));--tw-shadow:var(--tw-shadow-colored);--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);--tw-ring-opacity:1;--tw-ring-color:var(--fallback-su,oklch(var(--su)/var(--tw-ring-opacity,1)))}.textarea.is-valid.textarea-filled:focus,.textarea.is-valid.textarea-filled:focus-within,.validate .textarea:valid.textarea-filled:focus,.validate .textarea:valid.textarea-filled:focus-within{--tw-border-opacity:1;border-color:var(--fallback-su,oklch(var(--su)/var(--tw-border-opacity,1)));--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)}.textarea.is-valid~.textarea-filled-label,.textarea.is-valid~.textarea-floating-label,.validate .textarea:valid~.textarea-filled-label,.validate .textarea:valid~.textarea-floating-label{--tw-text-opacity:1;color:var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity,1)))}.textarea.is-valid:focus-within~.textarea-filled-focused,.textarea.is-valid:focus~.textarea-filled-focused,.validate .textarea:valid:focus-within~.textarea-filled-focused,.validate .textarea:valid:focus~.textarea-filled-focused{--tw-bg-opacity:1;background-color:var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity,1)))}.textarea:focus.is-valid~.textarea-filled-label,.textarea:focus.is-valid~.textarea-floating-label,.validate .textarea:focus:valid~.textarea-filled-label,.validate .textarea:focus:valid~.textarea-floating-label{--tw-text-opacity:1;color:var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity,1)))}.textarea:focus.is-invalid~.textarea-filled-label,.textarea:focus.is-invalid~.textarea-floating-label,.validate .textarea:focus:invalid~.textarea-filled-label,.validate .textarea:focus:invalid~.textarea-floating-label{--tw-text-opacity:1;color:var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity,1)))}.textarea.is-invalid,.validate .textarea:invalid{--tw-border-opacity:1;border-color:var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity,1)))}.textarea.is-invalid:focus,.textarea.is-invalid:focus-within,.validate .textarea:invalid:focus,.validate .textarea:invalid:focus-within{--tw-shadow-color:var(--fallback-er,oklch(var(--er)/0.22));--tw-shadow:var(--tw-shadow-colored);--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);--tw-ring-opacity:1;--tw-ring-color:var(--fallback-er,oklch(var(--er)/var(--tw-ring-opacity,1)))}.textarea.is-invalid.textarea-filled:focus,.textarea.is-invalid.textarea-filled:focus-within,.validate .textarea:invalid.textarea-filled:focus,.validate .textarea:invalid.textarea-filled:focus-within{--tw-border-opacity:1;border-color:var(--fallback-er,oklch(var(--er)/var(--tw-border-opacity,1)));--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000);--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)}.textarea.is-invalid~.textarea-filled-label,.textarea.is-invalid~.textarea-floating-label,.validate .textarea:invalid~.textarea-filled-label,.validate .textarea:invalid~.textarea-floating-label{--tw-text-opacity:1;color:var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity,1)))}.textarea.is-invalid:focus-within~.textarea-filled-focused,.textarea.is-invalid:focus~.textarea-filled-focused,.validate .textarea:invalid:focus-within~.textarea-filled-focused,.validate .textarea:invalid:focus~.textarea-filled-focused{--tw-bg-opacity:1;background-color:var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity,1)))}.validate .label-text:has(+* .textarea:valid),.validate .label-text:has(~.textarea:valid),.validate .label:has(+* .textarea:valid)>*,.validate .label:has(~.textarea:valid)>*,.validate .textarea:valid~.label,.validate .textarea:valid~.label .label-text,.validate .textarea:valid~.label-text,.validate :has(.textarea:valid)~.label,.validate :has(.textarea:valid)~.label .label-text,.validate :has(.textarea:valid)~.label-text{--tw-text-opacity:1;color:var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity,1)))}.validate .label-text:has(+* .textarea:invalid),.validate .label-text:has(~.textarea:invalid),.validate .label:has(+* .textarea:invalid)>*,.validate .label:has(~.textarea:invalid)>*,.validate .textarea:invalid~.label,.validate .textarea:invalid~.label .label-text,.validate .textarea:invalid~.label-text,.validate :has(.textarea:invalid)~.label,.validate :has(.textarea:invalid)~.label .label-text,.validate :has(.textarea:invalid)~.label-text{--tw-text-opacity:1;color:var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity,1)))}.validate .textarea:valid+*>.success-message,.validate .textarea:valid~.success-message,.validate :has(>.textarea:valid)>*>.success-message,.validate :has(>.textarea:valid)~.success-message{display:block}.validate .textarea:invalid+*>.error-message,.validate .textarea:invalid~.error-message,.validate :has(>.textarea:invalid)>*>.error-message,.validate :has(>.textarea:invalid)~.error-message{display:block}.apexcharts-tooltip-series-group.apexcharts-active{padding-bottom:0!important}.apexcharts-tooltip-title{border-top-left-radius:.5rem;border-top-right-radius:.5rem;border-color:var(--fallback-bc,oklch(var(--bc)/.4))!important;--tw-bg-opacity:1!important;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)))!important;padding-left:.625rem!important;padding-right:.625rem!important;font-size:.875rem!important;line-height:1.25rem!important;font-weight:600!important;--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)))}.flatpickr-calendar{visibility:hidden;position:absolute;display:flex;max-width:18rem;touch-action:manipulation;flex-direction:row;gap:.375rem;overflow:hidden;border-radius:var(--rounded-box,.5rem);border-color:transparent;--tw-bg-opacity:1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)));--tw-shadow:0 4px 6px -1px var(--fallback-bs,oklch(var(--bs)/0.2));--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.flatpickr-calendar.hasWeeks{max-width:21rem}.flatpickr-calendar:after,.flatpickr-calendar:before{content:none}.flatpickr-current-month{position:absolute;inset-inline-start:1rem;display:flex;width:auto;align-items:center;justify-content:center;gap:.25rem;padding-top:0;font-size:1rem;line-height:1.375rem;font-weight:500;--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)))}.flatpickr-current-month:where([dir=rtl],[dir=rtl] *){inset-inline-end:1rem;inset-inline-start:auto}.flatpickr-current-month .flatpickr-monthDropdown-months,.flatpickr-current-month input.cur-year{display:flex;cursor:pointer;align-items:center;justify-content:center;border-radius:0;border-width:0;vertical-align:middle;font-weight:500;outline:2px solid transparent;outline-offset:2px;font-size:inherit;font-family:inherit;line-height:inherit;color:inherit}.flatpickr-current-month span.cur-month{margin:0;font-weight:500}.flatpickr-current-month span.cur-month:hover{background-color:transparent}.flatpickr-current-month .numInputWrapper{display:inline-block;width:6ch}.flatpickr-current-month .numInputWrapper:hover{background-color:transparent}.flatpickr-current-month .flatpickr-monthDropdown-months{position:relative;margin-top:-1px;cursor:pointer;--tw-bg-opacity:1!important;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)))!important;padding:0}.flatpickr-current-month input.cur-year{margin:0;height:1.25rem;cursor:default;padding-inline-start:.25rem}.flatpickr-current-month input.cur-year:focus{outline:2px solid transparent;outline-offset:2px}.flatpickr-current-month input.cur-year[disabled],.flatpickr-current-month input.cur-year[disabled]:hover{pointer-events:none;background-color:transparent}.flatpickr-months .flatpickr-month{position:relative;display:flex;height:3.75rem;-webkit-user-select:none;-moz-user-select:none;user-select:none;align-items:center;overflow:hidden;border-top-left-radius:var(--rounded-box,.5rem);border-top-right-radius:var(--rounded-box,.5rem);padding-left:1rem;padding-right:1rem;text-align:center}.flatpickr-months .flatpickr-next-month,.flatpickr-months .flatpickr-prev-month{position:absolute;top:1rem;display:flex;width:1.75rem;height:1.75rem;align-items:center;justify-content:center;border-radius:9999px;background-color:var(--fallback-n,oklch(var(--n)/.1));padding:0;--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)));text-decoration-line:none}.flatpickr-months .flatpickr-next-month:hover,.flatpickr-months .flatpickr-prev-month:hover{fill:var(--fallback-bc,oklch(var(--bc)/.9))}.flatpickr-months .flatpickr-next-month:where([dir=rtl],[dir=rtl] *),.flatpickr-months .flatpickr-prev-month:where([dir=rtl],[dir=rtl] *){--tw-rotate:180deg;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.flatpickr-months .flatpickr-next-month svg,.flatpickr-months .flatpickr-prev-month svg{width:.75rem;height:.75rem;fill:var(--fallback-bc,oklch(var(--bc)/.9));vertical-align:middle;--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)))}.flatpickr-months .flatpickr-next-month:hover svg,.flatpickr-months .flatpickr-prev-month:hover svg{fill:var(--fallback-bc,oklch(var(--bc)/.9))}.flatpickr-months .flatpickr-prev-month.flatpickr-prev-month{inset-inline-end:50px;inset-inline-start:auto}.flatpickr-months .flatpickr-prev-month.flatpickr-prev-month:where([dir=rtl],[dir=rtl] *){inset-inline-end:auto;inset-inline-start:3.5rem;--tw-skew-x:-1deg;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.flatpickr-months .flatpickr-next-month.flatpickr-prev-month{inset-inline-end:0;inset-inline-start:0}.flatpickr-months .flatpickr-next-month.flatpickr-next-month{inset-inline-end:1rem}.flatpickr-months .flatpickr-next-month.flatpickr-next-month:where([dir=rtl],[dir=rtl] *){inset-inline-end:auto;inset-inline-start:1rem;--tw-skew-x:-1deg;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.flatpickr-weekdays{display:flex;width:100%;align-items:center;overflow:hidden;padding-left:.75rem;padding-right:.75rem;text-align:center}.flatpickr-weekdaycontainer{display:flex;width:100%}.flatpickr-weekwrapper .flatpickr-weekday,span.flatpickr-weekday{margin:0;display:block;cursor:default;text-align:center;font-size:.875rem;line-height:1.25rem;font-weight:500;--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)))}.flatpickr-days{position:relative;display:flex;width:100%;max-width:18rem;flex-wrap:wrap;overflow:hidden;padding:.5rem .625rem}.flatpickr-days:focus{outline:2px solid transparent;outline-offset:2px}.flatpickr-calendar.hasTime .flatpickr-days{border-bottom-right-radius:0;border-bottom-left-radius:0;border-bottom-width:0}.flatpickr-days .dayContainer{display:flex;min-width:100%;max-width:100%;flex-wrap:wrap;justify-content:center;row-gap:.125rem;padding:0;opacity:1;outline:2px solid transparent;outline-offset:2px}.flatpickr-day{position:relative;margin:0;display:flex;width:2.375rem;height:2.375rem;max-width:2.375rem;cursor:pointer;align-items:center;justify-content:center;text-align:center;font-size:1rem;line-height:1.375rem;--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)))}.flatpickr-day.today:not(.selected){border-color:transparent;background-color:var(--fallback-p,oklch(var(--p)/.2));--tw-text-opacity:1;color:var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity,1)))}.flatpickr-day.inRange,.flatpickr-day.nextMonthDay.inRange,.flatpickr-day.nextMonthDay.today.inRange,.flatpickr-day.nextMonthDay:focus,.flatpickr-day.nextMonthDay:hover,.flatpickr-day.prevMonthDay.inRange,.flatpickr-day.prevMonthDay.today.inRange,.flatpickr-day.prevMonthDay:focus,.flatpickr-day.prevMonthDay:hover,.flatpickr-day.today.inRange,.flatpickr-day:focus,.flatpickr-day:hover{cursor:pointer;outline:2px solid transparent;outline-offset:2px}.flatpickr-day.nextMonthDay:focus:not(.selected,.today),.flatpickr-day.nextMonthDay:hover:not(.selected,.today),.flatpickr-day.prevMonthDay:focus:not(.selected,.today),.flatpickr-day.prevMonthDay:hover:not(.selected,.today),.flatpickr-day:focus:not(.selected,.today),.flatpickr-day:hover:not(.selected,.today){border-color:transparent;background-color:var(--fallback-n,oklch(var(--n)/.1))}.flatpickr-day.endRange,.flatpickr-day.endRange.inRange,.flatpickr-day.endRange.nextMonthDay,.flatpickr-day.endRange.prevMonthDay,.flatpickr-day.endRange:focus,.flatpickr-day.endRange:hover,.flatpickr-day.selected,.flatpickr-day.selected.inRange,.flatpickr-day.selected.nextMonthDay,.flatpickr-day.selected.prevMonthDay,.flatpickr-day.selected:focus,.flatpickr-day.selected:hover,.flatpickr-day.startRange,.flatpickr-day.startRange.inRange,.flatpickr-day.startRange.nextMonthDay,.flatpickr-day.startRange.prevMonthDay,.flatpickr-day.startRange:focus,.flatpickr-day.startRange:hover{border-color:transparent;--tw-bg-opacity:1;background-color:var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity,1)));--tw-text-opacity:1;color:var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity,1)));--tw-shadow:0 2px 4px 0 var(--fallback-bs,oklch(var(--bs)/0.26));--tw-shadow-colored:0 2px 4px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.flatpickr-day.inRange:not(.startRange):not(.endRange){border-radius:0;border-color:transparent}.flatpickr-day.disabled,.flatpickr-day.disabled:hover{pointer-events:none;color:var(--fallback-bc,oklch(var(--bc)/.5))}.flatpickr-day.disabled,.flatpickr-day.disabled:hover,.flatpickr-day.nextMonthDay,.flatpickr-day.notAllowed,.flatpickr-day.notAllowed.nextMonthDay,.flatpickr-day.notAllowed.prevMonthDay,.flatpickr-day.prevMonthDay{border-color:transparent;background-color:transparent}.flatpickr-day.week.selected{border-radius:0}.flatpickr-day.endRange.startRange,.flatpickr-day.selected.startRange,.flatpickr-day.startRange.startRange{border-end-end-radius:0;border-start-end-radius:0}.flatpickr-day.endRange.endRange,.flatpickr-day.selected.endRange,.flatpickr-day.startRange.endRange{border-end-start-radius:0;border-start-start-radius:0}.flatpickr-day.flatpickr-disabled,.flatpickr-day.flatpickr-disabled:hover,.flatpickr-day.nextMonthDay,.flatpickr-day.notAllowed,.flatpickr-day.notAllowed.nextMonthDay,.flatpickr-day.notAllowed.prevMonthDay,.flatpickr-day.prevMonthDay{color:var(--fallback-bc,oklch(var(--bc)/.5))}.flatpickr-day.inRange,.flatpickr-day.inRange:hover{background-color:var(--fallback-p,oklch(var(--p)/.2));--tw-text-opacity:1;color:var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity,1)));box-shadow:unset}.flatpickr-day.endRange.startRange+.endRange:not(:nth-child(7n+1)),.flatpickr-day.selected.startRange+.endRange:not(:nth-child(7n+1)),.flatpickr-day.startRange.startRange+.endRange:not(:nth-child(7n+1)){box-shadow:unset}.flatpickr-weekwrapper span.flatpickr-day,.flatpickr-weekwrapper span.flatpickr-day:hover{margin:0;display:flex;width:2.375rem;height:2.375rem;max-width:2.375rem;cursor:pointer;align-items:center;justify-content:center;text-align:center;font-size:1rem;line-height:1.375rem;--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)))}.flatpickr-weekwrapper span.flatpickr-day:hover:not(:last-child),.flatpickr-weekwrapper span.flatpickr-day:not(:last-child){margin-bottom:.125rem}.flatpickr-weekwrapper .flatpickr-weeks{padding-top:.5rem;padding-bottom:.5rem;padding-inline-end:0;padding-inline-start:.625rem;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.flatpickr-weekwrapper .flatpickr-weekday{padding-inline-start:.75rem;line-height:28px}.flatpickr-calendar .flatpickr-innerContainer:has(>.flatpickr-weekwrapper)>.flatpickr-rContainer .flatpickr-days,.flatpickr-calendar .flatpickr-innerContainer:has(>.flatpickr-weekwrapper)>.flatpickr-rContainer .flatpickr-weekdays{padding-inline-start:0}.flatpickr-calendar.hasTime .flatpickr-time{height:100%;border-color:var(--fallback-bc,oklch(var(--bc)/.1));padding:.75rem 1.125rem}.flatpickr-time{max-height:unset;gap:.5rem;line-height:30px}.flatpickr-time .numInputWrapper{border-radius:var(--rounded-btn,.375rem);height:inherit}.flatpickr-time .flatpickr-am-pm:focus,.flatpickr-time .flatpickr-am-pm:hover,.flatpickr-time input:focus,.flatpickr-time input:hover{background:unset}.flatpickr-time .numInputWrapper span.arrowUp{top:10%}.flatpickr-time:after{content:none}.flatpickr-calendar.hasTime.noCalendar>.flatpickr-time{border-color:transparent}.flatpickr-time input.flatpickr-hour{font-weight:400}.flatpickr-time input.flatpickr-hour,.flatpickr-time input.flatpickr-minute{height:auto;border-radius:var(--rounded-btn,.375rem);border-width:1px;border-style:solid;border-color:var(--fallback-bc,oklch(var(--bc)/.1))}.flatpickr-time .flatpickr-am-pm,.flatpickr-time input.flatpickr-hour,.flatpickr-time input.flatpickr-minute{font-size:1rem;line-height:1.375rem;line-height:inherit;--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)))}.flatpickr-time .flatpickr-am-pm{display:flex;align-items:center;justify-content:center;border-radius:var(--rounded-btn,.375rem);border-width:1px;border-color:var(--fallback-bc,oklch(var(--bc)/.1))}.numInputWrapper span:hover,.numInputWrapper:hover{background:unset}.flatpickr-current-month .numInputWrapper span.arrowUp:after,.flatpickr-time .numInputWrapper span.arrowUp:after{border-bottom-color:var(--fallback-bc,oklch(var(--bc)/.8))}.flatpickr-current-month .numInputWrapper span.arrowDown:after,.flatpickr-time .numInputWrapper span.arrowDown:after{border-top-color:var(--fallback-bc,oklch(var(--bc)/.8))}.numInputWrapper span{border-width:0}.flatpickr-calendar:not(.inline):not(.open){display:none}:root{--fc-page-bg-color:var(--fallback-b1,oklch(var(--b1)/1));--fc-neutral-bg-color:var(--fallback-n,oklch(var(--n)/0.3));--fc-neutral-text-color:var(--fallback-nc,oklch(var(--nc)/1));--fc-border-color:var(--fallback-bc,oklch(var(--bc)/0.16));--fc-button-text-color:var(--fallback-p,oklch(var(--p)/1));--fc-button-bg-color:var(--fallback-p,oklch(var(--p)/0.16));--fc-button-border-color:var(--fallback-p,oklch(var(--p)/0.16));--fc-button-hover-bg-color:var(--fallback-p,oklch(var(--p)/0.24));--fc-button-hover-border-color:var(--fallback-p,oklch(var(--p)/0.24));--fc-button-active-bg-color:var(--fallback-p,oklch(var(--p)/0.24));--fc-button-active-border-color:var(--fallback-p,oklch(var(--p)/0.24));--fc-event-bg-color:var(--fallback-p,oklch(var(--p)/0.16));--fc-event-border-color:var(--fallback-p,oklch(var(--p)/1));--fc-event-text-color:var(--fallback-p,oklch(var(--p)/1));--fc-event-selected-overlay-color:var(--fallback-s,oklch(var(--s)/0.16));--fc-list-event-dot-width:8px;--fc-list-event-hover-bg-color:var(--fallback-s,oklch(var(--s)/0.16));--fc-more-link-bg-color:var(--fallback-s,oklch(var(--s)/0.16));--fc-more-link-text-color:var(--fallback-s,oklch(var(--s)/1));--fc-event-resizer-thickness:8px;--fc-event-resizer-dot-total-width:8px;--fc-event-resizer-dot-border-width:1px;--fc-non-business-color:var(--fallback-in,oklch(var(--in)/0.16));--fc-bg-event-color:var(--fallback-n,oklch(var(--n)/1));--fc-bg-event-opacity:0.3;--fc-highlight-color:var(--fallback-s,oklch(var(--s)/0.16));--fc-today-bg-color:var(--fallback-b2,oklch(var(--b2)/0.5));--fc-now-indicator-color:var(--fallback-wa,oklch(var(--wa)/1))}@keyframes notyf-fadeinright{0%{opacity:0;transform:translateX(-25%)}to{opacity:1;transform:translateX(0)}}@keyframes notyf-fadeoutleft{0%{opacity:1;transform:translateX(0)}to{opacity:0;transform:translateX(-25%)}}@keyframes rating-jump{0%,to{transform:translateY(0) scale(1)}50%{transform:translateY(-.3em) scale(1.1)}}.advance-select-xs~.advance-select-menu .advance-select-option{width:100%;cursor:pointer;padding:.25rem .5rem;font-size:.875rem;line-height:1.25rem;font-weight:400}.advance-select-sm~.advance-select-menu .advance-select-option{width:100%;cursor:pointer;padding:.375rem .5rem;font-size:.875rem;line-height:1.25rem;font-weight:400}.advance-select-lg~.advance-select-menu .advance-select-option{width:100%;cursor:pointer;padding:.75rem 1rem;font-size:1.125rem;line-height:1.5rem;font-weight:400}.btn-sm{height:1.875rem;min-height:1.875rem;padding-left:.75rem;padding-right:.75rem;font-size:.875rem;line-height:1.25rem}.btn-square:where(.btn-sm){height:1.875rem;width:1.875rem;padding:0}.btn-circle:where(.btn-xs){height:1.5rem;width:1.5rem;border-radius:9999px;padding:0}.btn-circle:where(.btn-sm){height:1.875rem;width:1.875rem;border-radius:9999px;padding:0}.btn-circle:where(.btn-lg){height:2.875rem;width:2.875rem;border-radius:9999px;padding:0}.drawer-start{inset-inline-start:0;top:0;--tw-translate-x:-100%;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));inset-inline-end:calc(100vw - 23.45rem)}.drawer-start:where([dir=rtl],[dir=rtl] *){--tw-translate-x:100%;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.join.join-vertical{flex-direction:column}.join.join-vertical .join-item:first-child:not(:last-child),.join.join-vertical :first-child:not(:last-child) .join-item{border-end-start-radius:0;border-end-end-radius:0;border-start-start-radius:inherit;border-start-end-radius:inherit}.join.join-vertical .join-item:last-child:not(:first-child),.join.join-vertical :last-child:not(:first-child) .join-item{border-start-start-radius:0;border-start-end-radius:0;border-end-start-radius:inherit;border-end-end-radius:inherit}.menu-horizontal>li:not(.menu-title)>.collapse>ul{position:absolute}.menu-vertical>li:not(.menu-title)>.collapse>ul{position:relative}.tabs-lg :where(.tab){height:2.875rem;font-size:1.125rem;line-height:1.5rem;--tab-padding:1.25rem}.tabs-sm :where(.tab){height:1.875rem;font-size:.875rem;line-height:1.25rem;--tab-padding:0.75rem}.tabs-xs :where(.tab){height:1.5rem;font-size:.875rem;line-height:1.25rem;--tab-padding:0.5rem}.avatar.online-top:before{background-color:var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity,1)))}.avatar.offline-top:before,.avatar.online-top:before{content:"";position:absolute;z-index:10;display:block;border-radius:9999px;--tw-bg-opacity:1;outline-style:solid;outline-width:2px;outline-color:var(--fallback-b1,oklch(var(--b1)/1));width:20%;height:20%;top:3%;right:3%}.avatar.offline-top:before{background-color:var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity,1)))}.avatar.busy-top:before{background-color:var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity,1)))}.avatar.away-top:before,.avatar.busy-top:before{content:"";position:absolute;z-index:10;display:block;border-radius:9999px;--tw-bg-opacity:1;outline-style:solid;outline-width:2px;outline-color:var(--fallback-b1,oklch(var(--b1)/1));width:20%;height:20%;top:3%;right:3%}.avatar.away-top:before{background-color:var(--fallback-wa,oklch(var(--wa)/var(--tw-bg-opacity,1)))}.avatar.online-bottom:before{background-color:var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity,1)))}.avatar.offline-bottom:before,.avatar.online-bottom:before{content:"";position:absolute;z-index:10;display:block;border-radius:9999px;--tw-bg-opacity:1;outline-style:solid;outline-width:2px;outline-color:var(--fallback-b1,oklch(var(--b1)/1));width:20%;height:20%;bottom:3%;right:3%}.avatar.offline-bottom:before{background-color:var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity,1)))}.avatar.busy-bottom:before{background-color:var(--fallback-er,oklch(var(--er)/var(--tw-bg-opacity,1)))}.avatar.away-bottom:before,.avatar.busy-bottom:before{content:"";position:absolute;z-index:10;display:block;border-radius:9999px;--tw-bg-opacity:1;outline-style:solid;outline-width:2px;outline-color:var(--fallback-b1,oklch(var(--b1)/1));width:20%;height:20%;bottom:3%;right:3%}.avatar.away-bottom:before{background-color:var(--fallback-wa,oklch(var(--wa)/var(--tw-bg-opacity,1)))}:where(.card-compact) .card-body{padding:1rem}:where(.card-compact) .card-title{margin-bottom:.25rem}:where(.card-compact:has(>.card-header))>.card-body{padding-top:0}:where(.card-compact:has(>.card-body))>.card-footer{padding-top:0}.drawer-bottom,.drawer-end,.drawer-start,.drawer-top{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));transition-property:all;transition-duration:.3s;transition-timing-function:cubic-bezier(.4,0,.2,1)}.join.join-vertical>:where(:not(:first-child)){margin-left:0;margin-right:0;margin-top:-1px}.menu-horizontal>li:not(.menu-title)>.collapse>ul{margin-inline-start:0;margin-top:1rem;padding-top:.5rem;padding-bottom:.5rem;padding-inline-end:.5rem}.menu-horizontal>li>.collapse>ul:before{content:none}:where(.menu-horizontal>li:not(.menu-title)>.collapse>ul){border-radius:var(--rounded-box,.5rem);--tw-bg-opacity:1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)));--tw-shadow:0 2px 4px 0 var(--fallback-bs,oklch(var(--bs)/0.26));--tw-shadow-colored:0 2px 4px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.menu-vertical>li:not(.menu-title)>.collapse>ul{margin-inline-start:1rem;margin-top:0;padding-top:0;padding-bottom:0;padding-inline-end:0}.tabs-bordered.tabs-vertical>.tab{width:100%;justify-content:flex-start;border-bottom-width:0;border-inline-end-width:calc(var(--tab-border, 1px) + 1px)}@keyframes RomboConfettiPop{0%{opacity:0;transform:scale(1)}33%{opacity:1;transform:scale(1.15)}50%{transform:scale(.975)}65%{transform:scale(1.025)}80%{transform:scale(.99)}87%{transform:scale(1.01)}to{opacity:1;transform:scale(1)}}@keyframes topfetti{0%{background-position:5% 90%,10% 90%,10% 90%,15% 90%,25% 90%,25% 90%,40% 90%,55% 90%,70% 90%}50%{background-position:0 80%,0 20%,10% 40%,20% 0,30% 30%,22% 50%,50% 50%,65% 20%,90% 30%}to{background-position:0 70%,0 10%,10% 30%,20% -10%,30% 20%,22% 40%,50% 40%,65% 10%,90% 20%;background-size:0 0,0 0,0 0,0 0,0 0,0 0}}@keyframes bottomfetti{0%{background-position:10% -10%,30% 10%,55% -10%,70% -10%,85% -10%,70% -10%,70% 0}50%{background-position:0 80%,20% 80%,45% 60%,60% 100%,75% 70%,95% 60%,105% 0}to{background-position:0 90%,20% 90%,45% 70%,60% 110%,75% 80%,95% 70%,110% 10%;background-size:0 0,0 0,0 0,0 0,0 0,0 0}}.sr-only{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);white-space:nowrap;border-width:0}.pointer-events-none{pointer-events:none}.visible{visibility:visible}.invisible{visibility:hidden}.collapse{visibility:collapse}.static{position:static}.fixed{position:fixed}.absolute{position:absolute}.relative{position:relative}.sticky{position:sticky}.inset-0{inset:0}.inset-y-0{top:0;bottom:0}.bottom-0{bottom:0}.bottom-4{bottom:1rem}.bottom-full{bottom:100%}.left-0{left:0}.right-0{right:0}.right-2\.5{right:.625rem}.right-4{right:1rem}.top-0{top:0}.top-3{top:.75rem}.top-full{top:100%}.z-10{z-index:10}.z-50{z-index:50}.z-\[60\]{z-index:60}.-mx-3{margin-left:-.75rem;margin-right:-.75rem}.mx-auto{margin-left:auto;margin-right:auto}.my-1{margin-top:.25rem;margin-bottom:.25rem}.my-2{margin-top:.5rem;margin-bottom:.5rem}.my-4{margin-top:1rem;margin-bottom:1rem}.\!me-1{margin-inline-end:.25rem!important}.\!me-1\.5{margin-inline-end:.375rem!important}.\!ms-auto{margin-inline-start:auto!important}.mb-0\.5{margin-bottom:.125rem}.mb-1{margin-bottom:.25rem}.mb-2{margin-bottom:.5rem}.mb-2\.5{margin-bottom:.625rem}.mb-4{margin-bottom:1rem}.mb-5{margin-bottom:1.25rem}.mb-6{margin-bottom:1.5rem}.mb-8{margin-bottom:2rem}.me-2{margin-inline-end:.5rem}.ml-2{margin-left:.5rem}.ml-3{margin-left:.75rem}.ml-6{margin-left:1.5rem}.mr-2{margin-right:.5rem}.ms-2{margin-inline-start:.5rem}.ms-3{margin-inline-start:.75rem}.ms-auto{margin-inline-start:auto}.mt-1{margin-top:.25rem}.mt-2{margin-top:.5rem}.mt-3{margin-top:.75rem}.mt-4{margin-top:1rem}.mt-8{margin-top:2rem}.block{display:block}.inline-block{display:inline-block}.inline{display:inline}.\!flex{display:flex!important}.flex{display:flex}.inline-flex{display:inline-flex}.table{display:table}.list-item{display:list-item}.hidden{display:none}.size-3\.5{width:.875rem;height:.875rem}.size-4{width:1rem;height:1rem}.size-5{width:1.25rem;height:1.25rem}.size-8{width:2rem;height:2rem}.\!h-2\.5{height:.625rem!important}.h-10{height:2.5rem}.h-12{height:3rem}.h-2{height:.5rem}.h-3{height:.75rem}.h-32{height:8rem}.h-4{height:1rem}.h-40{height:10rem}.h-5{height:1.25rem}.h-6{height:1.5rem}.h-8{height:2rem}.h-full{height:100%}.h-px{height:1px}.max-h-48{max-height:12rem}.max-h-full{max-height:100%}.min-h-\[200px\]{min-height:200px}.min-h-\[calc\(100vh-8rem\)\]{min-height:calc(100vh - 8rem)}.min-h-full{min-height:100%}.min-h-screen{min-height:100vh}.\!w-2\.5{width:.625rem!important}.w-1\/2{width:50%}.w-10{width:2.5rem}.w-12{width:3rem}.w-16{width:4rem}.w-3{width:.75rem}.w-4{width:1rem}.w-5{width:1.25rem}.w-6{width:1.5rem}.w-64{width:16rem}.w-8{width:2rem}.w-full{width:100%}.min-w-0{min-width:0}.min-w-28{min-width:7rem}.min-w-44{min-width:11rem}.min-w-48{min-width:12rem}.min-w-60{min-width:15rem}.max-w-2xl{max-width:42rem}.max-w-64{max-width:16rem}.max-w-full{max-width:100%}.max-w-lg{max-width:32rem}.max-w-md{max-width:28rem}.max-w-screen-xl{max-width:1280px}.max-w-sm{max-width:24rem}.flex-1{flex:1 1 0%}.flex-none{flex:none}.flex-shrink-0,.shrink-0{flex-shrink:0}.border-collapse{border-collapse:collapse}.-translate-x-full{--tw-translate-x:-100%}.-translate-x-full,.transform{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.cursor-pointer{cursor:pointer}.resize-none{resize:none}.resize{resize:both}.list-inside{list-style-position:inside}.list-outside{list-style-position:outside}.list-decimal{list-style-type:decimal}.list-disc{list-style-type:disc}.list-none{list-style-type:none}.list-image-none{list-style-image:none}.appearance-none{-webkit-appearance:none;-moz-appearance:none;appearance:none}.flex-row{flex-direction:row}.flex-col{flex-direction:column}.flex-wrap{flex-wrap:wrap}.flex-nowrap{flex-wrap:nowrap}.items-start{align-items:flex-start}.items-center{align-items:center}.justify-start{justify-content:flex-start}.justify-end{justify-content:flex-end}.justify-center{justify-content:center}.\!justify-between{justify-content:space-between!important}.justify-between{justify-content:space-between}.gap-1{gap:.25rem}.gap-2{gap:.5rem}.gap-3{gap:.75rem}.gap-4{gap:1rem}.gap-x-1{-moz-column-gap:.25rem;column-gap:.25rem}.gap-x-2{-moz-column-gap:.5rem;column-gap:.5rem}.gap-x-3{-moz-column-gap:.75rem;column-gap:.75rem}.space-x-3>:not([hidden])~:not([hidden]){--tw-space-x-reverse:0;margin-right:calc(.75rem*var(--tw-space-x-reverse));margin-left:calc(.75rem*(1 - var(--tw-space-x-reverse)))}.space-x-4>:not([hidden])~:not([hidden]){--tw-space-x-reverse:0;margin-right:calc(1rem*var(--tw-space-x-reverse));margin-left:calc(1rem*(1 - var(--tw-space-x-reverse)))}.space-y-0\.5>:not([hidden])~:not([hidden]){--tw-space-y-reverse:0;margin-top:calc(.125rem*(1 - var(--tw-space-y-reverse)));margin-bottom:calc(.125rem*var(--tw-space-y-reverse))}.space-y-2>:not([hidden])~:not([hidden]){--tw-space-y-reverse:0;margin-top:calc(.5rem*(1 - var(--tw-space-y-reverse)));margin-bottom:calc(.5rem*var(--tw-space-y-reverse))}.space-y-6>:not([hidden])~:not([hidden]){--tw-space-y-reverse:0;margin-top:calc(1.5rem*(1 - var(--tw-space-y-reverse)));margin-bottom:calc(1.5rem*var(--tw-space-y-reverse))}.overflow-auto{overflow:auto}.overflow-hidden{overflow:hidden}.overflow-x-auto{overflow-x:auto}.overflow-y-auto{overflow-y:auto}.overflow-x-hidden{overflow-x:hidden}.overflow-y-scroll{overflow-y:scroll}.truncate{overflow:hidden;text-overflow:ellipsis}.truncate,.whitespace-nowrap{white-space:nowrap}.whitespace-pre-wrap{white-space:pre-wrap}.break-words{overflow-wrap:break-word}.rounded{border-radius:.25rem}.rounded-box{border-radius:var(--rounded-box,.5rem)}.rounded-btn{border-radius:var(--rounded-btn,.375rem)}.rounded-full{border-radius:9999px}.rounded-lg{border-radius:.5rem}.rounded-md{border-radius:.375rem}.rounded-xl{border-radius:.75rem}.rounded-b{border-bottom-right-radius:.25rem;border-bottom-left-radius:.25rem}.rounded-t{border-top-left-radius:.25rem;border-top-right-radius:.25rem}.rounded-t-lg{border-top-left-radius:.5rem;border-top-right-radius:.5rem}.border{border-width:1px}.border-0{border-width:0}.border-b{border-bottom-width:1px}.border-l-4{border-left-width:4px}.border-r{border-right-width:1px}.border-t{border-top-width:1px}.\!border-none{border-style:none!important}.border-none{border-style:none}.\!border-base-content\/40{border-color:var(--fallback-bc,oklch(var(--bc)/.4))!important}.border-base-200{--tw-border-opacity:1;border-color:var(--fallback-b2,oklch(var(--b2)/var(--tw-border-opacity,1)))}.border-base-content\/10{border-color:var(--fallback-bc,oklch(var(--bc)/.1))}.border-base-content\/20{border-color:var(--fallback-bc,oklch(var(--bc)/.2))}.border-base-content\/40{border-color:var(--fallback-bc,oklch(var(--bc)/.4))}.border-blue-400{--tw-border-opacity:1;border-color:rgb(96 165 250/var(--tw-border-opacity,1))}.border-gray-100{--tw-border-opacity:1;border-color:rgb(243 244 246/var(--tw-border-opacity,1))}.border-gray-200{--tw-border-opacity:1;border-color:rgb(229 231 235/var(--tw-border-opacity,1))}.border-gray-300{--tw-border-opacity:1;border-color:rgb(209 213 219/var(--tw-border-opacity,1))}.border-slate-200{--tw-border-opacity:1;border-color:rgb(226 232 240/var(--tw-border-opacity,1))}.\!bg-base-100{--tw-bg-opacity:1!important;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)))!important}.bg-base-100{--tw-bg-opacity:1;background-color:var(--fallback-b1,oklch(var(--b1)/var(--tw-bg-opacity,1)))}.bg-base-200{--tw-bg-opacity:1;background-color:var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity,1)))}.bg-base-shadow\/70{background-color:var(--fallback-bs,oklch(var(--bs)/.7))}.bg-blue-50{--tw-bg-opacity:1;background-color:rgb(239 246 255/var(--tw-bg-opacity,1))}.bg-gray-200{--tw-bg-opacity:1;background-color:rgb(229 231 235/var(--tw-bg-opacity,1))}.bg-gray-50{--tw-bg-opacity:1;background-color:rgb(249 250 251/var(--tw-bg-opacity,1))}.bg-gray-500{--tw-bg-opacity:1;background-color:rgb(107 114 128/var(--tw-bg-opacity,1))}.bg-gray-600{--tw-bg-opacity:1;background-color:rgb(75 85 99/var(--tw-bg-opacity,1))}.bg-gray-700{--tw-bg-opacity:1;background-color:rgb(55 65 81/var(--tw-bg-opacity,1))}.bg-gray-800{--tw-bg-opacity:1;background-color:rgb(31 41 55/var(--tw-bg-opacity,1))}.bg-green-500{--tw-bg-opacity:1;background-color:rgb(34 197 94/var(--tw-bg-opacity,1))}.bg-indigo-500{--tw-bg-opacity:1;background-color:rgb(99 102 241/var(--tw-bg-opacity,1))}.bg-neutral-content{--tw-bg-opacity:1;background-color:var(--fallback-nc,oklch(var(--nc)/var(--tw-bg-opacity,1)))}.bg-primary{--tw-bg-opacity:1;background-color:var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity,1)))}.bg-red-100{--tw-bg-opacity:1;background-color:rgb(254 226 226/var(--tw-bg-opacity,1))}.bg-red-500{--tw-bg-opacity:1;background-color:rgb(239 68 68/var(--tw-bg-opacity,1))}.bg-red-600{--tw-bg-opacity:1;background-color:rgb(220 38 38/var(--tw-bg-opacity,1))}.bg-secondary-content{--tw-bg-opacity:1;background-color:var(--fallback-sc,oklch(var(--sc)/var(--tw-bg-opacity,1)))}.bg-slate-800{--tw-bg-opacity:1;background-color:rgb(30 41 59/var(--tw-bg-opacity,1))}.bg-transparent{background-color:transparent}.bg-white{--tw-bg-opacity:1;background-color:rgb(255 255 255/var(--tw-bg-opacity,1))}.bg-opacity-65{--tw-bg-opacity:0.65}.fill-black{fill:#000}.p-0{padding:0}.p-0\.5{padding:.125rem}.p-2{padding:.5rem}.p-2\.5{padding:.625rem}.p-3{padding:.75rem}.p-4{padding:1rem}.p-6{padding:1.5rem}.p-8{padding:2rem}.\!px-2{padding-left:.5rem!important;padding-right:.5rem!important}.\!px-2\.5{padding-left:.625rem!important;padding-right:.625rem!important}.px-2{padding-left:.5rem;padding-right:.5rem}.px-2\.5{padding-left:.625rem;padding-right:.625rem}.px-3{padding-left:.75rem;padding-right:.75rem}.px-4{padding-left:1rem;padding-right:1rem}.px-5{padding-left:1.25rem;padding-right:1.25rem}.px-6{padding-left:1.5rem;padding-right:1.5rem}.py-0\.5{padding-top:.125rem;padding-bottom:.125rem}.py-1{padding-top:.25rem;padding-bottom:.25rem}.py-2{padding-top:.5rem;padding-bottom:.5rem}.py-2\.5{padding-top:.625rem;padding-bottom:.625rem}.py-3{padding-top:.75rem;padding-bottom:.75rem}.pb-2{padding-bottom:.5rem}.pb-32{padding-bottom:8rem}.pb-40{padding-bottom:10rem}.pb-6{padding-bottom:1.5rem}.pl-10{padding-left:2.5rem}.pl-3{padding-left:.75rem}.pr-16{padding-right:4rem}.pr-4{padding-right:1rem}.pt-4{padding-top:1rem}.text-left{text-align:left}.text-center{text-align:center}.text-right{text-align:right}.align-bottom{vertical-align:bottom}.\!text-sm{font-size:.875rem!important;line-height:1.25rem!important}.text-2xl{font-size:1.5rem;line-height:2rem}.text-\[10px\]{font-size:10px}.text-base{font-size:1rem;line-height:1.375rem}.text-lg{font-size:1.125rem;line-height:1.5rem}.text-sm{font-size:.875rem;line-height:1.25rem}.text-xl{font-size:1.25rem;line-height:1.625rem}.text-xs{font-size:.75rem;line-height:1rem}.\!font-medium{font-weight:500!important}.\!font-semibold{font-weight:600!important}.font-bold{font-weight:700}.font-extralight{font-weight:200}.font-medium{font-weight:500}.font-normal{font-weight:400}.font-semibold{font-weight:600}.uppercase{text-transform:uppercase}.lowercase{text-transform:lowercase}.italic{font-style:italic}.ordinal{--tw-ordinal:ordinal;font-variant-numeric:var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction)}.leading-normal{line-height:1.5}.text-base-content{--tw-text-opacity:1;color:var(--fallback-bc,oklch(var(--bc)/var(--tw-text-opacity,1)))}.text-base-content\/50{color:var(--fallback-bc,oklch(var(--bc)/.5))}.text-base-content\/60{color:var(--fallback-bc,oklch(var(--bc)/.6))}.text-base-content\/80{color:var(--fallback-bc,oklch(var(--bc)/.8))}.text-base-content\/90{color:var(--fallback-bc,oklch(var(--bc)/.9))}.text-blue-400{--tw-text-opacity:1;color:rgb(96 165 250/var(--tw-text-opacity,1))}.text-blue-600{--tw-text-opacity:1;color:rgb(37 99 235/var(--tw-text-opacity,1))}.text-blue-700{--tw-text-opacity:1;color:rgb(29 78 216/var(--tw-text-opacity,1))}.text-error{--tw-text-opacity:1;color:var(--fallback-er,oklch(var(--er)/var(--tw-text-opacity,1)))}.text-gray-400{--tw-text-opacity:1;color:rgb(156 163 175/var(--tw-text-opacity,1))}.text-gray-500{--tw-text-opacity:1;color:rgb(107 114 128/var(--tw-text-opacity,1))}.text-gray-600{--tw-text-opacity:1;color:rgb(75 85 99/var(--tw-text-opacity,1))}.text-gray-700{--tw-text-opacity:1;color:rgb(55 65 81/var(--tw-text-opacity,1))}.text-gray-900{--tw-text-opacity:1;color:rgb(17 24 39/var(--tw-text-opacity,1))}.text-green-400{--tw-text-opacity:1;color:rgb(74 222 128/var(--tw-text-opacity,1))}.text-primary{--tw-text-opacity:1;color:var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity,1)))}.text-primary-content{--tw-text-opacity:1;color:var(--fallback-pc,oklch(var(--pc)/var(--tw-text-opacity,1)))}.text-red-500{--tw-text-opacity:1;color:rgb(239 68 68/var(--tw-text-opacity,1))}.text-red-800{--tw-text-opacity:1;color:rgb(153 27 27/var(--tw-text-opacity,1))}.text-success{--tw-text-opacity:1;color:var(--fallback-su,oklch(var(--su)/var(--tw-text-opacity,1)))}.text-white{--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity,1))}.no-underline{text-decoration-line:none}.opacity-0{opacity:0}.shadow{--tw-shadow:0 2px 4px 0 var(--fallback-bs,oklch(var(--bs)/0.26));--tw-shadow-colored:0 2px 4px 0 var(--tw-shadow-color)}.shadow,.shadow-\[0_-2px_15px_-3px_rgba\(0\2c 0\2c 0\2c 0\.1\)\]{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-\[0_-2px_15px_-3px_rgba\(0\2c 0\2c 0\2c 0\.1\)\]{--tw-shadow:0 -2px 15px -3px rgba(0,0,0,.1);--tw-shadow-colored:0 -2px 15px -3px var(--tw-shadow-color)}.shadow-lg{--tw-shadow:0 10px 15px -2px var(--fallback-bs,oklch(var(--bs)/0.34));--tw-shadow-colored:0 10px 15px -2px var(--tw-shadow-color)}.shadow-lg,.shadow-md{box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-md{--tw-shadow:0 4px 6px -1px var(--fallback-bs,oklch(var(--bs)/0.2));--tw-shadow-colored:0 4px 6px -1px var(--tw-shadow-color)}.shadow-sm{--tw-shadow:0 1px 2px 0 var(--fallback-bs,oklch(var(--bs)/0.22));--tw-shadow-colored:0 1px 2px 0 var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.outline{outline-style:solid}.ring-0{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color);box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.blur{--tw-blur:blur(8px)}.blur,.filter{filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.backdrop-blur-sm{--tw-backdrop-blur:blur(4px);-webkit-backdrop-filter:var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);backdrop-filter:var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia)}.transition{transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,-webkit-backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter,-webkit-backdrop-filter;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.transition-\[height\]{transition-property:height;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.transition-all{transition-property:all;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.transition-opacity{transition-property:opacity;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.transition-transform{transition-property:transform;transition-timing-function:cubic-bezier(.4,0,.2,1);transition-duration:.15s}.duration-100{transition-duration:.1s}.duration-300{transition-duration:.3s}.duration-500{transition-duration:.5s}.\[--auto-close\:inside\]{--auto-close:inside}.\[--offset\:8\]{--offset:8}.\[--placement\:bottom-end\]{--placement:bottom-end}.\[--placement\:top\]{--placement:top}.selected .combo-box-selected\:carousel-box .carousel-box,.selected .combo-box-selected\:carousel-box.carousel-box,.selected .combo-box-selected\:carousel-dot .carousel-dot,.selected .combo-box-selected\:carousel-dot.carousel-dot{--tw-bg-opacity:1;background-color:var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity,1)))}.menu li:not(.disabled,:disabled,[disabled])>.selected .combo-box-selected\:menu:not(ul,.menu-title,.collapse,.btn),.selected .combo-box-selected\:active.advance-select-option,.selected .combo-box-selected\:active.dropdown-item{background-color:var(--fallback-p,oklch(var(--p)/.1));--tw-text-opacity:1;color:var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity,1)))}.table .selected .combo-box-selected\:activetr,.table .selected .combo-box-selected\:activetr:nth-child(2n),.table-striped .selected .combo-box-selected\:activetr,.table-striped .selected .combo-box-selected\:activetr:nth-child(2n){background-color:var(--fallback-bc,oklch(var(--bc)/.1))}.selected.combo-box-selected\:carousel-box .carousel-box,.selected.combo-box-selected\:carousel-box.carousel-box,.selected.combo-box-selected\:carousel-dot .carousel-dot,.selected.combo-box-selected\:carousel-dot.carousel-dot{--tw-bg-opacity:1;background-color:var(--fallback-p,oklch(var(--p)/var(--tw-bg-opacity,1)))}@media (hover:hover){.menu li:not(.disabled,:disabled,[disabled])>.combo-box-selected\:active:not(ul,.menu-title,.collapse,.btn){background-color:var(--fallback-p,oklch(var(--p)/.1));--tw-text-opacity:1;color:var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity,1)))}}.menu li:not(.disabled,:disabled,[disabled])>.selected.combo-box-selected\:menu:not(ul,.menu-title,.collapse,.btn),.selected.combo-box-selected\:active.advance-select-option,.selected.combo-box-selected\:active.dropdown-item{background-color:var(--fallback-p,oklch(var(--p)/.1));--tw-text-opacity:1;color:var(--fallback-p,oklch(var(--p)/var(--tw-text-opacity,1)))}.table tr.selected.combo-box-selected\:active,.table tr.selected.combo-box-selected\:active:nth-child(2n),.table-striped tr.selected.combo-box-selected\:active,.table-striped tr.selected.combo-box-selected\:active:nth-child(2n){background-color:var(--fallback-bc,oklch(var(--bc)/.1))}.complete .file-upload-complete\:progress-success,.complete.file-upload-complete\:progress-success{--tw-bg-opacity:1;background-color:var(--fallback-su,oklch(var(--su)/var(--tw-bg-opacity,1)));--tw-text-opacity:1;color:var(--fallback-suc,oklch(var(--suc)/var(--tw-text-opacity,1)));--progress-color:var(--fallback-su,oklch(var(--su)/1))}@media not all and (min-width:1024px){.max-lg\:btn-square{height:2.375rem;width:2.375rem;padding:0}.max-lg\:btn-square:where(.btn-xs){height:1.5rem;width:1.5rem;padding:0}.max-lg\:btn-square:where(.btn-sm){height:1.875rem;width:1.875rem;padding:0}.max-lg\:btn-square:where(.btn-lg){height:2.875rem;width:2.875rem;padding:0}}.marker\:text-purple-500 ::marker{color:#a855f7}.marker\:text-purple-500::marker{color:#a855f7}.last\:border-r-0:last-child{border-right-width:0}.hover\:list-item:hover{display:list-item}.hover\:list-inside:hover{list-style-position:inside}.hover\:list-outside:hover{list-style-position:outside}.hover\:list-decimal:hover{list-style-type:decimal}.hover\:list-disc:hover{list-style-type:disc}.hover\:list-none:hover{list-style-type:none}.hover\:list-image-none:hover{list-style-image:none}.hover\:bg-base-200:hover{--tw-bg-opacity:1;background-color:var(--fallback-b2,oklch(var(--b2)/var(--tw-bg-opacity,1)))}.hover\:bg-gray-100:hover{--tw-bg-opacity:1;background-color:rgb(243 244 246/var(--tw-bg-opacity,1))}.hover\:bg-gray-200:hover{--tw-bg-opacity:1;background-color:rgb(229 231 235/var(--tw-bg-opacity,1))}.hover\:bg-indigo-700:hover{--tw-bg-opacity:1;background-color:rgb(67 56 202/var(--tw-bg-opacity,1))}.hover\:bg-red-400:hover{--tw-bg-opacity:1;background-color:rgb(248 113 113/var(--tw-bg-opacity,1))}.hover\:bg-red-800:hover{--tw-bg-opacity:1;background-color:rgb(153 27 27/var(--tw-bg-opacity,1))}.hover\:bg-slate-600:hover{--tw-bg-opacity:1;background-color:rgb(71 85 105/var(--tw-bg-opacity,1))}.hover\:text-blue-500:hover{--tw-text-opacity:1;color:rgb(59 130 246/var(--tw-text-opacity,1))}.hover\:text-blue-700:hover{--tw-text-opacity:1;color:rgb(29 78 216/var(--tw-text-opacity,1))}.hover\:text-blue-900:hover{--tw-text-opacity:1;color:rgb(30 58 138/var(--tw-text-opacity,1))}.hover\:text-gray-700:hover{--tw-text-opacity:1;color:rgb(55 65 81/var(--tw-text-opacity,1))}.hover\:text-gray-900:hover{--tw-text-opacity:1;color:rgb(17 24 39/var(--tw-text-opacity,1))}.hover\:text-green-400:hover{--tw-text-opacity:1;color:rgb(74 222 128/var(--tw-text-opacity,1))}.focus\:z-10:focus{z-index:10}.focus\:list-item:focus{display:list-item}.focus\:list-inside:focus{list-style-position:inside}.focus\:list-outside:focus{list-style-position:outside}.focus\:list-decimal:focus{list-style-type:decimal}.focus\:list-disc:focus{list-style-type:disc}.focus\:list-none:focus{list-style-type:none}.focus\:list-image-none:focus{list-style-image:none}.focus\:border-blue-500:focus{--tw-border-opacity:1;border-color:rgb(59 130 246/var(--tw-border-opacity,1))}.focus\:border-primary:focus{--tw-border-opacity:1;border-color:var(--fallback-p,oklch(var(--p)/var(--tw-border-opacity,1)))}.focus\:outline-none:focus{outline:2px solid transparent;outline-offset:2px}.focus\:ring-0:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color)}.focus\:ring-0:focus,.focus\:ring-1:focus{box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.focus\:ring-1:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color)}.focus\:ring-2:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color)}.focus\:ring-2:focus,.focus\:ring-4:focus{box-shadow:var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 #0000)}.focus\:ring-4:focus{--tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);--tw-ring-shadow:var(--tw-ring-inset) 0 0 0 calc(4px + var(--tw-ring-offset-width)) var(--tw-ring-color)}.focus\:ring-blue-500:focus{--tw-ring-opacity:1;--tw-ring-color:rgb(59 130 246/var(--tw-ring-opacity,1))}.focus\:ring-gray-100:focus{--tw-ring-opacity:1;--tw-ring-color:rgb(243 244 246/var(--tw-ring-opacity,1))}.focus\:ring-primary:focus{--tw-ring-opacity:1;--tw-ring-color:var(--fallback-p,oklch(var(--p)/var(--tw-ring-opacity,1)))}.focus\:ring-red-300:focus{--tw-ring-opacity:1;--tw-ring-color:rgb(252 165 165/var(--tw-ring-opacity,1))}.active\:scale-95:active{--tw-scale-x:.95;--tw-scale-y:.95;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.group:hover .group-hover\:opacity-100{opacity:1}.dropdown.open>.dropdown-open\:rotate-180{--tw-rotate:180deg;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.dropdown.open>.dropdown-open\:opacity-100{opacity:1}.dropdown.open>.dropdown-toggle .dropdown-open\:rotate-180{--tw-rotate:180deg;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.dropdown.open>.dropdown-toggle .dropdown-open\:opacity-100{opacity:1}.dropdown.open>.dropdown-menu>.dropdown-open\:rotate-180{--tw-rotate:180deg;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.dropdown.open>.dropdown-menu>.dropdown-open\:opacity-100{opacity:1}.dropdown-menu.open.dropdown-open\:rotate-180{--tw-rotate:180deg;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.dropdown-menu.open.dropdown-open\:opacity-100{opacity:1}.collapse.open>.collapse-open\:rotate-180{--tw-rotate:180deg;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.collapse.open>.collapse-open\:bg-base-content\/10{background-color:var(--fallback-bc,oklch(var(--bc)/.1))}.collapse.open.collapse-open\:rotate-180{--tw-rotate:180deg;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.collapse.open.collapse-open\:bg-base-content\/10{background-color:var(--fallback-bc,oklch(var(--bc)/.1))}.collapse-toggle.open>.collapse-open\:rotate-180{--tw-rotate:180deg;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.collapse-toggle.open>.collapse-open\:bg-base-content\/10{background-color:var(--fallback-bc,oklch(var(--bc)/.1))}.collapse-toggle.open.collapse-open\:rotate-180{--tw-rotate:180deg;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.collapse-toggle.open.collapse-open\:bg-base-content\/10{background-color:var(--fallback-bc,oklch(var(--bc)/.1))}.open .overlay-open\:translate-x-0,.open.overlay-open\:translate-x-0{--tw-translate-x:0px;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.selected .combo-box-selected\:block,.selected.combo-box-selected\:block{display:block}@media not all and (min-width:1024px){.max-lg\:hidden{display:none}}@media (min-width:640px){.sm\:inline{display:inline}.sm\:hidden{display:none}.sm\:gap-4{gap:1rem}.sm\:rounded-lg{border-radius:.5rem}.sm\:p-4{padding:1rem}.sm\:p-6{padding:1.5rem}.sm\:px-4{padding-left:1rem;padding-right:1rem}}@media (min-width:768px){.md\:mb-0{margin-bottom:0}.md\:mb-4{margin-bottom:1rem}.md\:ml-10{margin-left:2.5rem}.md\:ml-16{margin-left:4rem}.md\:mr-10{margin-right:2.5rem}.md\:mr-16{margin-right:4rem}.md\:mt-6{margin-top:1.5rem}.md\:w-1\/2{width:50%}.md\:p-5{padding:1.25rem}.md\:px-10{padding-left:2.5rem;padding-right:2.5rem}}@media (min-width:1024px){.lg\:fixed{position:fixed}.lg\:bottom-0{bottom:0}.lg\:left-0{left:0}.lg\:left-64{left:16rem}.lg\:top-\[57px\]{top:57px}.lg\:z-40{z-index:40}.lg\:ml-64{margin-left:16rem}.lg\:flex{display:flex}.lg\:hidden{display:none}.lg\:w-\[calc\(100\%-16rem\)\]{width:calc(100% - 16rem)}.lg\:translate-x-0{--tw-translate-x:0px;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.lg\:px-12{padding-left:3rem;padding-right:3rem}.lg\:pl-64{padding-left:16rem}}.rtl\:\!mr-0:where([dir=rtl],[dir=rtl] *){margin-right:0!important}.rtl\:rotate-180:where([dir=rtl],[dir=rtl] *){--tw-rotate:180deg;transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.rtl\:\[--placement\:bottom-end\]:where([dir=rtl],[dir=rtl] *){--placement:bottom-end}@media (prefers-color-scheme:dark){.dark\:border-slate-700{--tw-border-opacity:1;border-color:rgb(51 65 85/var(--tw-border-opacity,1))}.dark\:bg-gray-700{--tw-bg-opacity:1;background-color:rgb(55 65 81/var(--tw-bg-opacity,1))}.dark\:bg-gray-800{--tw-bg-opacity:1;background-color:rgb(31 41 55/var(--tw-bg-opacity,1))}.dark\:text-gray-300{--tw-text-opacity:1;color:rgb(209 213 219/var(--tw-text-opacity,1))}}.\[\&_\.nested-collapse-wrapper\]\:space-y-0\.5 .nested-collapse-wrapper>:not([hidden])~:not([hidden]),.\[\&_ul\]\:space-y-0\.5 ul>:not([hidden])~:not([hidden]){--tw-space-y-reverse:0;margin-top:calc(.125rem*(1 - var(--tw-space-y-reverse)));margin-bottom:calc(.125rem*var(--tw-space-y-reverse))}
\ No newline at end of file
diff --git a/tailwind.config.js b/tailwind.config.js
index ce81696..b278af3 100644
--- a/tailwind.config.js
+++ b/tailwind.config.js
@@ -18,4 +18,19 @@ module.exports = {
     themes: ["light", "dark", "gourmet"],
     vendors: true, // Enable vendor-specific CSS generation
   },
+  safelist: [
+    'list-inside',
+    'list-disc',
+    'list-decimal',
+    'marker:text-purple-500',
+    'mb-2',
+    {
+      pattern: /^list-/,
+      variants: ['hover', 'focus'],
+    },
+    {
+      pattern: /^marker:/,
+      variants: ['hover', 'focus'],
+    }
+  ]
 };
diff --git a/templates/main/nav.html b/templates/main/nav.html
index 42db849..ebb281e 100644
--- a/templates/main/nav.html
+++ b/templates/main/nav.html
@@ -123,19 +123,29 @@
           <div
             id="admin-collapse-content"
             class="collapse hidden w-full overflow-hidden transition-[height] duration-300"
+            role="menu"
             aria-labelledby="admin-collapse"
           >
             <div>
-              <ul class="menu space-y-0.5 w-full">
+              <ul class="menu w-full space-y-0.5">
                 <li class="w-full">
                   <a
                     href="{{ url_for('list', collection='user') }}"
                     class="text-xs w-full px-4 py-2 hover:bg-base-200 flex items-center gap-2 rounded-lg"
                   >
-                    <span class="icon-[tabler--users] size-3.5 shrink-0"></span>
+                    <span class="icon-[tabler--users] size-5 shrink-0"></span>
                     <span class="truncate">Manage Users</span>
                   </a>
                 </li>
+                <li class="w-full">
+                  <a
+                    href="{{ url_for('list', collection='models') }}"
+                    class="text-xs w-full px-4 py-2 hover:bg-base-200 flex items-center gap-2 rounded-lg"
+                  >
+                    <span class="icon-[tabler--brain] size-5 shrink-0"></span>
+                    <span class="truncate">Manage Models</span>
+                  </a>
+                </li>
               </ul>
             </div>
           </div>
